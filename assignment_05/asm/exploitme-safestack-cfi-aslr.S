
exploitme-safestack-cfi-aslr:     file format elf64-x86-64
exploitme-safestack-cfi-aslr
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x00000000000021c0

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x0000000000000310 memsz 0x0000000000000310 flags r--
  INTERP off    0x0000000000000350 vaddr 0x0000000000000350 paddr 0x0000000000000350 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**12
         filesz 0x00000000000019d8 memsz 0x00000000000019d8 flags r--
    LOAD off    0x0000000000002000 vaddr 0x0000000000002000 paddr 0x0000000000002000 align 2**12
         filesz 0x0000000000001005 memsz 0x0000000000001005 flags r-x
    LOAD off    0x0000000000004000 vaddr 0x0000000000004000 paddr 0x0000000000004000 align 2**12
         filesz 0x0000000000000a30 memsz 0x0000000000000a30 flags r--
    LOAD off    0x0000000000004d60 vaddr 0x0000000000005d60 paddr 0x0000000000005d60 align 2**12
         filesz 0x00000000000003b0 memsz 0x0000000000000428 flags rw-
 DYNAMIC off    0x0000000000004d78 vaddr 0x0000000000005d78 paddr 0x0000000000005d78 align 2**3
         filesz 0x0000000000000230 memsz 0x0000000000000230 flags rw-
    NOTE off    0x0000000000000370 vaddr 0x0000000000000370 paddr 0x0000000000000370 align 2**3
         filesz 0x0000000000000020 memsz 0x0000000000000020 flags r--
    NOTE off    0x0000000000000390 vaddr 0x0000000000000390 paddr 0x0000000000000390 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
     TLS off    0x0000000000004d60 vaddr 0x0000000000005d60 paddr 0x0000000000005d60 align 2**3
         filesz 0x0000000000000000 memsz 0x0000000000000020 flags r--
0x6474e553 off    0x0000000000000370 vaddr 0x0000000000000370 paddr 0x0000000000000370 align 2**3
         filesz 0x0000000000000020 memsz 0x0000000000000020 flags r--
EH_FRAME off    0x0000000000004174 vaddr 0x0000000000004174 paddr 0x0000000000004174 align 2**2
         filesz 0x000000000000020c memsz 0x000000000000020c flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000004d60 vaddr 0x0000000000005d60 paddr 0x0000000000005d60 align 2**0
         filesz 0x00000000000002a0 memsz 0x00000000000002a0 flags r--

Dynamic Section:
  NEEDED               libm.so.6
  NEEDED               libresolv.so.2
  NEEDED               libc.so.6
  NEEDED               ld-linux-x86-64.so.2
  INIT                 0x0000000000002000
  FINI                 0x0000000000002ff8
  PREINIT_ARRAY        0x0000000000005d60
  PREINIT_ARRAYSZ      0x0000000000000008
  INIT_ARRAY           0x0000000000005d68
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000005d70
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x00000000000003d8
  STRTAB               0x0000000000000ff8
  SYMTAB               0x0000000000000650
  STRSZ                0x00000000000004b9
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000005fe8
  PLTRELSZ             0x0000000000000240
  PLTREL               0x0000000000000007
  JMPREL               0x0000000000001798
  RELA                 0x00000000000015d0
  RELASZ               0x00000000000001c8
  RELAENT              0x0000000000000018
  FLAGS_1              0x0000000008000000
  VERNEED              0x0000000000001580
  VERNEEDNUM           0x0000000000000002
  VERSYM               0x00000000000014b2
  RELACOUNT            0x000000000000000c

Version References:
  required from ld-linux-x86-64.so.2:
    0x0d696913 0x00 04 GLIBC_2.3
  required from libc.so.6:
    0x069691b4 0x00 03 GLIBC_2.34
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000350  0000000000000350  00000350  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.gnu.property 00000020  0000000000000370  0000000000000370  00000370  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000390  0000000000000390  00000390  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .note.ABI-tag 00000020  00000000000003b4  00000000000003b4  000003b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .gnu.hash     00000274  00000000000003d8  00000000000003d8  000003d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynsym       000009a8  0000000000000650  0000000000000650  00000650  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .dynstr       000004b9  0000000000000ff8  0000000000000ff8  00000ff8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version  000000ce  00000000000014b2  00000000000014b2  000014b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .gnu.version_r 00000050  0000000000001580  0000000000001580  00001580  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.dyn     000001c8  00000000000015d0  00000000000015d0  000015d0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .rela.plt     00000240  0000000000001798  0000000000001798  00001798  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .init         0000001b  0000000000002000  0000000000002000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt          00000190  0000000000002020  0000000000002020  00002020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .plt.got      00000008  00000000000021b0  00000000000021b0  000021b0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text         00000e38  00000000000021c0  00000000000021c0  000021c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .fini         0000000d  0000000000002ff8  0000000000002ff8  00002ff8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .rodata       00000173  0000000000004000  0000000000004000  00004000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame_hdr 0000020c  0000000000004174  0000000000004174  00004174  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .eh_frame     000006b0  0000000000004380  0000000000004380  00004380  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 .tbss         00000020  0000000000005d60  0000000000005d60  00004d60  2**3
                  ALLOC, THREAD_LOCAL
 20 .preinit_array 00000008  0000000000005d60  0000000000005d60  00004d60  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .init_array   00000008  0000000000005d68  0000000000005d68  00004d68  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .fini_array   00000008  0000000000005d70  0000000000005d70  00004d70  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .dynamic      00000230  0000000000005d78  0000000000005d78  00004d78  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .got          00000040  0000000000005fa8  0000000000005fa8  00004fa8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 25 .got.plt      000000d8  0000000000005fe8  0000000000005fe8  00004fe8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 26 .data         00000050  00000000000060c0  00000000000060c0  000050c0  2**4
                  CONTENTS, ALLOC, LOAD, DATA
 27 .bss          00000078  0000000000006110  0000000000006110  00005110  2**3
                  ALLOC
SYMBOL TABLE:
no symbols


Contents of section .interp:
 0350 2f6c6962 36342f6c 642d6c69 6e75782d  /lib64/ld-linux-
 0360 7838362d 36342e73 6f2e3200           x86-64.so.2.    
Contents of section .note.gnu.property:
 0370 04000000 10000000 05000000 474e5500  ............GNU.
 0380 028000c0 04000000 01000000 00000000  ................
Contents of section .note.gnu.build-id:
 0390 04000000 14000000 03000000 474e5500  ............GNU.
 03a0 60a161ff dc98e57d b5f44b08 d4e7e758  `.a....}..K....X
 03b0 26ad20b6                             &. .            
Contents of section .note.ABI-tag:
 03b4 04000000 10000000 01000000 474e5500  ............GNU.
 03c4 00000000 03000000 02000000 00000000  ................
Contents of section .gnu.hash:
 03d8 43000000 21000000 08000000 09000000  C...!...........
 03e8 4c114022 80116680 60302000 f4104082  L.@"..f.`0 ...@.
 03f8 0020c805 40002001 40004003 01002008  . ..@. .@.@... .
 0408 00008240 40800020 78056080 85440080  ...@@.. x.`..D..
 0418 28024c14 e8a847a9 c11841a5 41000449  (.L...G...A.A..I
 0428 21000000 24000000 25000000 26000000  !...$...%...&...
 0438 28000000 2a000000 00000000 2b000000  (...*.......+...
 0448 00000000 00000000 2c000000 2e000000  ........,.......
 0458 00000000 00000000 30000000 31000000  ........0...1...
 0468 00000000 00000000 32000000 00000000  ........2.......
 0478 33000000 35000000 37000000 00000000  3...5...7.......
 0488 00000000 38000000 00000000 3a000000  ....8.......:...
 0498 00000000 00000000 3b000000 3c000000  ........;...<...
 04a8 3d000000 00000000 40000000 00000000  =.......@.......
 04b8 42000000 00000000 00000000 00000000  B...............
 04c8 43000000 00000000 45000000 48000000  C.......E...H...
 04d8 00000000 49000000 4a000000 4c000000  ....I...J...L...
 04e8 4d000000 4e000000 4f000000 51000000  M...N...O...Q...
 04f8 00000000 53000000 00000000 54000000  ....S.......T...
 0508 59000000 5b000000 5c000000 5d000000  Y...[...\...]...
 0518 5e000000 60000000 00000000 00000000  ^...`...........
 0528 61000000 62000000 64000000 f22d977c  a...b...d....-.|
 0538 bc8b1215 af2d977c b12d977c b12d977c  .....-.|.-.|.-.|
 0548 e60dac1e b32d977c c6769e33 cb3f2d59  .....-.|.v.3.?-Y
 0558 79d8270f 45c17c0f ac4be3c0 e199d2ba  y.'.E.|..K......
 0568 e6fd6ae2 0904dae2 8dcc7c0f 6fab32c3  ..j.......|.o.2.
 0578 1986e3e1 aa93d18f 1fa39828 a43536ff  ...........(.56.
 0588 fb2c977c a73536ff b6c7e7b5 493f6628  .,.|.56.....I?f(
 0598 3362dbed 972e977c 972e977c 982e977c  3b.....|...|...|
 05a8 92f0c4e1 275fc7e2 9a2e977c 474fc15a  ....'_.....|GO.Z
 05b8 d165ce6d 8287eb80 274ee8ae 0c3a970b  .e.m....'N...:..
 05c8 3c2f9d7b 4b2db2e1 07fe6ae2 2758d8b4  </.{K-....j.'X..
 05d8 6a0943d6 4d7ef38a 932db2e1 932db2e1  j.C.M~...-...-..
 05e8 6b7f9a7c 4245d5ec cbbb32c3 4c0a2bc9  k..|BE....2.L.+.
 05f8 b94f6da7 1dea14ff e62d977c be775900  .Om......-.|.wY.
 0608 364ee8ae c63536ff 97b9d5d7 c0775900  6N...56......wY.
 0618 bbe3927c 47c44d88 65ec7c0f 65ec7c0f  ...|G.M.e.|.e.|.
 0628 e0eafce5 67ec7c0f 67ec7c0f d9ea7c0f  ....g.|.g.|...|.
 0638 d8ea7c0f d971581c b4f0c4e1 62aa3017  ..|..qX.....b.0.
 0648 1750e8ae                             .P..            
Contents of section .dynsym:
 0650 00000000 00000000 00000000 00000000  ................
 0660 00000000 00000000 60000000 12000000  ........`.......
 0670 00000000 00000000 00000000 00000000  ................
 0680 d1000000 12000000 00000000 00000000  ................
 0690 00000000 00000000 5b010000 12000000  ........[.......
 06a0 00000000 00000000 00000000 00000000  ................
 06b0 43010000 12000000 00000000 00000000  C...............
 06c0 00000000 00000000 01000000 20000000  ............ ...
 06d0 00000000 00000000 00000000 00000000  ................
 06e0 70010000 12000000 00000000 00000000  p...............
 06f0 00000000 00000000 fa010000 10000000  ................
 0700 00000000 00000000 00000000 00000000  ................
 0710 38020000 10000000 00000000 00000000  8...............
 0720 00000000 00000000 9b000000 12000000  ................
 0730 00000000 00000000 00000000 00000000  ................
 0740 70020000 10000000 00000000 00000000  p...............
 0750 00000000 00000000 96030000 12000000  ................
 0760 00000000 00000000 00000000 00000000  ................
 0770 e3000000 12000000 00000000 00000000  ................
 0780 00000000 00000000 4d020000 12000000  ........M.......
 0790 00000000 00000000 00000000 00000000  ................
 07a0 89000000 12000000 00000000 00000000  ................
 07b0 00000000 00000000 61010000 12000000  ........a.......
 07c0 00000000 00000000 00000000 00000000  ................
 07d0 fd000000 12000000 00000000 00000000  ................
 07e0 00000000 00000000 00030000 12000000  ................
 07f0 00000000 00000000 00000000 00000000  ................
 0800 1d000000 20000000 00000000 00000000  .... ...........
 0810 00000000 00000000 7a010000 12000000  ........z.......
 0820 00000000 00000000 00000000 00000000  ................
 0830 75010000 12000000 00000000 00000000  u...............
 0840 00000000 00000000 6f000000 12000000  ........o.......
 0850 00000000 00000000 00000000 00000000  ................
 0860 2e010000 12000000 00000000 00000000  ................
 0870 00000000 00000000 ca000000 12000000  ................
 0880 00000000 00000000 00000000 00000000  ................
 0890 05010000 12000000 00000000 00000000  ................
 08a0 00000000 00000000 b5000000 12000000  ................
 08b0 00000000 00000000 00000000 00000000  ................
 08c0 65000000 12000000 00000000 00000000  e...............
 08d0 00000000 00000000 2c000000 20000000  ........,... ...
 08e0 00000000 00000000 00000000 00000000  ................
 08f0 54010000 12000000 00000000 00000000  T...............
 0900 00000000 00000000 a2000000 12000000  ................
 0910 00000000 00000000 00000000 00000000  ................
 0920 46000000 12000000 00000000 00000000  F...............
 0930 00000000 00000000 1a010000 12000000  ................
 0940 00000000 00000000 00000000 00000000  ................
 0950 f6000000 11000000 00000000 00000000  ................
 0960 00000000 00000000 f0010000 12000f00  ................
 0970 402d0000 00000000 06000000 00000000  @-..............
 0980 ea020000 11001b00 e0600000 00000000  .........`......
 0990 30000000 00000000 45030000 12000f00  0.......E.......
 09a0 702c0000 00000000 0a000000 00000000  p,..............
 09b0 88040000 12000f00 c02c0000 00000000  .........,......
 09c0 11000000 00000000 4a030000 12000f00  ........J.......
 09d0 e02c0000 00000000 15000000 00000000  .,..............
 09e0 54020000 12000f00 402e0000 00000000  T.......@.......
 09f0 33000000 00000000 83040000 12000f00  3...............
 0a00 002d0000 00000000 19000000 00000000  .-..............
 0a10 fe020000 12000f00 802c0000 00000000  .........,......
 0a20 11000000 00000000 65040000 12000f00  ........e.......
 0a30 c0220000 00000000 2a020000 00000000  ."......*.......
 0a40 cd020000 11001b00 d0600000 00000000  .........`......
 0a50 08000000 00000000 3f030000 12000f00  ........?.......
 0a60 002c0000 00000000 05000000 00000000  .,..............
 0a70 62030000 11001100 00400000 00000000  b........@......
 0a80 04000000 00000000 e4030000 22000f00  ............"...
 0a90 ac220000 00000000 05000000 00000000  ."..............
 0aa0 1d020000 12000f00 202d0000 00000000  ........ -......
 0ab0 07000000 00000000 68020000 12000f00  ........h.......
 0ac0 e02a0000 00000000 06000000 00000000  .*..............
 0ad0 a4020000 12000f00 a02d0000 00000000  .........-......
 0ae0 04000000 00000000 d3020000 12000f00  ................
 0af0 002a0000 00000000 1a000000 00000000  .*..............
 0b00 e8010000 12000f00 f02f0000 00000000  ........./......
 0b10 28000000 00000000 bc020000 12000f00  (...............
 0b20 20260000 00000000 cc010000 00000000   &..............
 0b30 94030000 12000f00 202e0000 00000000  ........ .......
 0b40 16000000 00000000 16020000 12000f00  ................
 0b50 402c0000 00000000 05000000 00000000  @,..............
 0b60 f3030000 12000f00 902d0000 00000000  .........-......
 0b70 04000000 00000000 81030000 12000f00  ................
 0b80 502c0000 00000000 05000000 00000000  P,..............
 0b90 25020000 12000f00 902b0000 00000000  %........+......
 0ba0 04000000 00000000 2f020000 12000f00  ......../.......
 0bb0 202c0000 00000000 0a000000 00000000   ,..............
 0bc0 2b030000 12000f00 c0210000 00000000  +........!......
 0bd0 26000000 00000000 8d020000 12000f00  &...............
 0be0 002b0000 00000000 03000000 00000000  .+..............
 0bf0 b3030000 12000f00 a02b0000 00000000  .........+......
 0c00 04000000 00000000 92020000 12000f00  ................
 0c10 b02b0000 00000000 04000000 00000000  .+..............
 0c20 88030000 12000f00 d02a0000 00000000  .........*......
 0c30 03000000 00000000 f8030000 12000f00  ................
 0c40 d02f0000 00000000 28000000 00000000  ./......(.......
 0c50 97020000 12000f00 102c0000 00000000  .........,......
 0c60 08000000 00000000 00040000 12000f00  ................
 0c70 e0290000 00000000 1a000000 00000000  .)..............
 0c80 0b010000 22000000 00000000 00000000  ...."...........
 0c90 00000000 00000000 cb010000 16001400  ................
 0ca0 00000000 00000000 08000000 00000000  ................
 0cb0 9d030000 12000f00 202b0000 00000000  ........ +......
 0cc0 04000000 00000000 27030000 20001b00  ........'... ...
 0cd0 c0600000 00000000 00000000 00000000  .`..............
 0ce0 49040000 12000f00 802e0000 00000000  I...............
 0cf0 75000000 00000000 57040000 12000f00  u.......W.......
 0d00 d02b0000 00000000 05000000 00000000  .+..............
 0d10 9c020000 12000f00 302d0000 00000000  ........0-......
 0d20 07000000 00000000 c1010000 12000f00  ................
 0d30 802b0000 00000000 04000000 00000000  .+..............
 0d40 25030000 10001b00 c0600000 00000000  %........`......
 0d50 00000000 00000000 1f040000 12000f00  ................
 0d60 90290000 00000000 1a000000 00000000  .)..............
 0d70 71030000 12000f00 e02b0000 00000000  q........+......
 0d80 05000000 00000000 b9010000 12000f00  ................
 0d90 f02b0000 00000000 05000000 00000000  .+..............
 0da0 de000000 12000f00 002f0000 00000000  ........./......
 0db0 ad000000 00000000 61020000 10001b00  ........a.......
 0dc0 10610000 00000000 00000000 00000000  .a..............
 0dd0 0e030000 12000f00 b0290000 00000000  .........)......
 0de0 24000000 00000000 66040000 22000f00  $.......f..."...
 0df0 c0220000 00000000 2a020000 00000000  ."......*.......
 0e00 8d040000 12000f00 e82f0000 00000000  ........./......
 0e10 28000000 00000000 32030000 12000f00  (.......2.......
 0e20 c02b0000 00000000 05000000 00000000  .+..............
 0e30 f5010000 12000f00 d82f0000 00000000  ........./......
 0e40 28000000 00000000 5e020000 12000f00  (.......^.......
 0e50 b02d0000 00000000 19000000 00000000  .-..............
 0e60 aa020000 12000f00 602b0000 00000000  ........`+......
 0e70 04000000 00000000 5b030000 12000f00  ........[.......
 0e80 e02f0000 00000000 28000000 00000000  ./......(.......
 0e90 3f040000 12000f00 702b0000 00000000  ?.......p+......
 0ea0 04000000 00000000 79030000 12000f00  ........y.......
 0eb0 d02d0000 00000000 13000000 00000000  .-..............
 0ec0 7c030000 10001c00 88610000 00000000  |........a......
 0ed0 00000000 00000000 cb030000 12000f00  ................
 0ee0 ac220000 00000000 05000000 00000000  ."..............
 0ef0 08030000 12000f00 502d0000 00000000  ........P-......
 0f00 06000000 00000000 19040000 12000f00  ................
 0f10 602d0000 00000000 07000000 00000000  `-..............
 0f20 b4020000 12000f00 602c0000 00000000  ........`,......
 0f30 08000000 00000000 f8020000 12000f00  ................
 0f40 702d0000 00000000 07000000 00000000  p-..............
 0f50 39040000 12000f00 802d0000 00000000  9........-......
 0f60 07000000 00000000 5f040000 12000f00  ........_.......
 0f70 b02f0000 00000000 08000000 00000000  ./..............
 0f80 39030000 12000f00 c02f0000 00000000  9......../......
 0f90 08000000 00000000 a7030000 10001c00  ................
 0fa0 10610000 00000000 00000000 00000000  .a..............
 0fb0 4f030000 12000f00 c02a0000 00000000  O........*......
 0fc0 06000000 00000000 b8030000 12000f00  ................
 0fd0 f02d0000 00000000 13000000 00000000  .-..............
 0fe0 c1030000 12000f00 102b0000 00000000  .........+......
 0ff0 04000000 00000000                    ........        
Contents of section .dynstr:
 0ff8 005f4954 4d5f6465 72656769 73746572  ._ITM_deregister
 1008 544d436c 6f6e6554 61626c65 005f5f67  TMCloneTable.__g
 1018 6d6f6e5f 73746172 745f5f00 5f49544d  mon_start__._ITM
 1028 5f726567 69737465 72544d43 6c6f6e65  _registerTMClone
 1038 5461626c 65007074 68726561 645f6174  Table.pthread_at
 1048 74725f67 65747374 61636b73 697a6500  tr_getstacksize.
 1058 66726565 00676574 726c696d 69740070  free.getrlimit.p
 1068 74687265 61645f61 7474725f 67657467  thread_attr_getg
 1078 75617264 73697a65 00707468 72656164  uardsize.pthread
 1088 5f617474 725f696e 69740067 65747069  _attr_init.getpi
 1098 64007074 68726561 645f6d75 7465785f  d.pthread_mutex_
 10a8 6c6f636b 00707468 72656164 5f617474  lock.pthread_att
 10b8 725f6465 7374726f 79006d61 6c6c6f63  r_destroy.malloc
 10c8 005f5f6c 6962635f 73746172 745f6d61  .__libc_start_ma
 10d8 696e0070 74687265 61645f6b 65795f63  in.pthread_key_c
 10e8 72656174 65007374 64657272 00667072  reate.stderr.fpr
 10f8 696e7466 00646c73 796d005f 5f637861  intf.dlsym.__cxa
 1108 5f66696e 616c697a 65007074 68726561  _finalize.pthrea
 1118 645f7365 74737065 63696669 63007074  d_setspecific.pt
 1128 68726561 645f6d75 7465785f 756e6c6f  hread_mutex_unlo
 1138 636b005f 5f657272 6e6f5f6c 6f636174  ck.__errno_locat
 1148 696f6e00 646c7673 796d0061 626f7274  ion.dlvsym.abort
 1158 005f5f74 6c735f67 65745f61 64647200  .__tls_get_addr.
 1168 70757473 00676574 73007374 72746f6c  puts.gets.strtol
 1178 006c6962 6d2e736f 2e36006c 69627265  .libm.so.6.libre
 1188 736f6c76 2e736f2e 32006c69 62632e73  solv.so.2.libc.s
 1198 6f2e3600 6c642d6c 696e7578 2d783836  o.6.ld-linux-x86
 11a8 2d36342e 736f2e32 00675f69 6e633539  -64.so.2.g_inc59
 11b8 00675f72 64693272 6178005f 5f736166  .g_rdi2rax.__saf
 11c8 65737461 636b5f75 6e736166 655f7374  estack_unsafe_st
 11d8 61636b5f 70747200 675f6c65 616b3100  ack_ptr.g_leak1.
 11e8 675f7374 00675f73 68005f5f 73616e69  g_st.g_sh.__sani
 11f8 74697a65 725f696e 7465726e 616c5f6d  tizer_internal_m
 1208 656d6370 79006761 64647878 00675f73  emcpy.gaddxx.g_s
 1218 75627879 00675f72 64783272 61780067  ubxy.g_rdx2rax.g
 1228 5f706f70 72647800 5f5f7361 6e697469  _poprdx.__saniti
 1238 7a65725f 696e7465 726e616c 5f6d656d  zer_internal_mem
 1248 73657400 76756c6e 5f6c6561 6b006733  set.vuln_leak.g3
 1258 005f6564 61746100 675f7979 72657400  ._edata.g_yyret.
 1268 5f5f7361 6e697469 7a65725f 696e7465  __sanitizer_inte
 1278 726e616c 5f6d656d 6d6f7665 00675f7a  rnal_memmove.g_z
 1288 3100675f 7a330067 5f7a3500 675f7375  1.g_z3.g_z5.g_su
 1298 62797800 675f6c64 3200675f 72617832  byx.g_ld2.g_rax2
 12a8 72647800 67616464 78797a00 5f5f7361  rdx.gaddxyz.__sa
 12b8 66657374 61636b5f 696e6974 0062696e  festack_init.bin
 12c8 7368005f 5f676574 5f756e73 6166655f  sh.__get_unsafe_
 12d8 73746163 6b5f7074 72006164 64726573  stack_ptr.addres
 12e8 735f7461 6b656e00 675f7374 3400675f  s_taken.g_st4.g_
 12f8 73797363 616c6c00 675f7374 32005f5f  syscall.g_st2.__
 1308 6765745f 756e7361 66655f73 7461636b  get_unsafe_stack
 1318 5f746f70 005f5f64 6174615f 73746172  _top.__data_star
 1328 7400675f 696e6338 00675f73 68330067  t.g_inc8.g_sh3.g
 1338 5f696e63 00675f73 3100675f 73330067  _inc.g_s1.g_s3.g
 1348 5f617267 32736574 79790067 61646479  _arg2setyy.gaddy
 1358 79005f49 4f5f7374 64696e5f 75736564  y._IO_stdin_used
 1368 00675f69 6e633538 00673400 5f656e64  .g_inc58.g4._end
 1378 00676164 64787900 675f6172 67327365  .gaddxy.g_arg2se
 1388 74787800 675f7072 696e7466 00675f72  txx.g_printf.g_r
 1398 61783272 6469005f 5f627373 5f737461  ax2rdi.__bss_sta
 13a8 72740067 5f7a3200 675f6963 616c6c32  rt.g_z2.g_icall2
 13b8 00675f72 61783272 7369005f 5f696e74  .g_rax2rsi.__int
 13c8 65726365 70746f72 5f747261 6d706f6c  erceptor_trampol
 13d8 696e655f 70746872 6561645f 63726561  ine_pthread_crea
 13e8 74650067 5f6c6400 675f7878 72657400  te.g_ld.g_xxret.
 13f8 5f5f6765 745f756e 73616665 5f737461  __get_unsafe_sta
 1408 636b5f73 74617274 00675f73 7433005f  ck_start.g_st3._
 1418 5f676574 5f756e73 6166655f 73746163  _get_unsafe_stac
 1428 6b5f626f 74746f6d 00675f73 74350067  k_bottom.g_st5.g
 1438 5f727369 32726178 0076756c 6e5f6f76  _rsi2rax.vuln_ov
 1448 6572666c 6f770067 5f696e63 33320067  erflow.g_inc32.g
 1458 5f736832 005f5f5f 696e7465 72636570  _sh2.___intercep
 1468 746f725f 70746872 6561645f 63726561  tor_pthread_crea
 1478 74650067 5f733400 675f7332 00675f73  te.g_s4.g_s2.g_s
 1488 79736361 6c6c3200 474c4942 435f322e  yscall2.GLIBC_2.
 1498 3300474c 4942435f 322e3334 00474c49  3.GLIBC_2.34.GLI
 14a8 42435f32 2e322e35 00                 BC_2.2.5.       
Contents of section .gnu.version:
 14b2 00000200 03000200 02000100 02000100  ................
 14c2 01000200 01000200 03000200 02000400  ................
 14d2 02000200 01000200 02000300 02000200  ................
 14e2 03000200 02000100 03000200 03000300  ................
 14f2 02000100 01000100 01000100 01000100  ................
 1502 01000100 01000100 01000100 01000100  ................
 1512 01000100 01000100 01000100 01000100  ................
 1522 01000100 01000100 01000100 01000100  ................
 1532 01000100 02000100 01000100 01000100  ................
 1542 01000100 01000100 01000100 01000100  ................
 1552 01000100 01000100 01000100 01000100  ................
 1562 01000100 01000100 01000100 01000100  ................
 1572 01000100 01000100 01000100 0100      ..............  
Contents of section .gnu.version_r:
 1580 01000100 a4010000 10000000 20000000  ............ ...
 1590 1369690d 00000400 98040000 00000000  .ii.............
 15a0 01000200 9a010000 10000000 00000000  ................
 15b0 b4919606 00000300 a2040000 10000000  ................
 15c0 751a6909 00000200 ad040000 00000000  u.i.............
Contents of section .rela.dyn:
 15d0 605d0000 00000000 08000000 00000000  `]..............
 15e0 20260000 00000000 685d0000 00000000   &......h]......
 15f0 08000000 00000000 a0220000 00000000  ........."......
 1600 705d0000 00000000 08000000 00000000  p]..............
 1610 60220000 00000000 c85f0000 00000000  `"......._......
 1620 08000000 00000000 e02f0000 00000000  ........./......
 1630 c8600000 00000000 08000000 00000000  .`..............
 1640 c8600000 00000000 d0600000 00000000  .`.......`......
 1650 08000000 00000000 1f410000 00000000  .........A......
 1660 e0600000 00000000 08000000 00000000  .`..............
 1670 d02f0000 00000000 e8600000 00000000  ./.......`......
 1680 08000000 00000000 e82f0000 00000000  ........./......
 1690 f0600000 00000000 08000000 00000000  .`..............
 16a0 f02f0000 00000000 f8600000 00000000  ./.......`......
 16b0 08000000 00000000 d82f0000 00000000  ........./......
 16c0 00610000 00000000 08000000 00000000  .a..............
 16d0 b02f0000 00000000 08610000 00000000  ./.......a......
 16e0 08000000 00000000 c02f0000 00000000  ........./......
 16f0 a85f0000 00000000 12000000 43000000  ._..........C...
 1700 00000000 00000000 b05f0000 00000000  ........._......
 1710 06000000 02000000 00000000 00000000  ................
 1720 b85f0000 00000000 06000000 05000000  ._..............
 1730 00000000 00000000 c05f0000 00000000  ........._......
 1740 06000000 12000000 00000000 00000000  ................
 1750 d05f0000 00000000 06000000 1b000000  ._..............
 1760 00000000 00000000 d85f0000 00000000  ........._......
 1770 06000000 42000000 00000000 00000000  ....B...........
 1780 e05f0000 00000000 06000000 20000000  ._.......... ...
 1790 00000000 00000000                    ........        
Contents of section .rela.plt:
 1798 00600000 00000000 07000000 01000000  .`..............
 17a8 00000000 00000000 08600000 00000000  .........`......
 17b8 07000000 03000000 00000000 00000000  ................
 17c8 10600000 00000000 07000000 04000000  .`..............
 17d8 00000000 00000000 18600000 00000000  .........`......
 17e8 07000000 06000000 00000000 00000000  ................
 17f8 20600000 00000000 07000000 09000000   `..............
 1808 00000000 00000000 28600000 00000000  ........(`......
 1818 07000000 0b000000 00000000 00000000  ................
 1828 30600000 00000000 07000000 0c000000  0`..............
 1838 00000000 00000000 38600000 00000000  ........8`......
 1848 07000000 0d000000 00000000 00000000  ................
 1858 40600000 00000000 07000000 0e000000  @`..............
 1868 00000000 00000000 48600000 00000000  ........H`......
 1878 07000000 0f000000 00000000 00000000  ................
 1888 50600000 00000000 07000000 10000000  P`..............
 1898 00000000 00000000 58600000 00000000  ........X`......
 18a8 07000000 11000000 00000000 00000000  ................
 18b8 60600000 00000000 07000000 13000000  ``..............
 18c8 00000000 00000000 68600000 00000000  ........h`......
 18d8 07000000 14000000 00000000 00000000  ................
 18e8 70600000 00000000 07000000 15000000  p`..............
 18f8 00000000 00000000 78600000 00000000  ........x`......
 1908 07000000 16000000 00000000 00000000  ................
 1918 80600000 00000000 07000000 17000000  .`..............
 1928 00000000 00000000 88600000 00000000  .........`......
 1938 07000000 18000000 00000000 00000000  ................
 1948 90600000 00000000 07000000 19000000  .`..............
 1958 00000000 00000000 98600000 00000000  .........`......
 1968 07000000 1a000000 00000000 00000000  ................
 1978 a0600000 00000000 07000000 1c000000  .`..............
 1988 00000000 00000000 a8600000 00000000  .........`......
 1998 07000000 1d000000 00000000 00000000  ................
 19a8 b0600000 00000000 07000000 1e000000  .`..............
 19b8 00000000 00000000 b8600000 00000000  .........`......
 19c8 07000000 1f000000 00000000 00000000  ................
Contents of section .init:
 2000 f30f1efa 4883ec08 488b05b1 3f000048  ....H...H...?..H
 2010 85c07402 ffd04883 c408c3             ..t...H....     
Contents of section .plt:
 2020 ff35ca3f 0000ff25 cc3f0000 0f1f4000  .5.?...%.?....@.
 2030 ff25ca3f 00006800 000000e9 e0ffffff  .%.?..h.........
 2040 ff25c23f 00006801 000000e9 d0ffffff  .%.?..h.........
 2050 ff25ba3f 00006802 000000e9 c0ffffff  .%.?..h.........
 2060 ff25b23f 00006803 000000e9 b0ffffff  .%.?..h.........
 2070 ff25aa3f 00006804 000000e9 a0ffffff  .%.?..h.........
 2080 ff25a23f 00006805 000000e9 90ffffff  .%.?..h.........
 2090 ff259a3f 00006806 000000e9 80ffffff  .%.?..h.........
 20a0 ff25923f 00006807 000000e9 70ffffff  .%.?..h.....p...
 20b0 ff258a3f 00006808 000000e9 60ffffff  .%.?..h.....`...
 20c0 ff25823f 00006809 000000e9 50ffffff  .%.?..h.....P...
 20d0 ff257a3f 0000680a 000000e9 40ffffff  .%z?..h.....@...
 20e0 ff25723f 0000680b 000000e9 30ffffff  .%r?..h.....0...
 20f0 ff256a3f 0000680c 000000e9 20ffffff  .%j?..h..... ...
 2100 ff25623f 0000680d 000000e9 10ffffff  .%b?..h.........
 2110 ff255a3f 0000680e 000000e9 00ffffff  .%Z?..h.........
 2120 ff25523f 0000680f 000000e9 f0feffff  .%R?..h.........
 2130 ff254a3f 00006810 000000e9 e0feffff  .%J?..h.........
 2140 ff25423f 00006811 000000e9 d0feffff  .%B?..h.........
 2150 ff253a3f 00006812 000000e9 c0feffff  .%:?..h.........
 2160 ff25323f 00006813 000000e9 b0feffff  .%2?..h.........
 2170 ff252a3f 00006814 000000e9 a0feffff  .%*?..h.........
 2180 ff25223f 00006815 000000e9 90feffff  .%"?..h.........
 2190 ff251a3f 00006816 000000e9 80feffff  .%.?..h.........
 21a0 ff25123f 00006817 000000e9 70feffff  .%.?..h.....p...
Contents of section .plt.got:
 21b0 ff25223e 00006690                    .%">..f.        
Contents of section .text:
 21c0 f30f1efa 31ed4989 d15e4889 e24883e4  ....1.I..^H..H..
 21d0 f0505445 31c031c9 488d3d21 0d0000ff  .PTE1.1.H.=!....
 21e0 15cb3d00 00f4662e 0f1f8400 00000000  ..=...f.........
 21f0 488d3d19 3f000048 8d05123f 00004839  H.=.?..H...?..H9
 2200 f8741548 8b05ae3d 00004885 c07409ff  .t.H...=..H..t..
 2210 e00f1f80 00000000 c30f1f80 00000000  ................
 2220 488d3de9 3e000048 8d35e23e 00004829  H.=.>..H.5.>..H)
 2230 fe4889f0 48c1ee3f 48c1f803 4801c648  .H..H..?H...H..H
 2240 d1fe7414 488b0585 3d000048 85c07408  ..t.H...=..H..t.
 2250 ffe0660f 1f440000 c30f1f80 00000000  ..f..D..........
 2260 f30f1efa 803da53e 00000075 2b554883  .....=.>...u+UH.
 2270 3d623d00 00004889 e5740c48 8b3d463e  =b=...H..t.H.=F>
 2280 0000e829 ffffffe8 64ffffff c6057d3e  ...)....d.....}>
 2290 0000015d c30f1f00 c30f1f80 00000000  ...]............
 22a0 f30f1efa e977ffff ff0f1f00 e90f0000  .....w..........
 22b0 00662e0f 1f840000 0000000f 1f440000  .f...........D..
 22c0 f30f1efa 55415741 56415541 54534883  ....UAWAVAUATSH.
 22d0 ec584989 cf4989d4 4889f349 89fe488d  .XI..I..H..I..H.
 22e0 3d433e00 00e896fe ffff803d 5f3e0000  =C>........=_>..
 22f0 00752848 8d3d7c1d 0000488d 35173e00  .u(H.=|...H.5.>.
 2300 00488d15 a4ffffff 488d0d9d ffffffe8  .H......H.......
 2310 0c070000 c605353e 00000148 8d3d063e  ......5>...H.=.>
 2320 0000e8f9 fdffff48 c7442410 00000000  .......H.D$.....
 2330 48c74424 18000000 004885db 0f84db00  H.D$.....H......
 2340 0000488d 74241048 89dfe841 feffff48  ..H.t$.H...A...H
 2350 8d742418 4889dfe8 b4fdffff 488b5424  .t$.H.......H.T$
 2360 104885d2 0f84f000 00004883 c20f4883  .H........H...H.
 2370 e2f04889 5424104c 8b6c2418 4c01ea0f  ..H.T$.L.l$.L...
 2380 82050100 0048c704 24000000 00bf0900  .....H..$.......
 2390 000031f6 b9030000 0041b822 00000041  ..1......A."...A
 23a0 b9ffffff ff31c0e8 34fdffff 4883f8ff  .....1..4...H...
 23b0 0f840401 00004889 c5bf0a00 00004889  ......H.......H.
 23c0 c64c89ea 31c931c0 e813fdff ff4c01ed  .L..1.1......L..
 23d0 488b4424 10488d0c 284883c1 d84c8964  H.D$.H..(H...L.d
 23e0 28d84c89 7c28e048 896c28e8 48894428  (.L.|(.H.l(.H.D(
 23f0 f0488b54 24184889 5428f848 8d15ee00  .H.T$.H.T(.H....
 2400 00004c89 f74889de ff150a3d 00004883  ..L..H.....=..H.
 2410 c4585b41 5c415d41 5e415f5d c34c8d6c  .X[A\A]A^A_].L.l
 2420 24204c89 efe886fc ffff488d 7424104c  $ L.......H.t$.L
 2430 89efe859 fdffff48 8d742418 4c89efe8  ...Y...H.t$.L...
 2440 ccfcffff 4c89efe8 04fdffff 488b5424  ....L.......H.T$
 2450 104885d2 0f8510ff ffff488b 057f3b00  .H........H...;.
 2460 00488b38 488d3599 1b000048 8d15b41b  .H.8H.5....H....
 2470 00004c8d 05e51b00 00b9e300 000031c0  ..L...........1.
 2480 e84bfcff ffe8b6fb ffff488b 054f3b00  .K........H..O;.
 2490 00488b38 488d3569 1b000048 8d15841b  .H.8H.5i...H....
 24a0 00004c8d 05a51b00 00b95c00 000031c0  ..L.......\...1.
 24b0 e81bfcff ffe886fb ffff488b 051f3b00  ..........H...;.
 24c0 00488b38 488d3539 1b000048 8d15541b  .H.8H.59...H..T.
 24d0 00004c8d 058a1b00 00b95f00 000031c0  ..L......._...1.
 24e0 e8ebfbff ffe856fb ffff660f 1f440000  ......V...f..D..
 24f0 f30f1efa 55415741 56415541 5453504c  ....UAWAVAUATSPL
 2500 8b77184d 85f60f88 80000000 4c8b7f20  .w.M........L.. 
 2510 4d85ff0f 88a30000 004c8b67 104f8d2c  M........L.g.O.,
 2520 3441f6c5 0f0f85c1 00000048 8b2f488b  4A.........H./H.
 2530 5f086448 8b042500 00000048 0305663a  _.dH..%....H..f:
 2540 00004c89 28666666 64488b04 25000000  ..L.(fffdH..%...
 2550 004c89a0 e8ffffff 4c89b0f0 ffffff4c  .L......L......L
 2560 89b8f8ff ffff8b3d b43b0000 be010000  .......=.;......
 2570 00e82afc ffff4889 df4889e8 4883c408  ..*...H..H..H...
 2580 5b415c41 5d415e41 5f5dffe0 488b054d  [A\A]A^A_]..H..M
 2590 3a000048 8b38488d 35671a00 00488d15  :..H.8H.5g...H..
 25a0 821a0000 4c8d05da 1a0000b9 65000000  ....L.......e...
 25b0 31c0e819 fbffffe8 84faffff 488b051d  1...........H...
 25c0 3a000048 8b38488d 35371a00 00488d15  :..H.8H.57...H..
 25d0 521a0000 4c8d05d0 1a0000b9 66000000  R...L.......f...
 25e0 31c0e8e9 faffffe8 54faffff 488b05ed  1.......T...H...
 25f0 39000048 8b38488d 35071a00 00488d15  9..H.8H.5....H..
 2600 221a0000 4c8d05c7 1a0000b9 68000000  "...L.......h...
 2610 31c0e8b9 faffffe8 24faffff 0f1f4000  1.......$.....@.
 2620 f30f1efa 41574156 534883ec 20488d74  ....AWAVSH.. H.t
 2630 2410bf03 000000e8 24fbffff 4c8b7424  $.......$...L.t$
 2640 104983fe ffb90000 80024c0f 44f185c0  .I........L.D...
 2650 4c0f45f1 4981fe00 f0ffff0f 83cb0000  L.E.I...........
 2660 00498d96 00100000 48c70424 00000000  .I......H..$....
 2670 bf090000 0031f6b9 03000000 41b82200  .....1......A.".
 2680 000041b9 ffffffff 31c0e851 faffff48  ..A.....1..Q...H
 2690 83f8ff0f 84c30000 004889c3 bf0a0000  .........H......
 26a0 00ba0010 00004889 c631c931 c0e82efa  ......H..1.1....
 26b0 ffff4d85 f60f88d1 0000004e 8d3c3349  ..M........N.<3I
 26c0 81c70010 000041f6 c70f0f85 ec000000  ......A.........
 26d0 4881c300 10000064 488b0425 00000000  H......dH..%....
 26e0 480305c1 3800004c 89386666 6664488b  H...8..L.8fffdH.
 26f0 04250000 00004889 98e8ffff ff4c89b0  .%....H......L..
 2700 f0ffffff 48c780f8 ffffff00 10000048  ....H..........H
 2710 8d3d0a3a 0000488d 35d30000 00e86ef9  .=.:..H.5.....n.
 2720 ffff4883 c4205b41 5e415fc3 488b05ad  ..H.. [A^A_.H...
 2730 38000048 8b38488d 35c71800 00488d15  8..H.8H.5....H..
 2740 e2180000 4c8d0503 190000b9 5c000000  ....L.......\...
 2750 31c0e879 f9ffffe8 e4f8ffff 488b057d  1..y........H..}
 2760 38000048 8b38488d 35971800 00488d15  8..H.8H.5....H..
 2770 b2180000 4c8d05e8 180000b9 5f000000  ....L......._...
 2780 31c0e849 f9ffffe8 b4f8ffff 488b054d  1..I........H..M
 2790 38000048 8b38488d 35671800 00488d15  8..H.8H.5g...H..
 27a0 82180000 4c8d05da 180000b9 65000000  ....L.......e...
 27b0 31c0e819 f9ffffe8 84f8ffff 488b051d  1...........H...
 27c0 38000048 8b38488d 35371800 00488d15  8..H.8H.57...H..
 27d0 52180000 4c8d05f7 180000b9 68000000  R...L.......h...
 27e0 31c0e8e9 f8ffffe8 54f8ffff 0f1f4000  1.......T.....@.
 27f0 f30f1efa 55415741 56415541 54535066  ....UAWAVAUATSPf
 2800 66666448 8b042500 00000048 83b8e8ff  ffdH..%....H....
 2810 ffff000f 84470100 004889c3 4c8da0e8  .....G...H..L...
 2820 ffffff8b 3df73800 0031f6e8 70f9ffff  ....=.8..1..p...
 2830 4c8d3521 3900004c 89f7e841 f9ffff4c  L.5!9..L...A...L
 2840 8b3d3a39 00004c89 3c2448c7 052b3900  .=:9..L.<$H..+9.
 2850 00000000 004c89f7 e8c3f8ff ffe80ef8  .....L..........
 2860 ffff89c5 bfba0000 0031c0e8 70f8ffff  .........1..p...
 2870 4989c649 89e5eb2f 0f1f8400 00000000  I..I.../........
 2880 498b7708 498b5710 bf0b0000 0031c0e8  I.w.I.W......1..
 2890 4cf8ffff 498b0749 8945004c 89ffe88d  L...I..I.E.L....
 28a0 f7ffff4d 8b7d004d 85ff743c 41396f18  ...M.}.M..t<A9o.
 28b0 75ce498b 5720bfea 00000089 ee31c931  u.I.W .......1.1
 28c0 c0e81af8 ffff83f8 ff7515e8 80f7ffff  .........u......
 28d0 83380374 ab4d89fd 4d8b3feb ca0f1f00  .8.t.M..M.?.....
 28e0 4d89fd4d 8b3febbf bf280000 00e83ef8  M..M.?...(....>.
 28f0 ffff4989 c7498b0c 24488b93 f8ffffff  ..I..I..$H......
 2900 4829d148 89480848 0393f0ff ffff4889  H).H.H.H......H.
 2910 50108968 184c8970 20488d1d 38380000  P..h.L.p H..88..
 2920 4889dfe8 58f8ffff 488b0551 38000049  H...X...H..Q8..I
 2930 89450048 8b042449 89074c89 3d3f3800  .E.H..$I..L.=?8.
 2940 004889df e8d7f7ff ff49c704 24000000  .H.......I..$...
 2950 004883c4 085b415c 415d415e 415f5dc3  .H...[A\A]A^A_].
 2960 488b0579 36000048 8b38488d 35931600  H..y6..H.8H.5...
 2970 00488d15 ae160000 4c8d0582 170000b9  .H......L.......
 2980 a1000000 31c0e845 f7ffffe8 b0f6ffff  ....1..E........
 2990 f30f1efa 50666666 64488b04 25000000  ....PfffdH..%...
 29a0 00488b80 e8ffffff 59c3660f 1f440000  .H......Y.f..D..
 29b0 f30f1efa 50666666 64488b04 25000000  ....PfffdH..%...
 29c0 00488b88 e8ffffff 480388f0 ffffff48  .H......H......H
 29d0 89c859c3 662e0f1f 84000000 00006690  ..Y.f.........f.
 29e0 f30f1efa 50666666 64488b04 25000000  ....PfffdH..%...
 29f0 00488b80 e8ffffff 59c3660f 1f440000  .H......Y.f..D..
 2a00 f30f1efa 5064488b 04250000 00004803  ....PdH..%....H.
 2a10 05933500 00488b00 59c36690 0f1f4000  ..5..H..Y.f...@.
 2a20 f30f1efa 41574156 41554154 534889cb  ....AWAVAUATSH..
 2a30 4989d649 89f74989 fc48c7c7 ffffffff  I..I..I..H......
 2a40 4c89e6e8 f8f6ffff 4885c075 144531ed  L.......H..u.E1.
 2a50 31ff4c89 e6e8e6f6 ffff4839 d8490f44  1.L.......H9.I.D
 2a60 c5498907 4885c00f 95c14939 de0f94c0  .I..H.....I9....
 2a70 20c85b41 5c415d41 5e415fc3 0f1f4000   .[A\A]A^A_...@.
 2a80 f30f1efa 41574156 534c89c3 4989ce49  ....AWAVSL..I..I
 2a90 89d74889 f24889fe 48c7c7ff ffffffe8  ..H..H..H.......
 2aa0 ccf6ffff 49890748 85c00f95 c14939de  ....I..H.....I9.
 2ab0 0f94c020 c85b415e 415fc390 0f1f4000  ... .[A^A_....@.
 2ac0 b8010000 00c3662e 0f1f8400 00000000  ......f.........
 2ad0 31c0c366 2e0f1f84 00000000 000f1f00  1..f............
 2ae0 b8340000 00c3662e 0f1f8400 00000000  .4....f.........
 2af0 b8350000 00c3662e 0f1f8400 00000000  .5....f.........
 2b00 31c0c366 2e0f1f84 00000000 000f1f00  1..f............
 2b10 4889c6c3 662e0f1f 84000000 00006690  H...f.........f.
 2b20 4889c7c3 662e0f1f 84000000 00006690  H...f.........f.
 2b30 488b0599 350000c3 0f1f8400 00000000  H...5...........
 2b40 488b0589 350000c3 0f1f8400 00000000  H...5...........
 2b50 488b0579 350000c3 0f1f8400 00000000  H..y5...........
 2b60 4889c2c3 662e0f1f 84000000 00006690  H...f.........f.
 2b70 4889f0c3 662e0f1f 84000000 00006690  H...f.........f.
 2b80 4889f8c3 662e0f1f 84000000 00006690  H...f.........f.
 2b90 4889d0c3 662e0f1f 84000000 00006690  H...f.........f.
 2ba0 4831f6c3 662e0f1f 84000000 00006690  H1..f.........f.
 2bb0 4831c0c3 662e0f1f 84000000 00006690  H1..f.........f.
 2bc0 4883c008 c3662e0f 1f840000 00000090  H....f..........
 2bd0 4883c020 c3662e0f 1f840000 00000090  H.. .f..........
 2be0 4883c03a c3662e0f 1f840000 00000090  H..:.f..........
 2bf0 4883c03b c3662e0f 1f840000 00000090  H..;.f..........
 2c00 4883c001 c3662e0f 1f840000 00000090  H....f..........
 2c10 48c7c200 000000c3 0f1f8400 00000000  H...............
 2c20 48c7c200 00000052 5ac3660f 1f440000  H......RZ.f..D..
 2c30 488d4702 c3662e0f 1f840000 00000090  H.G..f..........
 2c40 488d4701 c3662e0f 1f840000 00000090  H.G..f..........
 2c50 488d0437 c3662e0f 1f840000 00000090  H..7.f..........
 2c60 488d0437 4801d0c3 0f1f8400 00000000  H..7H...........
 2c70 488b3631 c0e966f4 ffff660f 1f440000  H.61..f...f..D..
 2c80 4889f848 31f64831 f64831d2 0f0531c0  H..H1.H1.H1...1.
 2c90 c3662e0f 1f840000 0000000f 1f440000  .f...........D..
 2ca0 4889f848 89f74831 f64831d2 0f0531c0  H..H..H1.H1...1.
 2cb0 c3662e0f 1f840000 0000000f 1f440000  .f...........D..
 2cc0 488b0648 8b560848 89c631c0 e90ff4ff  H..H.V.H..1.....
 2cd0 ff662e0f 1f840000 0000000f 1f440000  .f...........D..
 2ce0 488b0648 8b560848 8b4e1048 89c631c0  H..H.V.H.N.H..1.
 2cf0 e9ebf3ff ff662e0f 1f840000 00000090  .....f..........
 2d00 488b0648 8b560848 8b4e184c 8b462048  H..H.V.H.N.L.F H
 2d10 89c631c0 e9c7f3ff ff0f1f80 00000000  ..1.............
 2d20 4889f848 29f0c366 0f1f8400 00000000  H..H)..f........
 2d30 4889f048 29f8c366 0f1f8400 00000000  H..H)..f........
 2d40 48893731 c0c3662e 0f1f8400 00000000  H.71..f.........
 2d50 48893e31 c0c3662e 0f1f8400 00000000  H.>1..f.........
 2d60 4889f848 8936c366 0f1f8400 00000000  H..H.6.f........
 2d70 4889f048 893fc366 0f1f8400 00000000  H..H.?.f........
 2d80 4889f048 893fc366 0f1f8400 00000000  H..H.?.f........
 2d90 488b07c3 662e0f1f 84000000 00006690  H...f.........f.
 2da0 488b06c3 662e0f1f 84000000 00006690  H...f.........f.
 2db0 488d0df9 01000048 39cf7508 4889f848  H......H9.u.H..H
 2dc0 89f7ffe0 670fb940 020f1f80 00000000  ....g..@........
 2dd0 488d05d9 01000048 39c67502 ffe6670f  H......H9.u...g.
 2de0 b9400266 2e0f1f84 00000000 000f1f00  .@.f............
 2df0 488d05c9 01000048 39c77502 ffe7670f  H......H9.u...g.
 2e00 b9400266 2e0f1f84 00000000 000f1f00  .@.f............
 2e10 48c7c000 f0ffff48 2305aa31 0000c390  H......H#..1....
 2e20 504889fe 488d3dfc 12000031 c0e84ef2  PH..H.=....1..N.
 2e30 ffff31c0 59c3662e 0f1f8400 00000000  ..1.Y.f.........
 2e40 41565350 4889fb4c 8d35dc12 0000488d  AVSPH..L.5....H.
 2e50 35ebffff ff4c89f7 31c0e821 f2ffff4c  5....L..1..!...L
 2e60 89f74889 de31c048 83c4085b 415ee90d  ..H..1.H...[A^..
 2e70 f2ffff66 2e0f1f84 00000000 000f1f00  ...f............
 2e80 41574156 534c8b35 1c310000 644d8b3e  AWAVSL.5.1..dM.>
 2e90 498d87f0 feffff64 49890648 8d3db712  I......dI..H.=..
 2ea0 0000e8b9 f1ffff49 8d9ff8fe ffff4889  .......I......H.
 2eb0 dfe84af2 ffff4889 df31f6ba 0a000000  ..J...H..1......
 2ec0 e82bf2ff ff4889c3 488d3d94 120000e8  .+...H..H.=.....
 2ed0 8cf1ffff 4863c348 c1e00449 8d3c0748  ....Hc.H...I.<.H
 2ee0 81c700ff ffffe815 f2ffff64 4d893e5b  ...........dM.>[
 2ef0 415e415f c3662e0f 1f840000 00000090  A^A_.f..........
 2f00 41574156 41554154 534c8b35 98300000  AWAVAUATSL.5.0..
 2f10 644d8b3e 498d9f00 fcffff64 49891e45  dM.>I......dI..E
 2f20 31e4ba00 04000048 89df31f6 e86ff1ff  1......H..1..o..
 2f30 ff4889df e807ffff ffe842ff ffff4c8d  .H........B...L.
 2f40 2d8b0000 0031ff31 dbeb110f 1f440000  -....1.1.....D..
 2f50 49ffc449 81fc8000 00007430 4b83bce7  I..I......t0K...
 2f60 00fcffff 0074e94b 8b84e700 fcffff48  .....t.K.......H
 2f70 89c14c29 e948c1c1 3d4883f9 05732948  ..L).H..=H...s)H
 2f80 89deffd0 4889df48 89c3ebc4 488d3d9b  ....H..H....H.=.
 2f90 110000e8 88feffff 644d893e 31c05b41  ........dM.>1.[A
 2fa0 5c415d41 5e415fc3 670fb940 020f1f00  \A]A^A_.g..@....
 2fb0 e98bfbff ffcccccc 0f1f8400 00000000  ................
 2fc0 e98bfbff ffcccccc 0f1f8400 00000000  ................
 2fd0 e91bfbff ffcccccc e953fbff ffcccccc  .........S......
 2fe0 e94bfcff ffcccccc e9b3fcff ffcccccc  .K..............
 2ff0 e91bfeff ffcccccc                    ........        
Contents of section .fini:
 2ff8 f30f1efa 4883ec08 4883c408 c3        ....H...H....   
Contents of section .rodata:
 4000 01000200 73616665 73746163 6b204348  ....safestack CH
 4010 45434b20 6661696c 65643a20 25733a25  ECK failed: %s:%
 4020 64202573 0a00636f 6d70696c 65722d72  d %s..compiler-r
 4030 742f6c69 622f7361 66657374 61636b2f  t/lib/safestack/
 4040 73616665 73746163 6b2e6370 70007369  safestack.cpp.si
 4050 7a65202b 20677561 7264203e 3d207369  ze + guard >= si
 4060 7a65004d 41505f46 41494c45 4420213d  ze.MAP_FAILED !=
 4070 20616464 72007074 68726561 645f6372   addr.pthread_cr
 4080 65617465 00286368 6172202a 29737461  eate.(char *)sta
 4090 7274202b 2073697a 65203e3d 20286368  rt + size >= (ch
 40a0 6172202a 29737461 72740028 63686172  ar *)start.(char
 40b0 202a2973 74617274 202b2067 75617264   *)start + guard
 40c0 203e3d20 28636861 72202a29 73746172   >= (char *)star
 40d0 74002828 2873697a 655f7429 73746163  t.(((size_t)stac
 40e0 6b5f7074 72292026 20286b53 7461636b  k_ptr) & (kStack
 40f0 416c6967 6e202d20 31292920 3d3d2030  Align - 1)) == 0
 4100 00756e73 6166655f 73746163 6b5f7374  .unsafe_stack_st
 4110 61727420 213d206e 756c6c70 7472002f  art != nullptr./
 4120 62696e2f 73680025 73002570 0a005b52  bin/sh.%s.%p..[R
 4130 4553554c 545d204e 6f742065 78706c6f  ESULT] Not explo
 4140 69746564 203a2820 45786974 696e6720  ited :( Exiting 
 4150 73616665 6c792e0a 00456e74 65722069  safely...Enter i
 4160 643a0045 6e746572 20706173 73776f72  d:.Enter passwor
 4170 643a00                               d:.             
Contents of section .eh_frame_hdr:
 4174 011b033b 08020000 40000000 acdeffff  ...;....@.......
 4184 3c020000 3ce0ffff 64020000 4ce0ffff  <...<...d...L...
 4194 24020000 38e1ffff 7c020000 4ce1ffff  $...8...|...L...
 41a4 90020000 7ce3ffff e0020000 ace4ffff  ....|...........
 41b4 2c030000 7ce6ffff 60030000 1ce8ffff  ,...|...`.......
 41c4 ac030000 3ce8ffff c4030000 6ce8ffff  ....<.......l...
 41d4 dc030000 8ce8ffff f4030000 ace8ffff  ................
 41e4 0c040000 0ce9ffff 48040000 4ce9ffff  ........H...L...
 41f4 74040000 5ce9ffff 88040000 6ce9ffff  t...\.......l...
 4204 9c040000 7ce9ffff b0040000 8ce9ffff  ....|...........
 4214 c4040000 9ce9ffff d8040000 ace9ffff  ................
 4224 ec040000 bce9ffff 00050000 cce9ffff  ................
 4234 14050000 dce9ffff 28050000 ece9ffff  ........(.......
 4244 3c050000 fce9ffff 50050000 0ceaffff  <.......P.......
 4254 64050000 1ceaffff 78050000 2ceaffff  d.......x...,...
 4264 8c050000 3ceaffff a0050000 4ceaffff  ....<.......L...
 4274 b4050000 5ceaffff c8050000 6ceaffff  ....\.......l...
 4284 dc050000 7ceaffff f0050000 8ceaffff  ....|...........
 4294 04060000 9ceaffff 18060000 aceaffff  ................
 42a4 2c060000 bceaffff 40060000 cceaffff  ,.......@.......
 42b4 54060000 dceaffff 68060000 eceaffff  T.......h.......
 42c4 7c060000 fceaffff 90060000 0cebffff  |...............
 42d4 a4060000 2cebffff b8060000 4cebffff  ....,.......L...
 42e4 cc060000 6cebffff e0060000 8cebffff  ....l...........
 42f4 f4060000 acebffff 08070000 bcebffff  ................
 4304 1c070000 ccebffff 30070000 dcebffff  ........0.......
 4314 44070000 ecebffff 58070000 fcebffff  D.......X.......
 4324 6c070000 0cecffff 80070000 1cecffff  l...............
 4334 94070000 2cecffff a8070000 3cecffff  ....,.......<...
 4344 bc070000 5cecffff d0070000 7cecffff  ....\.......|...
 4354 e4070000 9cecffff f8070000 acecffff  ................
 4364 0c080000 ccecffff 24080000 0cedffff  ........$.......
 4374 4c080000 8cedffff 78080000           L.......x...    
Contents of section .eh_frame:
 4380 14000000 00000000 017a5200 01781001  .........zR..x..
 4390 1b0c0708 90010000 14000000 1c000000  ................
 43a0 20deffff 26000000 00440710 00000000   ...&....D......
 43b0 24000000 34000000 68dcffff 90010000  $...4...h.......
 43c0 000e1046 0e184a0f 0b770880 003f1a3b  ...F..J..w...?.;
 43d0 2a332422 00000000 14000000 5c000000  *3$"........\...
 43e0 d0ddffff 08000000 00000000 00000000  ................
 43f0 10000000 74000000 b4deffff 05000000  ....t...........
 4400 00000000 4c000000 88000000 b4deffff  ....L...........
 4410 2a020000 00450e10 420e1842 0e20420e  *....E..B..B. B.
 4420 28420e30 410e3844 0e900183 078c068d  (B.0A.8D........
 4430 058e048f 03860203 40010e38 410e3042  ........@..8A.0B
 4440 0e28420e 20420e18 420e1041 0e08410e  .(B. B..B..A..A.
 4450 90010000 48000000 d8000000 94e0ffff  ....H...........
 4460 2c010000 00450e10 420e1842 0e20420e  ,....E..B..B. B.
 4470 28420e30 410e3841 0e408307 8c068d05  (B.0A.8A.@......
 4480 8e048f03 86020281 0e38410e 30420e28  .........8A.0B.(
 4490 420e2042 0e18420e 10410e08 420e4000  B. B..B..A..B.@.
 44a0 30000000 24010000 78e1ffff cc010000  0...$...x.......
 44b0 00460e10 420e1841 0e20440e 4083048e  .F..B..A. D.@...
 44c0 038f0202 f90e2041 0e18420e 10420e08  ...... A..B..B..
 44d0 410e4000 48000000 58010000 14e3ffff  A.@.H...X.......
 44e0 a0010000 00450e10 420e1842 0e20420e  .....E..B..B. B.
 44f0 28420e30 410e3841 0e408307 8c068d05  (B.0A.8A.@......
 4500 8e048f03 86020356 010e3841 0e30420e  .......V..8A.0B.
 4510 28420e20 420e1842 0e10410e 08410e40  (B. B..B..A..A.@
 4520 14000000 a4010000 68e4ffff 1a000000  ........h.......
 4530 00450e10 540e0800 14000000 bc010000  .E..T...........
 4540 70e4ffff 24000000 00450e10 5e0e0800  p...$....E..^...
 4550 14000000 d4010000 88e4ffff 1a000000  ................
 4560 00450e10 540e0800 14000000 ec010000  .E..T...........
 4570 90e4ffff 1a000000 00450e10 540e0800  .........E..T...
 4580 38000000 04020000 98e4ffff 5c000000  8...........\...
 4590 00460e10 420e1842 0e20420e 28410e30  .F..B..B. B.(A.0
 45a0 83068c05 8d048e03 8f020246 0e28420e  ...........F.(B.
 45b0 20420e18 420e1042 0e080000 28000000   B..B..B....(...
 45c0 40020000 bce4ffff 3b000000 00460e10  @.......;....F..
 45d0 420e1841 0e208304 8e038f02 6d0e1842  B..A. ......m..B
 45e0 0e10420e 08000000 10000000 6c020000  ..B.........l...
 45f0 d0e4ffff 06000000 00000000 10000000  ................
 4600 80020000 cce4ffff 03000000 00000000  ................
 4610 10000000 94020000 c8e4ffff 06000000  ................
 4620 00000000 10000000 a8020000 c4e4ffff  ................
 4630 06000000 00000000 10000000 bc020000  ................
 4640 c0e4ffff 03000000 00000000 10000000  ................
 4650 d0020000 bce4ffff 04000000 00000000  ................
 4660 10000000 e4020000 b8e4ffff 04000000  ................
 4670 00000000 10000000 f8020000 b4e4ffff  ................
 4680 08000000 00000000 10000000 0c030000  ................
 4690 b0e4ffff 08000000 00000000 10000000  ................
 46a0 20030000 ace4ffff 08000000 00000000   ...............
 46b0 10000000 34030000 a8e4ffff 04000000  ....4...........
 46c0 00000000 10000000 48030000 a4e4ffff  ........H.......
 46d0 04000000 00000000 10000000 5c030000  ............\...
 46e0 a0e4ffff 04000000 00000000 10000000  ................
 46f0 70030000 9ce4ffff 04000000 00000000  p...............
 4700 10000000 84030000 98e4ffff 04000000  ................
 4710 00000000 10000000 98030000 94e4ffff  ................
 4720 04000000 00000000 10000000 ac030000  ................
 4730 90e4ffff 05000000 00000000 10000000  ................
 4740 c0030000 8ce4ffff 05000000 00000000  ................
 4750 10000000 d4030000 88e4ffff 05000000  ................
 4760 00000000 10000000 e8030000 84e4ffff  ................
 4770 05000000 00000000 10000000 fc030000  ................
 4780 80e4ffff 05000000 00000000 10000000  ................
 4790 10040000 7ce4ffff 08000000 00000000  ....|...........
 47a0 10000000 24040000 78e4ffff 0a000000  ....$...x.......
 47b0 00000000 10000000 38040000 74e4ffff  ........8...t...
 47c0 05000000 00000000 10000000 4c040000  ............L...
 47d0 70e4ffff 05000000 00000000 10000000  p...............
 47e0 60040000 6ce4ffff 05000000 00000000  `...l...........
 47f0 10000000 74040000 68e4ffff 08000000  ....t...h.......
 4800 00000000 10000000 88040000 64e4ffff  ............d...
 4810 0a000000 00000000 10000000 9c040000  ................
 4820 60e4ffff 11000000 00000000 10000000  `...............
 4830 b0040000 6ce4ffff 11000000 00000000  ....l...........
 4840 10000000 c4040000 78e4ffff 11000000  ........x.......
 4850 00000000 10000000 d8040000 84e4ffff  ................
 4860 15000000 00000000 10000000 ec040000  ................
 4870 90e4ffff 19000000 00000000 10000000  ................
 4880 00050000 9ce4ffff 07000000 00000000  ................
 4890 10000000 14050000 98e4ffff 07000000  ................
 48a0 00000000 10000000 28050000 94e4ffff  ........(.......
 48b0 06000000 00000000 10000000 3c050000  ............<...
 48c0 90e4ffff 06000000 00000000 10000000  ................
 48d0 50050000 8ce4ffff 07000000 00000000  P...............
 48e0 10000000 64050000 88e4ffff 07000000  ....d...........
 48f0 00000000 10000000 78050000 84e4ffff  ........x.......
 4900 07000000 00000000 10000000 8c050000  ................
 4910 80e4ffff 04000000 00000000 10000000  ................
 4920 a0050000 7ce4ffff 04000000 00000000  ....|...........
 4930 10000000 b4050000 78e4ffff 19000000  ........x.......
 4940 00000000 10000000 c8050000 84e4ffff  ................
 4950 13000000 00000000 10000000 dc050000  ................
 4960 90e4ffff 13000000 00000000 10000000  ................
 4970 f0050000 9ce4ffff 0f000000 00000000  ................
 4980 14000000 04060000 98e4ffff 16000000  ................
 4990 00410e10 540e0800 24000000 1c060000  .A..T...$.......
 49a0 a0e4ffff 33000000 00420e10 410e1841  ....3....B..A..A
 49b0 0e208303 8e02670e 18410e10 420e0800  . ....g..A..B...
 49c0 28000000 44060000 b8e4ffff 75000000  (...D.......u...
 49d0 00420e10 420e1841 0e208304 8e038f02  .B..B..A. ......
 49e0 026b0e18 420e1042 0e080000 3c000000  .k..B..B....<...
 49f0 70060000 0ce5ffff ad000000 00420e10  p............B..
 4a00 420e1842 0e20420e 28410e30 83068c05  B..B. B.(A.0....
 4a10 8d048e03 8f020296 0e28420e 20420e18  .........(B. B..
 4a20 420e1042 0e08410e 30000000 00000000  B..B..A.0.......
Contents of section .preinit_array:
 5d60 20260000 00000000                     &......        
Contents of section .init_array:
 5d68 a0220000 00000000                    ."......        
Contents of section .fini_array:
 5d70 60220000 00000000                    `"......        
Contents of section .dynamic:
 5d78 01000000 00000000 81010000 00000000  ................
 5d88 01000000 00000000 8b010000 00000000  ................
 5d98 01000000 00000000 9a010000 00000000  ................
 5da8 01000000 00000000 a4010000 00000000  ................
 5db8 0c000000 00000000 00200000 00000000  ......... ......
 5dc8 0d000000 00000000 f82f0000 00000000  ........./......
 5dd8 20000000 00000000 605d0000 00000000   .......`]......
 5de8 21000000 00000000 08000000 00000000  !...............
 5df8 19000000 00000000 685d0000 00000000  ........h]......
 5e08 1b000000 00000000 08000000 00000000  ................
 5e18 1a000000 00000000 705d0000 00000000  ........p]......
 5e28 1c000000 00000000 08000000 00000000  ................
 5e38 f5feff6f 00000000 d8030000 00000000  ...o............
 5e48 05000000 00000000 f80f0000 00000000  ................
 5e58 06000000 00000000 50060000 00000000  ........P.......
 5e68 0a000000 00000000 b9040000 00000000  ................
 5e78 0b000000 00000000 18000000 00000000  ................
 5e88 15000000 00000000 00000000 00000000  ................
 5e98 03000000 00000000 e85f0000 00000000  ........._......
 5ea8 02000000 00000000 40020000 00000000  ........@.......
 5eb8 14000000 00000000 07000000 00000000  ................
 5ec8 17000000 00000000 98170000 00000000  ................
 5ed8 07000000 00000000 d0150000 00000000  ................
 5ee8 08000000 00000000 c8010000 00000000  ................
 5ef8 09000000 00000000 18000000 00000000  ................
 5f08 fbffff6f 00000000 00000008 00000000  ...o............
 5f18 feffff6f 00000000 80150000 00000000  ...o............
 5f28 ffffff6f 00000000 02000000 00000000  ...o............
 5f38 f0ffff6f 00000000 b2140000 00000000  ...o............
 5f48 f9ffff6f 00000000 0c000000 00000000  ...o............
 5f58 00000000 00000000 00000000 00000000  ................
 5f68 00000000 00000000 00000000 00000000  ................
 5f78 00000000 00000000 00000000 00000000  ................
 5f88 00000000 00000000 00000000 00000000  ................
 5f98 00000000 00000000 00000000 00000000  ................
Contents of section .got:
 5fa8 00000000 00000000 00000000 00000000  ................
 5fb8 00000000 00000000 00000000 00000000  ................
 5fc8 e02f0000 00000000 00000000 00000000  ./..............
 5fd8 00000000 00000000 00000000 00000000  ................
Contents of section .got.plt:
 5fe8 785d0000 00000000 00000000 00000000  x]..............
 5ff8 00000000 00000000 36200000 00000000  ........6 ......
 6008 46200000 00000000 56200000 00000000  F ......V ......
 6018 66200000 00000000 76200000 00000000  f ......v ......
 6028 86200000 00000000 96200000 00000000  . ....... ......
 6038 a6200000 00000000 b6200000 00000000  . ....... ......
 6048 c6200000 00000000 d6200000 00000000  . ....... ......
 6058 e6200000 00000000 f6200000 00000000  . ....... ......
 6068 06210000 00000000 16210000 00000000  .!.......!......
 6078 26210000 00000000 36210000 00000000  &!......6!......
 6088 46210000 00000000 56210000 00000000  F!......V!......
 6098 66210000 00000000 76210000 00000000  f!......v!......
 60a8 86210000 00000000 96210000 00000000  .!.......!......
 60b8 a6210000 00000000                    .!......        
Contents of section .data:
 60c0 00000000 00000000 c8600000 00000000  .........`......
 60d0 1f410000 00000000 00000000 00000000  .A..............
 60e0 d02f0000 00000000 e82f0000 00000000  ./......./......
 60f0 f02f0000 00000000 d82f0000 00000000  ./......./......
 6100 b02f0000 00000000 c02f0000 00000000  ./......./......

Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <__safestack_unsafe_stack_ptr@@Base+0x38d>
 360:	78 38                	js     39a <__safestack_unsafe_stack_ptr@@Base+0x39a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	10 00                	adc    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	80 00 c0             	add    BYTE PTR [rax],0xc0
 384:	04 00                	add    al,0x0
 386:	00 00                	add    BYTE PTR [rax],al
 388:	01 00                	add    DWORD PTR [rax],eax
 38a:	00 00                	add    BYTE PTR [rax],al
 38c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000390 <.note.gnu.build-id>:
 390:	04 00                	add    al,0x0
 392:	00 00                	add    BYTE PTR [rax],al
 394:	14 00                	adc    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	03 00                	add    eax,DWORD PTR [rax]
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	47                   	rex.RXB
 39d:	4e 55                	rex.WRX push rbp
 39f:	00 60 a1             	add    BYTE PTR [rax-0x5f],ah
 3a2:	61                   	(bad)
 3a3:	ff                   	call   (bad)
 3a4:	dc 98 e5 7d b5 f4    	fcomp  QWORD PTR [rax-0xb4a821b]
 3aa:	4b 08 d4             	rex.WXB or r12b,dl
 3ad:	e7 e7                	out    0xe7,eax
 3af:	58                   	pop    rax
 3b0:	26 ad                	lods   eax,DWORD PTR ds:[rsi]
 3b2:	20                   	.byte 0x20
 3b3:	b6                   	.byte 0xb6

Disassembly of section .note.ABI-tag:

00000000000003b4 <.note.ABI-tag>:
 3b4:	04 00                	add    al,0x0
 3b6:	00 00                	add    BYTE PTR [rax],al
 3b8:	10 00                	adc    BYTE PTR [rax],al
 3ba:	00 00                	add    BYTE PTR [rax],al
 3bc:	01 00                	add    DWORD PTR [rax],eax
 3be:	00 00                	add    BYTE PTR [rax],al
 3c0:	47                   	rex.RXB
 3c1:	4e 55                	rex.WRX push rbp
 3c3:	00 00                	add    BYTE PTR [rax],al
 3c5:	00 00                	add    BYTE PTR [rax],al
 3c7:	00 03                	add    BYTE PTR [rbx],al
 3c9:	00 00                	add    BYTE PTR [rax],al
 3cb:	00 02                	add    BYTE PTR [rdx],al
 3cd:	00 00                	add    BYTE PTR [rax],al
 3cf:	00 00                	add    BYTE PTR [rax],al
 3d1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003d8 <.gnu.hash>:
 3d8:	43 00 00             	rex.XB add BYTE PTR [r8],al
 3db:	00 21                	add    BYTE PTR [rcx],ah
 3dd:	00 00                	add    BYTE PTR [rax],al
 3df:	00 08                	add    BYTE PTR [rax],cl
 3e1:	00 00                	add    BYTE PTR [rax],al
 3e3:	00 09                	add    BYTE PTR [rcx],cl
 3e5:	00 00                	add    BYTE PTR [rax],al
 3e7:	00 4c 11 40          	add    BYTE PTR [rcx+rdx*1+0x40],cl
 3eb:	22 80 11 66 80 60    	and    al,BYTE PTR [rax+0x60806611]
 3f1:	30 20                	xor    BYTE PTR [rax],ah
 3f3:	00 f4                	add    ah,dh
 3f5:	10 40 82             	adc    BYTE PTR [rax-0x7e],al
 3f8:	00 20                	add    BYTE PTR [rax],ah
 3fa:	c8 05 40 00          	enter  0x4005,0x0
 3fe:	20 01                	and    BYTE PTR [rcx],al
 400:	40 00 40 03          	rex add BYTE PTR [rax+0x3],al
 404:	01 00                	add    DWORD PTR [rax],eax
 406:	20 08                	and    BYTE PTR [rax],cl
 408:	00 00                	add    BYTE PTR [rax],al
 40a:	82                   	(bad)
 40b:	40                   	rex
 40c:	40 80 00 20          	rex add BYTE PTR [rax],0x20
 410:	78 05                	js     417 <__safestack_unsafe_stack_ptr@@Base+0x417>
 412:	60                   	(bad)
 413:	80 85 44 00 80 28 02 	add    BYTE PTR [rbp+0x28800044],0x2
 41a:	4c 14 e8             	rex.WR adc al,0xe8
 41d:	a8 47                	test   al,0x47
 41f:	a9 c1 18 41 a5       	test   eax,0xa54118c1
 424:	41 00 04 49          	add    BYTE PTR [r9+rcx*2],al
 428:	21 00                	and    DWORD PTR [rax],eax
 42a:	00 00                	add    BYTE PTR [rax],al
 42c:	24 00                	and    al,0x0
 42e:	00 00                	add    BYTE PTR [rax],al
 430:	25 00 00 00 26       	and    eax,0x26000000
 435:	00 00                	add    BYTE PTR [rax],al
 437:	00 28                	add    BYTE PTR [rax],ch
 439:	00 00                	add    BYTE PTR [rax],al
 43b:	00 2a                	add    BYTE PTR [rdx],ch
 43d:	00 00                	add    BYTE PTR [rax],al
 43f:	00 00                	add    BYTE PTR [rax],al
 441:	00 00                	add    BYTE PTR [rax],al
 443:	00 2b                	add    BYTE PTR [rbx],ch
	...
 44d:	00 00                	add    BYTE PTR [rax],al
 44f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 452:	00 00                	add    BYTE PTR [rax],al
 454:	2e 00 00             	cs add BYTE PTR [rax],al
	...
 45f:	00 30                	add    BYTE PTR [rax],dh
 461:	00 00                	add    BYTE PTR [rax],al
 463:	00 31                	add    BYTE PTR [rcx],dh
	...
 46d:	00 00                	add    BYTE PTR [rax],al
 46f:	00 32                	add    BYTE PTR [rdx],dh
 471:	00 00                	add    BYTE PTR [rax],al
 473:	00 00                	add    BYTE PTR [rax],al
 475:	00 00                	add    BYTE PTR [rax],al
 477:	00 33                	add    BYTE PTR [rbx],dh
 479:	00 00                	add    BYTE PTR [rax],al
 47b:	00 35 00 00 00 37    	add    BYTE PTR [rip+0x37000000],dh        # 37000481 <_end@@Base+0x36ffa2f9>
	...
 489:	00 00                	add    BYTE PTR [rax],al
 48b:	00 38                	add    BYTE PTR [rax],bh
 48d:	00 00                	add    BYTE PTR [rax],al
 48f:	00 00                	add    BYTE PTR [rax],al
 491:	00 00                	add    BYTE PTR [rax],al
 493:	00 3a                	add    BYTE PTR [rdx],bh
	...
 49d:	00 00                	add    BYTE PTR [rax],al
 49f:	00 3b                	add    BYTE PTR [rbx],bh
 4a1:	00 00                	add    BYTE PTR [rax],al
 4a3:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
 4a6:	00 00                	add    BYTE PTR [rax],al
 4a8:	3d 00 00 00 00       	cmp    eax,0x0
 4ad:	00 00                	add    BYTE PTR [rax],al
 4af:	00 40 00             	add    BYTE PTR [rax+0x0],al
 4b2:	00 00                	add    BYTE PTR [rax],al
 4b4:	00 00                	add    BYTE PTR [rax],al
 4b6:	00 00                	add    BYTE PTR [rax],al
 4b8:	42 00 00             	rex.X add BYTE PTR [rax],al
	...
 4c7:	00 43 00             	add    BYTE PTR [rbx+0x0],al
 4ca:	00 00                	add    BYTE PTR [rax],al
 4cc:	00 00                	add    BYTE PTR [rax],al
 4ce:	00 00                	add    BYTE PTR [rax],al
 4d0:	45 00 00             	add    BYTE PTR [r8],r8b
 4d3:	00 48 00             	add    BYTE PTR [rax+0x0],cl
 4d6:	00 00                	add    BYTE PTR [rax],al
 4d8:	00 00                	add    BYTE PTR [rax],al
 4da:	00 00                	add    BYTE PTR [rax],al
 4dc:	49 00 00             	rex.WB add BYTE PTR [r8],al
 4df:	00 4a 00             	add    BYTE PTR [rdx+0x0],cl
 4e2:	00 00                	add    BYTE PTR [rax],al
 4e4:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
 4e7:	00 4d 00             	add    BYTE PTR [rbp+0x0],cl
 4ea:	00 00                	add    BYTE PTR [rax],al
 4ec:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
 4ef:	00 4f 00             	add    BYTE PTR [rdi+0x0],cl
 4f2:	00 00                	add    BYTE PTR [rax],al
 4f4:	51                   	push   rcx
 4f5:	00 00                	add    BYTE PTR [rax],al
 4f7:	00 00                	add    BYTE PTR [rax],al
 4f9:	00 00                	add    BYTE PTR [rax],al
 4fb:	00 53 00             	add    BYTE PTR [rbx+0x0],dl
 4fe:	00 00                	add    BYTE PTR [rax],al
 500:	00 00                	add    BYTE PTR [rax],al
 502:	00 00                	add    BYTE PTR [rax],al
 504:	54                   	push   rsp
 505:	00 00                	add    BYTE PTR [rax],al
 507:	00 59 00             	add    BYTE PTR [rcx+0x0],bl
 50a:	00 00                	add    BYTE PTR [rax],al
 50c:	5b                   	pop    rbx
 50d:	00 00                	add    BYTE PTR [rax],al
 50f:	00 5c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bl
 513:	00 5d 00             	add    BYTE PTR [rbp+0x0],bl
 516:	00 00                	add    BYTE PTR [rax],al
 518:	5e                   	pop    rsi
 519:	00 00                	add    BYTE PTR [rax],al
 51b:	00 60 00             	add    BYTE PTR [rax+0x0],ah
	...
 526:	00 00                	add    BYTE PTR [rax],al
 528:	61                   	(bad)
 529:	00 00                	add    BYTE PTR [rax],al
 52b:	00 62 00             	add    BYTE PTR [rdx+0x0],ah
 52e:	00 00                	add    BYTE PTR [rax],al
 530:	64 00 00             	add    BYTE PTR fs:[rax],al
 533:	00 f2                	add    dl,dh
 535:	2d 97 7c bc 8b       	sub    eax,0x8bbc7c97
 53a:	12 15 af 2d 97 7c    	adc    dl,BYTE PTR [rip+0x7c972daf]        # 7c9732ef <_end@@Base+0x7c96d167>
 540:	b1 2d                	mov    cl,0x2d
 542:	97                   	xchg   edi,eax
 543:	7c b1                	jl     4f6 <__safestack_unsafe_stack_ptr@@Base+0x4f6>
 545:	2d 97 7c e6 0d       	sub    eax,0xde67c97
 54a:	ac                   	lods   al,BYTE PTR ds:[rsi]
 54b:	1e                   	(bad)
 54c:	b3 2d                	mov    bl,0x2d
 54e:	97                   	xchg   edi,eax
 54f:	7c c6                	jl     517 <__safestack_unsafe_stack_ptr@@Base+0x517>
 551:	76 9e                	jbe    4f1 <__safestack_unsafe_stack_ptr@@Base+0x4f1>
 553:	33 cb                	xor    ecx,ebx
 555:	3f                   	(bad)
 556:	2d 59 79 d8 27       	sub    eax,0x27d87959
 55b:	0f 45 c1             	cmovne eax,ecx
 55e:	7c 0f                	jl     56f <__safestack_unsafe_stack_ptr@@Base+0x56f>
 560:	ac                   	lods   al,BYTE PTR ds:[rsi]
 561:	4b e3 c0             	rex.WXB jrcxz 524 <__safestack_unsafe_stack_ptr@@Base+0x524>
 564:	e1 99                	loope  4ff <__safestack_unsafe_stack_ptr@@Base+0x4ff>
 566:	d2 ba e6 fd 6a e2    	sar    BYTE PTR [rdx-0x1d95021a],cl
 56c:	09 04 da             	or     DWORD PTR [rdx+rbx*8],eax
 56f:	e2 8d                	loop   4fe <__safestack_unsafe_stack_ptr@@Base+0x4fe>
 571:	cc                   	int3
 572:	7c 0f                	jl     583 <__safestack_unsafe_stack_ptr@@Base+0x583>
 574:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 575:	ab                   	stos   DWORD PTR es:[rdi],eax
 576:	32 c3                	xor    al,bl
 578:	19 86 e3 e1 aa 93    	sbb    DWORD PTR [rsi-0x6c551e1d],eax
 57e:	d1 8f 1f a3 98 28    	ror    DWORD PTR [rdi+0x2898a31f],1
 584:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 585:	35 36 ff fb 2c       	xor    eax,0x2cfbff36
 58a:	97                   	xchg   edi,eax
 58b:	7c a7                	jl     534 <__safestack_unsafe_stack_ptr@@Base+0x534>
 58d:	35 36 ff b6 c7       	xor    eax,0xc7b6ff36
 592:	e7 b5                	out    0xb5,eax
 594:	49 3f                	rex.WB (bad)
 596:	66 28 33             	data16 sub BYTE PTR [rbx],dh
 599:	62 db ed 97 2e       	(bad)
 59e:	97                   	xchg   edi,eax
 59f:	7c 97                	jl     538 <__safestack_unsafe_stack_ptr@@Base+0x538>
 5a1:	2e 97                	cs xchg edi,eax
 5a3:	7c 98                	jl     53d <__safestack_unsafe_stack_ptr@@Base+0x53d>
 5a5:	2e 97                	cs xchg edi,eax
 5a7:	7c 92                	jl     53b <__safestack_unsafe_stack_ptr@@Base+0x53b>
 5a9:	f0 c4 e1 27 5f c7    	lock vmaxsd xmm0,xmm11,xmm7
 5af:	e2 9a                	loop   54b <__safestack_unsafe_stack_ptr@@Base+0x54b>
 5b1:	2e 97                	cs xchg edi,eax
 5b3:	7c 47                	jl     5fc <__safestack_unsafe_stack_ptr@@Base+0x5fc>
 5b5:	4f c1 5a d1 65       	rex.WRXB rcr QWORD PTR [r10-0x2f],0x65
 5ba:	ce                   	(bad)
 5bb:	6d                   	ins    DWORD PTR es:[rdi],dx
 5bc:	82                   	(bad)
 5bd:	87 eb                	xchg   ebx,ebp
 5bf:	80 27 4e             	and    BYTE PTR [rdi],0x4e
 5c2:	e8 ae 0c 3a 97       	call   ffffffff973a1275 <_end@@Base+0xffffffff9739b0ed>
 5c7:	0b 3c 2f             	or     edi,DWORD PTR [rdi+rbp*1]
 5ca:	9d                   	popf
 5cb:	7b 4b                	jnp    618 <__safestack_unsafe_stack_ptr@@Base+0x618>
 5cd:	2d b2 e1 07 fe       	sub    eax,0xfe07e1b2
 5d2:	6a e2                	push   0xffffffffffffffe2
 5d4:	27                   	(bad)
 5d5:	58                   	pop    rax
 5d6:	d8 b4 6a 09 43 d6 4d 	fdiv   DWORD PTR [rdx+rbp*2+0x4dd64309]
 5dd:	7e f3                	jle    5d2 <__safestack_unsafe_stack_ptr@@Base+0x5d2>
 5df:	8a 93 2d b2 e1 93    	mov    dl,BYTE PTR [rbx-0x6c1e4dd3]
 5e5:	2d b2 e1 6b 7f       	sub    eax,0x7f6be1b2
 5ea:	9a                   	(bad)
 5eb:	7c 42                	jl     62f <__safestack_unsafe_stack_ptr@@Base+0x62f>
 5ed:	45                   	rex.RB
 5ee:	d5 ec cb             	{rex2 0xec} bswap rbx
 5f1:	bb 32 c3 4c 0a       	mov    ebx,0xa4cc332
 5f6:	2b c9                	sub    ecx,ecx
 5f8:	b9 4f 6d a7 1d       	mov    ecx,0x1da76d4f
 5fd:	ea                   	(bad)
 5fe:	14 ff                	adc    al,0xff
 600:	e6 2d                	out    0x2d,al
 602:	97                   	xchg   edi,eax
 603:	7c be                	jl     5c3 <__safestack_unsafe_stack_ptr@@Base+0x5c3>
 605:	77 59                	ja     660 <__safestack_unsafe_stack_ptr@@Base+0x660>
 607:	00 36                	add    BYTE PTR [rsi],dh
 609:	4e e8 ae c6 35 36    	rex.WRX call 3635ccbd <_end@@Base+0x36356b35>
 60f:	ff 97 b9 d5 d7 c0    	call   QWORD PTR [rdi-0x3f282a47]
 615:	77 59                	ja     670 <__safestack_unsafe_stack_ptr@@Base+0x670>
 617:	00 bb e3 92 7c 47    	add    BYTE PTR [rbx+0x477c92e3],bh
 61d:	c4                   	(bad)
 61e:	4d 88 65 ec          	rex.WRB mov BYTE PTR [r13-0x14],r12b
 622:	7c 0f                	jl     633 <__safestack_unsafe_stack_ptr@@Base+0x633>
 624:	65 ec                	gs in  al,dx
 626:	7c 0f                	jl     637 <__safestack_unsafe_stack_ptr@@Base+0x637>
 628:	e0 ea                	loopne 614 <__safestack_unsafe_stack_ptr@@Base+0x614>
 62a:	fc                   	cld
 62b:	e5 67                	in     eax,0x67
 62d:	ec                   	in     al,dx
 62e:	7c 0f                	jl     63f <__safestack_unsafe_stack_ptr@@Base+0x63f>
 630:	67 ec                	addr32 in al,dx
 632:	7c 0f                	jl     643 <__safestack_unsafe_stack_ptr@@Base+0x643>
 634:	d9 ea                	fldl2e
 636:	7c 0f                	jl     647 <__safestack_unsafe_stack_ptr@@Base+0x647>
 638:	d8 ea                	fsubr  st,st(2)
 63a:	7c 0f                	jl     64b <__safestack_unsafe_stack_ptr@@Base+0x64b>
 63c:	d9 71 58             	fnstenv [rcx+0x58]
 63f:	1c b4                	sbb    al,0xb4
 641:	f0 c4 e1 62 aa       	(bad)
 646:	30 17                	xor    BYTE PTR [rdi],dl
 648:	17                   	(bad)
 649:	50                   	push   rax
 64a:	e8                   	.byte 0xe8
 64b:	ae                   	scas   al,BYTE PTR es:[rdi]

Disassembly of section .dynsym:

0000000000000650 <.dynsym>:
	...
 668:	60                   	(bad)
 669:	00 00                	add    BYTE PTR [rax],al
 66b:	00 12                	add    BYTE PTR [rdx],dl
	...
 67d:	00 00                	add    BYTE PTR [rax],al
 67f:	00 d1                	add    cl,dl
 681:	00 00                	add    BYTE PTR [rax],al
 683:	00 12                	add    BYTE PTR [rdx],dl
	...
 695:	00 00                	add    BYTE PTR [rax],al
 697:	00 5b 01             	add    BYTE PTR [rbx+0x1],bl
 69a:	00 00                	add    BYTE PTR [rax],al
 69c:	12 00                	adc    al,BYTE PTR [rax]
	...
 6ae:	00 00                	add    BYTE PTR [rax],al
 6b0:	43 01 00             	rex.XB add DWORD PTR [r8],eax
 6b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 6c5:	00 00                	add    BYTE PTR [rax],al
 6c7:	00 01                	add    BYTE PTR [rcx],al
 6c9:	00 00                	add    BYTE PTR [rax],al
 6cb:	00 20                	add    BYTE PTR [rax],ah
	...
 6dd:	00 00                	add    BYTE PTR [rax],al
 6df:	00 70 01             	add    BYTE PTR [rax+0x1],dh
 6e2:	00 00                	add    BYTE PTR [rax],al
 6e4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6f6:	00 00                	add    BYTE PTR [rax],al
 6f8:	fa                   	cli
 6f9:	01 00                	add    DWORD PTR [rax],eax
 6fb:	00 10                	add    BYTE PTR [rax],dl
	...
 70d:	00 00                	add    BYTE PTR [rax],al
 70f:	00 38                	add    BYTE PTR [rax],bh
 711:	02 00                	add    al,BYTE PTR [rax]
 713:	00 10                	add    BYTE PTR [rax],dl
	...
 725:	00 00                	add    BYTE PTR [rax],al
 727:	00 9b 00 00 00 12    	add    BYTE PTR [rbx+0x12000000],bl
	...
 73d:	00 00                	add    BYTE PTR [rax],al
 73f:	00 70 02             	add    BYTE PTR [rax+0x2],dh
 742:	00 00                	add    BYTE PTR [rax],al
 744:	10 00                	adc    BYTE PTR [rax],al
	...
 756:	00 00                	add    BYTE PTR [rax],al
 758:	96                   	xchg   esi,eax
 759:	03 00                	add    eax,DWORD PTR [rax]
 75b:	00 12                	add    BYTE PTR [rdx],dl
	...
 76d:	00 00                	add    BYTE PTR [rax],al
 76f:	00 e3                	add    bl,ah
 771:	00 00                	add    BYTE PTR [rax],al
 773:	00 12                	add    BYTE PTR [rdx],dl
	...
 785:	00 00                	add    BYTE PTR [rax],al
 787:	00 4d 02             	add    BYTE PTR [rbp+0x2],cl
 78a:	00 00                	add    BYTE PTR [rax],al
 78c:	12 00                	adc    al,BYTE PTR [rax]
	...
 79e:	00 00                	add    BYTE PTR [rax],al
 7a0:	89 00                	mov    DWORD PTR [rax],eax
 7a2:	00 00                	add    BYTE PTR [rax],al
 7a4:	12 00                	adc    al,BYTE PTR [rax]
	...
 7b6:	00 00                	add    BYTE PTR [rax],al
 7b8:	61                   	(bad)
 7b9:	01 00                	add    DWORD PTR [rax],eax
 7bb:	00 12                	add    BYTE PTR [rdx],dl
	...
 7cd:	00 00                	add    BYTE PTR [rax],al
 7cf:	00 fd                	add    ch,bh
 7d1:	00 00                	add    BYTE PTR [rax],al
 7d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 7e9:	03 00                	add    eax,DWORD PTR [rax]
 7eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 7fd:	00 00                	add    BYTE PTR [rax],al
 7ff:	00 1d 00 00 00 20    	add    BYTE PTR [rip+0x20000000],bl        # 20000805 <_end@@Base+0x1fffa67d>
	...
 815:	00 00                	add    BYTE PTR [rax],al
 817:	00 7a 01             	add    BYTE PTR [rdx+0x1],bh
 81a:	00 00                	add    BYTE PTR [rax],al
 81c:	12 00                	adc    al,BYTE PTR [rax]
	...
 82e:	00 00                	add    BYTE PTR [rax],al
 830:	75 01                	jne    833 <__safestack_unsafe_stack_ptr@@Base+0x833>
 832:	00 00                	add    BYTE PTR [rax],al
 834:	12 00                	adc    al,BYTE PTR [rax]
	...
 846:	00 00                	add    BYTE PTR [rax],al
 848:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 849:	00 00                	add    BYTE PTR [rax],al
 84b:	00 12                	add    BYTE PTR [rdx],dl
	...
 85d:	00 00                	add    BYTE PTR [rax],al
 85f:	00 2e                	add    BYTE PTR [rsi],ch
 861:	01 00                	add    DWORD PTR [rax],eax
 863:	00 12                	add    BYTE PTR [rdx],dl
	...
 875:	00 00                	add    BYTE PTR [rax],al
 877:	00 ca                	add    dl,cl
 879:	00 00                	add    BYTE PTR [rax],al
 87b:	00 12                	add    BYTE PTR [rdx],dl
	...
 88d:	00 00                	add    BYTE PTR [rax],al
 88f:	00 05 01 00 00 12    	add    BYTE PTR [rip+0x12000001],al        # 12000896 <_end@@Base+0x11ffa70e>
	...
 8a5:	00 00                	add    BYTE PTR [rax],al
 8a7:	00 b5 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],dh
	...
 8bd:	00 00                	add    BYTE PTR [rax],al
 8bf:	00 65 00             	add    BYTE PTR [rbp+0x0],ah
 8c2:	00 00                	add    BYTE PTR [rax],al
 8c4:	12 00                	adc    al,BYTE PTR [rax]
	...
 8d6:	00 00                	add    BYTE PTR [rax],al
 8d8:	2c 00                	sub    al,0x0
 8da:	00 00                	add    BYTE PTR [rax],al
 8dc:	20 00                	and    BYTE PTR [rax],al
	...
 8ee:	00 00                	add    BYTE PTR [rax],al
 8f0:	54                   	push   rsp
 8f1:	01 00                	add    DWORD PTR [rax],eax
 8f3:	00 12                	add    BYTE PTR [rdx],dl
	...
 905:	00 00                	add    BYTE PTR [rax],al
 907:	00 a2 00 00 00 12    	add    BYTE PTR [rdx+0x12000000],ah
	...
 91d:	00 00                	add    BYTE PTR [rax],al
 91f:	00 46 00             	add    BYTE PTR [rsi+0x0],al
 922:	00 00                	add    BYTE PTR [rax],al
 924:	12 00                	adc    al,BYTE PTR [rax]
	...
 936:	00 00                	add    BYTE PTR [rax],al
 938:	1a 01                	sbb    al,BYTE PTR [rcx]
 93a:	00 00                	add    BYTE PTR [rax],al
 93c:	12 00                	adc    al,BYTE PTR [rax]
	...
 94e:	00 00                	add    BYTE PTR [rax],al
 950:	f6 00 00             	test   BYTE PTR [rax],0x0
 953:	00 11                	add    BYTE PTR [rcx],dl
	...
 965:	00 00                	add    BYTE PTR [rax],al
 967:	00 f0                	add    al,dh
 969:	01 00                	add    DWORD PTR [rax],eax
 96b:	00 12                	add    BYTE PTR [rdx],dl
 96d:	00 0f                	add    BYTE PTR [rdi],cl
 96f:	00 40 2d             	add    BYTE PTR [rax+0x2d],al
 972:	00 00                	add    BYTE PTR [rax],al
 974:	00 00                	add    BYTE PTR [rax],al
 976:	00 00                	add    BYTE PTR [rax],al
 978:	06                   	(bad)
 979:	00 00                	add    BYTE PTR [rax],al
 97b:	00 00                	add    BYTE PTR [rax],al
 97d:	00 00                	add    BYTE PTR [rax],al
 97f:	00 ea                	add    dl,ch
 981:	02 00                	add    al,BYTE PTR [rax]
 983:	00 11                	add    BYTE PTR [rcx],dl
 985:	00 1b                	add    BYTE PTR [rbx],bl
 987:	00 e0                	add    al,ah
 989:	60                   	(bad)
 98a:	00 00                	add    BYTE PTR [rax],al
 98c:	00 00                	add    BYTE PTR [rax],al
 98e:	00 00                	add    BYTE PTR [rax],al
 990:	30 00                	xor    BYTE PTR [rax],al
 992:	00 00                	add    BYTE PTR [rax],al
 994:	00 00                	add    BYTE PTR [rax],al
 996:	00 00                	add    BYTE PTR [rax],al
 998:	45 03 00             	add    r8d,DWORD PTR [r8]
 99b:	00 12                	add    BYTE PTR [rdx],dl
 99d:	00 0f                	add    BYTE PTR [rdi],cl
 99f:	00 70 2c             	add    BYTE PTR [rax+0x2c],dh
 9a2:	00 00                	add    BYTE PTR [rax],al
 9a4:	00 00                	add    BYTE PTR [rax],al
 9a6:	00 00                	add    BYTE PTR [rax],al
 9a8:	0a 00                	or     al,BYTE PTR [rax]
 9aa:	00 00                	add    BYTE PTR [rax],al
 9ac:	00 00                	add    BYTE PTR [rax],al
 9ae:	00 00                	add    BYTE PTR [rax],al
 9b0:	88 04 00             	mov    BYTE PTR [rax+rax*1],al
 9b3:	00 12                	add    BYTE PTR [rdx],dl
 9b5:	00 0f                	add    BYTE PTR [rdi],cl
 9b7:	00 c0                	add    al,al
 9b9:	2c 00                	sub    al,0x0
 9bb:	00 00                	add    BYTE PTR [rax],al
 9bd:	00 00                	add    BYTE PTR [rax],al
 9bf:	00 11                	add    BYTE PTR [rcx],dl
 9c1:	00 00                	add    BYTE PTR [rax],al
 9c3:	00 00                	add    BYTE PTR [rax],al
 9c5:	00 00                	add    BYTE PTR [rax],al
 9c7:	00 4a 03             	add    BYTE PTR [rdx+0x3],cl
 9ca:	00 00                	add    BYTE PTR [rax],al
 9cc:	12 00                	adc    al,BYTE PTR [rax]
 9ce:	0f 00 e0             	verr   eax
 9d1:	2c 00                	sub    al,0x0
 9d3:	00 00                	add    BYTE PTR [rax],al
 9d5:	00 00                	add    BYTE PTR [rax],al
 9d7:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 9dd <__safestack_unsafe_stack_ptr@@Base+0x9dd>
 9dd:	00 00                	add    BYTE PTR [rax],al
 9df:	00 54 02 00          	add    BYTE PTR [rdx+rax*1+0x0],dl
 9e3:	00 12                	add    BYTE PTR [rdx],dl
 9e5:	00 0f                	add    BYTE PTR [rdi],cl
 9e7:	00 40 2e             	add    BYTE PTR [rax+0x2e],al
 9ea:	00 00                	add    BYTE PTR [rax],al
 9ec:	00 00                	add    BYTE PTR [rax],al
 9ee:	00 00                	add    BYTE PTR [rax],al
 9f0:	33 00                	xor    eax,DWORD PTR [rax]
 9f2:	00 00                	add    BYTE PTR [rax],al
 9f4:	00 00                	add    BYTE PTR [rax],al
 9f6:	00 00                	add    BYTE PTR [rax],al
 9f8:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
 9fc:	12 00                	adc    al,BYTE PTR [rax]
 9fe:	0f 00 00             	sldt   WORD PTR [rax]
 a01:	2d 00 00 00 00       	sub    eax,0x0
 a06:	00 00                	add    BYTE PTR [rax],al
 a08:	19 00                	sbb    DWORD PTR [rax],eax
 a0a:	00 00                	add    BYTE PTR [rax],al
 a0c:	00 00                	add    BYTE PTR [rax],al
 a0e:	00 00                	add    BYTE PTR [rax],al
 a10:	fe 02                	inc    BYTE PTR [rdx]
 a12:	00 00                	add    BYTE PTR [rax],al
 a14:	12 00                	adc    al,BYTE PTR [rax]
 a16:	0f 00 80 2c 00 00 00 	sldt   WORD PTR [rax+0x2c]
 a1d:	00 00                	add    BYTE PTR [rax],al
 a1f:	00 11                	add    BYTE PTR [rcx],dl
 a21:	00 00                	add    BYTE PTR [rax],al
 a23:	00 00                	add    BYTE PTR [rax],al
 a25:	00 00                	add    BYTE PTR [rax],al
 a27:	00 65 04             	add    BYTE PTR [rbp+0x4],ah
 a2a:	00 00                	add    BYTE PTR [rax],al
 a2c:	12 00                	adc    al,BYTE PTR [rax]
 a2e:	0f 00 c0             	sldt   eax
 a31:	22 00                	and    al,BYTE PTR [rax]
 a33:	00 00                	add    BYTE PTR [rax],al
 a35:	00 00                	add    BYTE PTR [rax],al
 a37:	00 2a                	add    BYTE PTR [rdx],ch
 a39:	02 00                	add    al,BYTE PTR [rax]
 a3b:	00 00                	add    BYTE PTR [rax],al
 a3d:	00 00                	add    BYTE PTR [rax],al
 a3f:	00 cd                	add    ch,cl
 a41:	02 00                	add    al,BYTE PTR [rax]
 a43:	00 11                	add    BYTE PTR [rcx],dl
 a45:	00 1b                	add    BYTE PTR [rbx],bl
 a47:	00 d0                	add    al,dl
 a49:	60                   	(bad)
 a4a:	00 00                	add    BYTE PTR [rax],al
 a4c:	00 00                	add    BYTE PTR [rax],al
 a4e:	00 00                	add    BYTE PTR [rax],al
 a50:	08 00                	or     BYTE PTR [rax],al
 a52:	00 00                	add    BYTE PTR [rax],al
 a54:	00 00                	add    BYTE PTR [rax],al
 a56:	00 00                	add    BYTE PTR [rax],al
 a58:	3f                   	(bad)
 a59:	03 00                	add    eax,DWORD PTR [rax]
 a5b:	00 12                	add    BYTE PTR [rdx],dl
 a5d:	00 0f                	add    BYTE PTR [rdi],cl
 a5f:	00 00                	add    BYTE PTR [rax],al
 a61:	2c 00                	sub    al,0x0
 a63:	00 00                	add    BYTE PTR [rax],al
 a65:	00 00                	add    BYTE PTR [rax],al
 a67:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # a6d <__safestack_unsafe_stack_ptr@@Base+0xa6d>
 a6d:	00 00                	add    BYTE PTR [rax],al
 a6f:	00 62 03             	add    BYTE PTR [rdx+0x3],ah
 a72:	00 00                	add    BYTE PTR [rax],al
 a74:	11 00                	adc    DWORD PTR [rax],eax
 a76:	11 00                	adc    DWORD PTR [rax],eax
 a78:	00 40 00             	add    BYTE PTR [rax+0x0],al
 a7b:	00 00                	add    BYTE PTR [rax],al
 a7d:	00 00                	add    BYTE PTR [rax],al
 a7f:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 a82:	00 00                	add    BYTE PTR [rax],al
 a84:	00 00                	add    BYTE PTR [rax],al
 a86:	00 00                	add    BYTE PTR [rax],al
 a88:	e4 03                	in     al,0x3
 a8a:	00 00                	add    BYTE PTR [rax],al
 a8c:	22 00                	and    al,BYTE PTR [rax]
 a8e:	0f 00 ac 22 00 00 00 	verw   WORD PTR [rdx+riz*1+0x0]
 a95:	00 
 a96:	00 00                	add    BYTE PTR [rax],al
 a98:	05 00 00 00 00       	add    eax,0x0
 a9d:	00 00                	add    BYTE PTR [rax],al
 a9f:	00 1d 02 00 00 12    	add    BYTE PTR [rip+0x12000002],bl        # 12000aa7 <_end@@Base+0x11ffa91f>
 aa5:	00 0f                	add    BYTE PTR [rdi],cl
 aa7:	00 20                	add    BYTE PTR [rax],ah
 aa9:	2d 00 00 00 00       	sub    eax,0x0
 aae:	00 00                	add    BYTE PTR [rax],al
 ab0:	07                   	(bad)
 ab1:	00 00                	add    BYTE PTR [rax],al
 ab3:	00 00                	add    BYTE PTR [rax],al
 ab5:	00 00                	add    BYTE PTR [rax],al
 ab7:	00 68 02             	add    BYTE PTR [rax+0x2],ch
 aba:	00 00                	add    BYTE PTR [rax],al
 abc:	12 00                	adc    al,BYTE PTR [rax]
 abe:	0f 00 e0             	verr   eax
 ac1:	2a 00                	sub    al,BYTE PTR [rax]
 ac3:	00 00                	add    BYTE PTR [rax],al
 ac5:	00 00                	add    BYTE PTR [rax],al
 ac7:	00 06                	add    BYTE PTR [rsi],al
 ac9:	00 00                	add    BYTE PTR [rax],al
 acb:	00 00                	add    BYTE PTR [rax],al
 acd:	00 00                	add    BYTE PTR [rax],al
 acf:	00 a4 02 00 00 12 00 	add    BYTE PTR [rdx+rax*1+0x120000],ah
 ad6:	0f 00 a0 2d 00 00 00 	verr   WORD PTR [rax+0x2d]
 add:	00 00                	add    BYTE PTR [rax],al
 adf:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 ae2:	00 00                	add    BYTE PTR [rax],al
 ae4:	00 00                	add    BYTE PTR [rax],al
 ae6:	00 00                	add    BYTE PTR [rax],al
 ae8:	d3 02                	rol    DWORD PTR [rdx],cl
 aea:	00 00                	add    BYTE PTR [rax],al
 aec:	12 00                	adc    al,BYTE PTR [rax]
 aee:	0f 00 00             	sldt   WORD PTR [rax]
 af1:	2a 00                	sub    al,BYTE PTR [rax]
 af3:	00 00                	add    BYTE PTR [rax],al
 af5:	00 00                	add    BYTE PTR [rax],al
 af7:	00 1a                	add    BYTE PTR [rdx],bl
 af9:	00 00                	add    BYTE PTR [rax],al
 afb:	00 00                	add    BYTE PTR [rax],al
 afd:	00 00                	add    BYTE PTR [rax],al
 aff:	00 e8                	add    al,ch
 b01:	01 00                	add    DWORD PTR [rax],eax
 b03:	00 12                	add    BYTE PTR [rdx],dl
 b05:	00 0f                	add    BYTE PTR [rdi],cl
 b07:	00 f0                	add    al,dh
 b09:	2f                   	(bad)
 b0a:	00 00                	add    BYTE PTR [rax],al
 b0c:	00 00                	add    BYTE PTR [rax],al
 b0e:	00 00                	add    BYTE PTR [rax],al
 b10:	28 00                	sub    BYTE PTR [rax],al
 b12:	00 00                	add    BYTE PTR [rax],al
 b14:	00 00                	add    BYTE PTR [rax],al
 b16:	00 00                	add    BYTE PTR [rax],al
 b18:	bc 02 00 00 12       	mov    esp,0x12000002
 b1d:	00 0f                	add    BYTE PTR [rdi],cl
 b1f:	00 20                	add    BYTE PTR [rax],ah
 b21:	26 00 00             	es add BYTE PTR [rax],al
 b24:	00 00                	add    BYTE PTR [rax],al
 b26:	00 00                	add    BYTE PTR [rax],al
 b28:	cc                   	int3
 b29:	01 00                	add    DWORD PTR [rax],eax
 b2b:	00 00                	add    BYTE PTR [rax],al
 b2d:	00 00                	add    BYTE PTR [rax],al
 b2f:	00 94 03 00 00 12 00 	add    BYTE PTR [rbx+rax*1+0x120000],dl
 b36:	0f 00 20             	verr   WORD PTR [rax]
 b39:	2e 00 00             	cs add BYTE PTR [rax],al
 b3c:	00 00                	add    BYTE PTR [rax],al
 b3e:	00 00                	add    BYTE PTR [rax],al
 b40:	16                   	(bad)
 b41:	00 00                	add    BYTE PTR [rax],al
 b43:	00 00                	add    BYTE PTR [rax],al
 b45:	00 00                	add    BYTE PTR [rax],al
 b47:	00 16                	add    BYTE PTR [rsi],dl
 b49:	02 00                	add    al,BYTE PTR [rax]
 b4b:	00 12                	add    BYTE PTR [rdx],dl
 b4d:	00 0f                	add    BYTE PTR [rdi],cl
 b4f:	00 40 2c             	add    BYTE PTR [rax+0x2c],al
 b52:	00 00                	add    BYTE PTR [rax],al
 b54:	00 00                	add    BYTE PTR [rax],al
 b56:	00 00                	add    BYTE PTR [rax],al
 b58:	05 00 00 00 00       	add    eax,0x0
 b5d:	00 00                	add    BYTE PTR [rax],al
 b5f:	00 f3                	add    bl,dh
 b61:	03 00                	add    eax,DWORD PTR [rax]
 b63:	00 12                	add    BYTE PTR [rdx],dl
 b65:	00 0f                	add    BYTE PTR [rdi],cl
 b67:	00 90 2d 00 00 00    	add    BYTE PTR [rax+0x2d],dl
 b6d:	00 00                	add    BYTE PTR [rax],al
 b6f:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 b72:	00 00                	add    BYTE PTR [rax],al
 b74:	00 00                	add    BYTE PTR [rax],al
 b76:	00 00                	add    BYTE PTR [rax],al
 b78:	81 03 00 00 12 00    	add    DWORD PTR [rbx],0x120000
 b7e:	0f 00 50 2c          	lldt   WORD PTR [rax+0x2c]
 b82:	00 00                	add    BYTE PTR [rax],al
 b84:	00 00                	add    BYTE PTR [rax],al
 b86:	00 00                	add    BYTE PTR [rax],al
 b88:	05 00 00 00 00       	add    eax,0x0
 b8d:	00 00                	add    BYTE PTR [rax],al
 b8f:	00 25 02 00 00 12    	add    BYTE PTR [rip+0x12000002],ah        # 12000b97 <_end@@Base+0x11ffaa0f>
 b95:	00 0f                	add    BYTE PTR [rdi],cl
 b97:	00 90 2b 00 00 00    	add    BYTE PTR [rax+0x2b],dl
 b9d:	00 00                	add    BYTE PTR [rax],al
 b9f:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 ba2:	00 00                	add    BYTE PTR [rax],al
 ba4:	00 00                	add    BYTE PTR [rax],al
 ba6:	00 00                	add    BYTE PTR [rax],al
 ba8:	2f                   	(bad)
 ba9:	02 00                	add    al,BYTE PTR [rax]
 bab:	00 12                	add    BYTE PTR [rdx],dl
 bad:	00 0f                	add    BYTE PTR [rdi],cl
 baf:	00 20                	add    BYTE PTR [rax],ah
 bb1:	2c 00                	sub    al,0x0
 bb3:	00 00                	add    BYTE PTR [rax],al
 bb5:	00 00                	add    BYTE PTR [rax],al
 bb7:	00 0a                	add    BYTE PTR [rdx],cl
 bb9:	00 00                	add    BYTE PTR [rax],al
 bbb:	00 00                	add    BYTE PTR [rax],al
 bbd:	00 00                	add    BYTE PTR [rax],al
 bbf:	00 2b                	add    BYTE PTR [rbx],ch
 bc1:	03 00                	add    eax,DWORD PTR [rax]
 bc3:	00 12                	add    BYTE PTR [rdx],dl
 bc5:	00 0f                	add    BYTE PTR [rdi],cl
 bc7:	00 c0                	add    al,al
 bc9:	21 00                	and    DWORD PTR [rax],eax
 bcb:	00 00                	add    BYTE PTR [rax],al
 bcd:	00 00                	add    BYTE PTR [rax],al
 bcf:	00 26                	add    BYTE PTR [rsi],ah
 bd1:	00 00                	add    BYTE PTR [rax],al
 bd3:	00 00                	add    BYTE PTR [rax],al
 bd5:	00 00                	add    BYTE PTR [rax],al
 bd7:	00 8d 02 00 00 12    	add    BYTE PTR [rbp+0x12000002],cl
 bdd:	00 0f                	add    BYTE PTR [rdi],cl
 bdf:	00 00                	add    BYTE PTR [rax],al
 be1:	2b 00                	sub    eax,DWORD PTR [rax]
 be3:	00 00                	add    BYTE PTR [rax],al
 be5:	00 00                	add    BYTE PTR [rax],al
 be7:	00 03                	add    BYTE PTR [rbx],al
 be9:	00 00                	add    BYTE PTR [rax],al
 beb:	00 00                	add    BYTE PTR [rax],al
 bed:	00 00                	add    BYTE PTR [rax],al
 bef:	00 b3 03 00 00 12    	add    BYTE PTR [rbx+0x12000003],dh
 bf5:	00 0f                	add    BYTE PTR [rdi],cl
 bf7:	00 a0 2b 00 00 00    	add    BYTE PTR [rax+0x2b],ah
 bfd:	00 00                	add    BYTE PTR [rax],al
 bff:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 c02:	00 00                	add    BYTE PTR [rax],al
 c04:	00 00                	add    BYTE PTR [rax],al
 c06:	00 00                	add    BYTE PTR [rax],al
 c08:	92                   	xchg   edx,eax
 c09:	02 00                	add    al,BYTE PTR [rax]
 c0b:	00 12                	add    BYTE PTR [rdx],dl
 c0d:	00 0f                	add    BYTE PTR [rdi],cl
 c0f:	00 b0 2b 00 00 00    	add    BYTE PTR [rax+0x2b],dh
 c15:	00 00                	add    BYTE PTR [rax],al
 c17:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 c1a:	00 00                	add    BYTE PTR [rax],al
 c1c:	00 00                	add    BYTE PTR [rax],al
 c1e:	00 00                	add    BYTE PTR [rax],al
 c20:	88 03                	mov    BYTE PTR [rbx],al
 c22:	00 00                	add    BYTE PTR [rax],al
 c24:	12 00                	adc    al,BYTE PTR [rax]
 c26:	0f 00 d0             	lldt   eax
 c29:	2a 00                	sub    al,BYTE PTR [rax]
 c2b:	00 00                	add    BYTE PTR [rax],al
 c2d:	00 00                	add    BYTE PTR [rax],al
 c2f:	00 03                	add    BYTE PTR [rbx],al
 c31:	00 00                	add    BYTE PTR [rax],al
 c33:	00 00                	add    BYTE PTR [rax],al
 c35:	00 00                	add    BYTE PTR [rax],al
 c37:	00 f8                	add    al,bh
 c39:	03 00                	add    eax,DWORD PTR [rax]
 c3b:	00 12                	add    BYTE PTR [rdx],dl
 c3d:	00 0f                	add    BYTE PTR [rdi],cl
 c3f:	00 d0                	add    al,dl
 c41:	2f                   	(bad)
 c42:	00 00                	add    BYTE PTR [rax],al
 c44:	00 00                	add    BYTE PTR [rax],al
 c46:	00 00                	add    BYTE PTR [rax],al
 c48:	28 00                	sub    BYTE PTR [rax],al
 c4a:	00 00                	add    BYTE PTR [rax],al
 c4c:	00 00                	add    BYTE PTR [rax],al
 c4e:	00 00                	add    BYTE PTR [rax],al
 c50:	97                   	xchg   edi,eax
 c51:	02 00                	add    al,BYTE PTR [rax]
 c53:	00 12                	add    BYTE PTR [rdx],dl
 c55:	00 0f                	add    BYTE PTR [rdi],cl
 c57:	00 10                	add    BYTE PTR [rax],dl
 c59:	2c 00                	sub    al,0x0
 c5b:	00 00                	add    BYTE PTR [rax],al
 c5d:	00 00                	add    BYTE PTR [rax],al
 c5f:	00 08                	add    BYTE PTR [rax],cl
	...
 c69:	04 00                	add    al,0x0
 c6b:	00 12                	add    BYTE PTR [rdx],dl
 c6d:	00 0f                	add    BYTE PTR [rdi],cl
 c6f:	00 e0                	add    al,ah
 c71:	29 00                	sub    DWORD PTR [rax],eax
 c73:	00 00                	add    BYTE PTR [rax],al
 c75:	00 00                	add    BYTE PTR [rax],al
 c77:	00 1a                	add    BYTE PTR [rdx],bl
 c79:	00 00                	add    BYTE PTR [rax],al
 c7b:	00 00                	add    BYTE PTR [rax],al
 c7d:	00 00                	add    BYTE PTR [rax],al
 c7f:	00 0b                	add    BYTE PTR [rbx],cl
 c81:	01 00                	add    DWORD PTR [rax],eax
 c83:	00 22                	add    BYTE PTR [rdx],ah
	...
 c95:	00 00                	add    BYTE PTR [rax],al
 c97:	00 cb                	add    bl,cl
 c99:	01 00                	add    DWORD PTR [rax],eax
 c9b:	00 16                	add    BYTE PTR [rsi],dl
 c9d:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
 ca8:	08 00                	or     BYTE PTR [rax],al
 caa:	00 00                	add    BYTE PTR [rax],al
 cac:	00 00                	add    BYTE PTR [rax],al
 cae:	00 00                	add    BYTE PTR [rax],al
 cb0:	9d                   	popf
 cb1:	03 00                	add    eax,DWORD PTR [rax]
 cb3:	00 12                	add    BYTE PTR [rdx],dl
 cb5:	00 0f                	add    BYTE PTR [rdi],cl
 cb7:	00 20                	add    BYTE PTR [rax],ah
 cb9:	2b 00                	sub    eax,DWORD PTR [rax]
 cbb:	00 00                	add    BYTE PTR [rax],al
 cbd:	00 00                	add    BYTE PTR [rax],al
 cbf:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 cc2:	00 00                	add    BYTE PTR [rax],al
 cc4:	00 00                	add    BYTE PTR [rax],al
 cc6:	00 00                	add    BYTE PTR [rax],al
 cc8:	27                   	(bad)
 cc9:	03 00                	add    eax,DWORD PTR [rax]
 ccb:	00 20                	add    BYTE PTR [rax],ah
 ccd:	00 1b                	add    BYTE PTR [rbx],bl
 ccf:	00 c0                	add    al,al
 cd1:	60                   	(bad)
	...
 cde:	00 00                	add    BYTE PTR [rax],al
 ce0:	49 04 00             	rex.WB add al,0x0
 ce3:	00 12                	add    BYTE PTR [rdx],dl
 ce5:	00 0f                	add    BYTE PTR [rdi],cl
 ce7:	00 80 2e 00 00 00    	add    BYTE PTR [rax+0x2e],al
 ced:	00 00                	add    BYTE PTR [rax],al
 cef:	00 75 00             	add    BYTE PTR [rbp+0x0],dh
 cf2:	00 00                	add    BYTE PTR [rax],al
 cf4:	00 00                	add    BYTE PTR [rax],al
 cf6:	00 00                	add    BYTE PTR [rax],al
 cf8:	57                   	push   rdi
 cf9:	04 00                	add    al,0x0
 cfb:	00 12                	add    BYTE PTR [rdx],dl
 cfd:	00 0f                	add    BYTE PTR [rdi],cl
 cff:	00 d0                	add    al,dl
 d01:	2b 00                	sub    eax,DWORD PTR [rax]
 d03:	00 00                	add    BYTE PTR [rax],al
 d05:	00 00                	add    BYTE PTR [rax],al
 d07:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # d0d <__safestack_unsafe_stack_ptr@@Base+0xd0d>
 d0d:	00 00                	add    BYTE PTR [rax],al
 d0f:	00 9c 02 00 00 12 00 	add    BYTE PTR [rdx+rax*1+0x120000],bl
 d16:	0f 00                	(bad)
 d18:	30 2d 00 00 00 00    	xor    BYTE PTR [rip+0x0],ch        # d1e <__safestack_unsafe_stack_ptr@@Base+0xd1e>
 d1e:	00 00                	add    BYTE PTR [rax],al
 d20:	07                   	(bad)
 d21:	00 00                	add    BYTE PTR [rax],al
 d23:	00 00                	add    BYTE PTR [rax],al
 d25:	00 00                	add    BYTE PTR [rax],al
 d27:	00 c1                	add    cl,al
 d29:	01 00                	add    DWORD PTR [rax],eax
 d2b:	00 12                	add    BYTE PTR [rdx],dl
 d2d:	00 0f                	add    BYTE PTR [rdi],cl
 d2f:	00 80 2b 00 00 00    	add    BYTE PTR [rax+0x2b],al
 d35:	00 00                	add    BYTE PTR [rax],al
 d37:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 d3a:	00 00                	add    BYTE PTR [rax],al
 d3c:	00 00                	add    BYTE PTR [rax],al
 d3e:	00 00                	add    BYTE PTR [rax],al
 d40:	25 03 00 00 10       	and    eax,0x10000003
 d45:	00 1b                	add    BYTE PTR [rbx],bl
 d47:	00 c0                	add    al,al
 d49:	60                   	(bad)
	...
 d56:	00 00                	add    BYTE PTR [rax],al
 d58:	1f                   	(bad)
 d59:	04 00                	add    al,0x0
 d5b:	00 12                	add    BYTE PTR [rdx],dl
 d5d:	00 0f                	add    BYTE PTR [rdi],cl
 d5f:	00 90 29 00 00 00    	add    BYTE PTR [rax+0x29],dl
 d65:	00 00                	add    BYTE PTR [rax],al
 d67:	00 1a                	add    BYTE PTR [rdx],bl
 d69:	00 00                	add    BYTE PTR [rax],al
 d6b:	00 00                	add    BYTE PTR [rax],al
 d6d:	00 00                	add    BYTE PTR [rax],al
 d6f:	00 71 03             	add    BYTE PTR [rcx+0x3],dh
 d72:	00 00                	add    BYTE PTR [rax],al
 d74:	12 00                	adc    al,BYTE PTR [rax]
 d76:	0f 00 e0             	verr   eax
 d79:	2b 00                	sub    eax,DWORD PTR [rax]
 d7b:	00 00                	add    BYTE PTR [rax],al
 d7d:	00 00                	add    BYTE PTR [rax],al
 d7f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # d85 <__safestack_unsafe_stack_ptr@@Base+0xd85>
 d85:	00 00                	add    BYTE PTR [rax],al
 d87:	00 b9 01 00 00 12    	add    BYTE PTR [rcx+0x12000001],bh
 d8d:	00 0f                	add    BYTE PTR [rdi],cl
 d8f:	00 f0                	add    al,dh
 d91:	2b 00                	sub    eax,DWORD PTR [rax]
 d93:	00 00                	add    BYTE PTR [rax],al
 d95:	00 00                	add    BYTE PTR [rax],al
 d97:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # d9d <__safestack_unsafe_stack_ptr@@Base+0xd9d>
 d9d:	00 00                	add    BYTE PTR [rax],al
 d9f:	00 de                	add    dh,bl
 da1:	00 00                	add    BYTE PTR [rax],al
 da3:	00 12                	add    BYTE PTR [rdx],dl
 da5:	00 0f                	add    BYTE PTR [rdi],cl
 da7:	00 00                	add    BYTE PTR [rax],al
 da9:	2f                   	(bad)
 daa:	00 00                	add    BYTE PTR [rax],al
 dac:	00 00                	add    BYTE PTR [rax],al
 dae:	00 00                	add    BYTE PTR [rax],al
 db0:	ad                   	lods   eax,DWORD PTR ds:[rsi]
 db1:	00 00                	add    BYTE PTR [rax],al
 db3:	00 00                	add    BYTE PTR [rax],al
 db5:	00 00                	add    BYTE PTR [rax],al
 db7:	00 61 02             	add    BYTE PTR [rcx+0x2],ah
 dba:	00 00                	add    BYTE PTR [rax],al
 dbc:	10 00                	adc    BYTE PTR [rax],al
 dbe:	1b 00                	sbb    eax,DWORD PTR [rax]
 dc0:	10 61 00             	adc    BYTE PTR [rcx+0x0],ah
	...
 dcf:	00 0e                	add    BYTE PTR [rsi],cl
 dd1:	03 00                	add    eax,DWORD PTR [rax]
 dd3:	00 12                	add    BYTE PTR [rdx],dl
 dd5:	00 0f                	add    BYTE PTR [rdi],cl
 dd7:	00 b0 29 00 00 00    	add    BYTE PTR [rax+0x29],dh
 ddd:	00 00                	add    BYTE PTR [rax],al
 ddf:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
 de2:	00 00                	add    BYTE PTR [rax],al
 de4:	00 00                	add    BYTE PTR [rax],al
 de6:	00 00                	add    BYTE PTR [rax],al
 de8:	66 04 00             	data16 add al,0x0
 deb:	00 22                	add    BYTE PTR [rdx],ah
 ded:	00 0f                	add    BYTE PTR [rdi],cl
 def:	00 c0                	add    al,al
 df1:	22 00                	and    al,BYTE PTR [rax]
 df3:	00 00                	add    BYTE PTR [rax],al
 df5:	00 00                	add    BYTE PTR [rax],al
 df7:	00 2a                	add    BYTE PTR [rdx],ch
 df9:	02 00                	add    al,BYTE PTR [rax]
 dfb:	00 00                	add    BYTE PTR [rax],al
 dfd:	00 00                	add    BYTE PTR [rax],al
 dff:	00 8d 04 00 00 12    	add    BYTE PTR [rbp+0x12000004],cl
 e05:	00 0f                	add    BYTE PTR [rdi],cl
 e07:	00 e8                	add    al,ch
 e09:	2f                   	(bad)
 e0a:	00 00                	add    BYTE PTR [rax],al
 e0c:	00 00                	add    BYTE PTR [rax],al
 e0e:	00 00                	add    BYTE PTR [rax],al
 e10:	28 00                	sub    BYTE PTR [rax],al
 e12:	00 00                	add    BYTE PTR [rax],al
 e14:	00 00                	add    BYTE PTR [rax],al
 e16:	00 00                	add    BYTE PTR [rax],al
 e18:	32 03                	xor    al,BYTE PTR [rbx]
 e1a:	00 00                	add    BYTE PTR [rax],al
 e1c:	12 00                	adc    al,BYTE PTR [rax]
 e1e:	0f 00 c0             	sldt   eax
 e21:	2b 00                	sub    eax,DWORD PTR [rax]
 e23:	00 00                	add    BYTE PTR [rax],al
 e25:	00 00                	add    BYTE PTR [rax],al
 e27:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # e2d <__safestack_unsafe_stack_ptr@@Base+0xe2d>
 e2d:	00 00                	add    BYTE PTR [rax],al
 e2f:	00 f5                	add    ch,dh
 e31:	01 00                	add    DWORD PTR [rax],eax
 e33:	00 12                	add    BYTE PTR [rdx],dl
 e35:	00 0f                	add    BYTE PTR [rdi],cl
 e37:	00 d8                	add    al,bl
 e39:	2f                   	(bad)
 e3a:	00 00                	add    BYTE PTR [rax],al
 e3c:	00 00                	add    BYTE PTR [rax],al
 e3e:	00 00                	add    BYTE PTR [rax],al
 e40:	28 00                	sub    BYTE PTR [rax],al
 e42:	00 00                	add    BYTE PTR [rax],al
 e44:	00 00                	add    BYTE PTR [rax],al
 e46:	00 00                	add    BYTE PTR [rax],al
 e48:	5e                   	pop    rsi
 e49:	02 00                	add    al,BYTE PTR [rax]
 e4b:	00 12                	add    BYTE PTR [rdx],dl
 e4d:	00 0f                	add    BYTE PTR [rdi],cl
 e4f:	00 b0 2d 00 00 00    	add    BYTE PTR [rax+0x2d],dh
 e55:	00 00                	add    BYTE PTR [rax],al
 e57:	00 19                	add    BYTE PTR [rcx],bl
 e59:	00 00                	add    BYTE PTR [rax],al
 e5b:	00 00                	add    BYTE PTR [rax],al
 e5d:	00 00                	add    BYTE PTR [rax],al
 e5f:	00 aa 02 00 00 12    	add    BYTE PTR [rdx+0x12000002],ch
 e65:	00 0f                	add    BYTE PTR [rdi],cl
 e67:	00 60 2b             	add    BYTE PTR [rax+0x2b],ah
 e6a:	00 00                	add    BYTE PTR [rax],al
 e6c:	00 00                	add    BYTE PTR [rax],al
 e6e:	00 00                	add    BYTE PTR [rax],al
 e70:	04 00                	add    al,0x0
 e72:	00 00                	add    BYTE PTR [rax],al
 e74:	00 00                	add    BYTE PTR [rax],al
 e76:	00 00                	add    BYTE PTR [rax],al
 e78:	5b                   	pop    rbx
 e79:	03 00                	add    eax,DWORD PTR [rax]
 e7b:	00 12                	add    BYTE PTR [rdx],dl
 e7d:	00 0f                	add    BYTE PTR [rdi],cl
 e7f:	00 e0                	add    al,ah
 e81:	2f                   	(bad)
 e82:	00 00                	add    BYTE PTR [rax],al
 e84:	00 00                	add    BYTE PTR [rax],al
 e86:	00 00                	add    BYTE PTR [rax],al
 e88:	28 00                	sub    BYTE PTR [rax],al
 e8a:	00 00                	add    BYTE PTR [rax],al
 e8c:	00 00                	add    BYTE PTR [rax],al
 e8e:	00 00                	add    BYTE PTR [rax],al
 e90:	3f                   	(bad)
 e91:	04 00                	add    al,0x0
 e93:	00 12                	add    BYTE PTR [rdx],dl
 e95:	00 0f                	add    BYTE PTR [rdi],cl
 e97:	00 70 2b             	add    BYTE PTR [rax+0x2b],dh
 e9a:	00 00                	add    BYTE PTR [rax],al
 e9c:	00 00                	add    BYTE PTR [rax],al
 e9e:	00 00                	add    BYTE PTR [rax],al
 ea0:	04 00                	add    al,0x0
 ea2:	00 00                	add    BYTE PTR [rax],al
 ea4:	00 00                	add    BYTE PTR [rax],al
 ea6:	00 00                	add    BYTE PTR [rax],al
 ea8:	79 03                	jns    ead <__safestack_unsafe_stack_ptr@@Base+0xead>
 eaa:	00 00                	add    BYTE PTR [rax],al
 eac:	12 00                	adc    al,BYTE PTR [rax]
 eae:	0f 00 d0             	lldt   eax
 eb1:	2d 00 00 00 00       	sub    eax,0x0
 eb6:	00 00                	add    BYTE PTR [rax],al
 eb8:	13 00                	adc    eax,DWORD PTR [rax]
 eba:	00 00                	add    BYTE PTR [rax],al
 ebc:	00 00                	add    BYTE PTR [rax],al
 ebe:	00 00                	add    BYTE PTR [rax],al
 ec0:	7c 03                	jl     ec5 <__safestack_unsafe_stack_ptr@@Base+0xec5>
 ec2:	00 00                	add    BYTE PTR [rax],al
 ec4:	10 00                	adc    BYTE PTR [rax],al
 ec6:	1c 00                	sbb    al,0x0
 ec8:	88 61 00             	mov    BYTE PTR [rcx+0x0],ah
	...
 ed7:	00 cb                	add    bl,cl
 ed9:	03 00                	add    eax,DWORD PTR [rax]
 edb:	00 12                	add    BYTE PTR [rdx],dl
 edd:	00 0f                	add    BYTE PTR [rdi],cl
 edf:	00 ac 22 00 00 00 00 	add    BYTE PTR [rdx+riz*1+0x0],ch
 ee6:	00 00                	add    BYTE PTR [rax],al
 ee8:	05 00 00 00 00       	add    eax,0x0
 eed:	00 00                	add    BYTE PTR [rax],al
 eef:	00 08                	add    BYTE PTR [rax],cl
 ef1:	03 00                	add    eax,DWORD PTR [rax]
 ef3:	00 12                	add    BYTE PTR [rdx],dl
 ef5:	00 0f                	add    BYTE PTR [rdi],cl
 ef7:	00 50 2d             	add    BYTE PTR [rax+0x2d],dl
 efa:	00 00                	add    BYTE PTR [rax],al
 efc:	00 00                	add    BYTE PTR [rax],al
 efe:	00 00                	add    BYTE PTR [rax],al
 f00:	06                   	(bad)
 f01:	00 00                	add    BYTE PTR [rax],al
 f03:	00 00                	add    BYTE PTR [rax],al
 f05:	00 00                	add    BYTE PTR [rax],al
 f07:	00 19                	add    BYTE PTR [rcx],bl
 f09:	04 00                	add    al,0x0
 f0b:	00 12                	add    BYTE PTR [rdx],dl
 f0d:	00 0f                	add    BYTE PTR [rdi],cl
 f0f:	00 60 2d             	add    BYTE PTR [rax+0x2d],ah
 f12:	00 00                	add    BYTE PTR [rax],al
 f14:	00 00                	add    BYTE PTR [rax],al
 f16:	00 00                	add    BYTE PTR [rax],al
 f18:	07                   	(bad)
 f19:	00 00                	add    BYTE PTR [rax],al
 f1b:	00 00                	add    BYTE PTR [rax],al
 f1d:	00 00                	add    BYTE PTR [rax],al
 f1f:	00 b4 02 00 00 12 00 	add    BYTE PTR [rdx+rax*1+0x120000],dh
 f26:	0f 00 60 2c          	verr   WORD PTR [rax+0x2c]
 f2a:	00 00                	add    BYTE PTR [rax],al
 f2c:	00 00                	add    BYTE PTR [rax],al
 f2e:	00 00                	add    BYTE PTR [rax],al
 f30:	08 00                	or     BYTE PTR [rax],al
 f32:	00 00                	add    BYTE PTR [rax],al
 f34:	00 00                	add    BYTE PTR [rax],al
 f36:	00 00                	add    BYTE PTR [rax],al
 f38:	f8                   	clc
 f39:	02 00                	add    al,BYTE PTR [rax]
 f3b:	00 12                	add    BYTE PTR [rdx],dl
 f3d:	00 0f                	add    BYTE PTR [rdi],cl
 f3f:	00 70 2d             	add    BYTE PTR [rax+0x2d],dh
 f42:	00 00                	add    BYTE PTR [rax],al
 f44:	00 00                	add    BYTE PTR [rax],al
 f46:	00 00                	add    BYTE PTR [rax],al
 f48:	07                   	(bad)
 f49:	00 00                	add    BYTE PTR [rax],al
 f4b:	00 00                	add    BYTE PTR [rax],al
 f4d:	00 00                	add    BYTE PTR [rax],al
 f4f:	00 39                	add    BYTE PTR [rcx],bh
 f51:	04 00                	add    al,0x0
 f53:	00 12                	add    BYTE PTR [rdx],dl
 f55:	00 0f                	add    BYTE PTR [rdi],cl
 f57:	00 80 2d 00 00 00    	add    BYTE PTR [rax+0x2d],al
 f5d:	00 00                	add    BYTE PTR [rax],al
 f5f:	00 07                	add    BYTE PTR [rdi],al
 f61:	00 00                	add    BYTE PTR [rax],al
 f63:	00 00                	add    BYTE PTR [rax],al
 f65:	00 00                	add    BYTE PTR [rax],al
 f67:	00 5f 04             	add    BYTE PTR [rdi+0x4],bl
 f6a:	00 00                	add    BYTE PTR [rax],al
 f6c:	12 00                	adc    al,BYTE PTR [rax]
 f6e:	0f 00                	(bad)
 f70:	b0 2f                	mov    al,0x2f
 f72:	00 00                	add    BYTE PTR [rax],al
 f74:	00 00                	add    BYTE PTR [rax],al
 f76:	00 00                	add    BYTE PTR [rax],al
 f78:	08 00                	or     BYTE PTR [rax],al
 f7a:	00 00                	add    BYTE PTR [rax],al
 f7c:	00 00                	add    BYTE PTR [rax],al
 f7e:	00 00                	add    BYTE PTR [rax],al
 f80:	39 03                	cmp    DWORD PTR [rbx],eax
 f82:	00 00                	add    BYTE PTR [rax],al
 f84:	12 00                	adc    al,BYTE PTR [rax]
 f86:	0f 00 c0             	sldt   eax
 f89:	2f                   	(bad)
 f8a:	00 00                	add    BYTE PTR [rax],al
 f8c:	00 00                	add    BYTE PTR [rax],al
 f8e:	00 00                	add    BYTE PTR [rax],al
 f90:	08 00                	or     BYTE PTR [rax],al
 f92:	00 00                	add    BYTE PTR [rax],al
 f94:	00 00                	add    BYTE PTR [rax],al
 f96:	00 00                	add    BYTE PTR [rax],al
 f98:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
 f99:	03 00                	add    eax,DWORD PTR [rax]
 f9b:	00 10                	add    BYTE PTR [rax],dl
 f9d:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 fa0:	10 61 00             	adc    BYTE PTR [rcx+0x0],ah
	...
 faf:	00 4f 03             	add    BYTE PTR [rdi+0x3],cl
 fb2:	00 00                	add    BYTE PTR [rax],al
 fb4:	12 00                	adc    al,BYTE PTR [rax]
 fb6:	0f 00 c0             	sldt   eax
 fb9:	2a 00                	sub    al,BYTE PTR [rax]
 fbb:	00 00                	add    BYTE PTR [rax],al
 fbd:	00 00                	add    BYTE PTR [rax],al
 fbf:	00 06                	add    BYTE PTR [rsi],al
 fc1:	00 00                	add    BYTE PTR [rax],al
 fc3:	00 00                	add    BYTE PTR [rax],al
 fc5:	00 00                	add    BYTE PTR [rax],al
 fc7:	00 b8 03 00 00 12    	add    BYTE PTR [rax+0x12000003],bh
 fcd:	00 0f                	add    BYTE PTR [rdi],cl
 fcf:	00 f0                	add    al,dh
 fd1:	2d 00 00 00 00       	sub    eax,0x0
 fd6:	00 00                	add    BYTE PTR [rax],al
 fd8:	13 00                	adc    eax,DWORD PTR [rax]
 fda:	00 00                	add    BYTE PTR [rax],al
 fdc:	00 00                	add    BYTE PTR [rax],al
 fde:	00 00                	add    BYTE PTR [rax],al
 fe0:	c1 03 00             	rol    DWORD PTR [rbx],0x0
 fe3:	00 12                	add    BYTE PTR [rdx],dl
 fe5:	00 0f                	add    BYTE PTR [rdi],cl
 fe7:	00 10                	add    BYTE PTR [rax],dl
 fe9:	2b 00                	sub    eax,DWORD PTR [rax]
 feb:	00 00                	add    BYTE PTR [rax],al
 fed:	00 00                	add    BYTE PTR [rax],al
 fef:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 ff2:	00 00                	add    BYTE PTR [rax],al
 ff4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000ff8 <.dynstr>:
     ff8:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     ffb:	54                   	push   rsp
     ffc:	4d 5f                	rex.WRB pop r15
     ffe:	64 65 72 65          	fs gs jb 1067 <__safestack_unsafe_stack_ptr@@Base+0x1067>
    1002:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
    1009:	4d 
    100a:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
    100c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    100d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    100e:	65 54                	gs push rsp
    1010:	61                   	(bad)
    1011:	62 6c 65             	(bad)
    1014:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1017:	67 6d                	ins    DWORD PTR es:[edi],dx
    1019:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    101a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    101b:	5f                   	pop    rdi
    101c:	73 74                	jae    1092 <__safestack_unsafe_stack_ptr@@Base+0x1092>
    101e:	61                   	(bad)
    101f:	72 74                	jb     1095 <__safestack_unsafe_stack_ptr@@Base+0x1095>
    1021:	5f                   	pop    rdi
    1022:	5f                   	pop    rdi
    1023:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1026:	54                   	push   rsp
    1027:	4d 5f                	rex.WRB pop r15
    1029:	72 65                	jb     1090 <__safestack_unsafe_stack_ptr@@Base+0x1090>
    102b:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
    1032:	4d 
    1033:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
    1035:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1036:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1037:	65 54                	gs push rsp
    1039:	61                   	(bad)
    103a:	62 6c 65             	(bad)
    103d:	00 70 74             	add    BYTE PTR [rax+0x74],dh
    1040:	68 72 65 61 64       	push   0x64616572
    1045:	5f                   	pop    rdi
    1046:	61                   	(bad)
    1047:	74 74                	je     10bd <__safestack_unsafe_stack_ptr@@Base+0x10bd>
    1049:	72 5f                	jb     10aa <__safestack_unsafe_stack_ptr@@Base+0x10aa>
    104b:	67 65 74 73          	addr32 gs je 10c2 <__safestack_unsafe_stack_ptr@@Base+0x10c2>
    104f:	74 61                	je     10b2 <__safestack_unsafe_stack_ptr@@Base+0x10b2>
    1051:	63 6b 73             	movsxd ebp,DWORD PTR [rbx+0x73]
    1054:	69 7a 65 00 66 72 65 	imul   edi,DWORD PTR [rdx+0x65],0x65726600
    105b:	65 00 67 65          	add    BYTE PTR gs:[rdi+0x65],ah
    105f:	74 72                	je     10d3 <__safestack_unsafe_stack_ptr@@Base+0x10d3>
    1061:	6c                   	ins    BYTE PTR es:[rdi],dx
    1062:	69 6d 69 74 00 70 74 	imul   ebp,DWORD PTR [rbp+0x69],0x74700074
    1069:	68 72 65 61 64       	push   0x64616572
    106e:	5f                   	pop    rdi
    106f:	61                   	(bad)
    1070:	74 74                	je     10e6 <__safestack_unsafe_stack_ptr@@Base+0x10e6>
    1072:	72 5f                	jb     10d3 <__safestack_unsafe_stack_ptr@@Base+0x10d3>
    1074:	67 65 74 67          	addr32 gs je 10df <__safestack_unsafe_stack_ptr@@Base+0x10df>
    1078:	75 61                	jne    10db <__safestack_unsafe_stack_ptr@@Base+0x10db>
    107a:	72 64                	jb     10e0 <__safestack_unsafe_stack_ptr@@Base+0x10e0>
    107c:	73 69                	jae    10e7 <__safestack_unsafe_stack_ptr@@Base+0x10e7>
    107e:	7a 65                	jp     10e5 <__safestack_unsafe_stack_ptr@@Base+0x10e5>
    1080:	00 70 74             	add    BYTE PTR [rax+0x74],dh
    1083:	68 72 65 61 64       	push   0x64616572
    1088:	5f                   	pop    rdi
    1089:	61                   	(bad)
    108a:	74 74                	je     1100 <__safestack_unsafe_stack_ptr@@Base+0x1100>
    108c:	72 5f                	jb     10ed <__safestack_unsafe_stack_ptr@@Base+0x10ed>
    108e:	69 6e 69 74 00 67 65 	imul   ebp,DWORD PTR [rsi+0x69],0x65670074
    1095:	74 70                	je     1107 <__safestack_unsafe_stack_ptr@@Base+0x1107>
    1097:	69 64 00 70 74 68 72 	imul   esp,DWORD PTR [rax+rax*1+0x70],0x65726874
    109e:	65 
    109f:	61                   	(bad)
    10a0:	64 5f                	fs pop rdi
    10a2:	6d                   	ins    DWORD PTR es:[rdi],dx
    10a3:	75 74                	jne    1119 <__safestack_unsafe_stack_ptr@@Base+0x1119>
    10a5:	65 78 5f             	gs js  1107 <__safestack_unsafe_stack_ptr@@Base+0x1107>
    10a8:	6c                   	ins    BYTE PTR es:[rdi],dx
    10a9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10aa:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    10ad:	70 74                	jo     1123 <__safestack_unsafe_stack_ptr@@Base+0x1123>
    10af:	68 72 65 61 64       	push   0x64616572
    10b4:	5f                   	pop    rdi
    10b5:	61                   	(bad)
    10b6:	74 74                	je     112c <__safestack_unsafe_stack_ptr@@Base+0x112c>
    10b8:	72 5f                	jb     1119 <__safestack_unsafe_stack_ptr@@Base+0x1119>
    10ba:	64 65 73 74          	fs gs jae 1132 <__safestack_unsafe_stack_ptr@@Base+0x1132>
    10be:	72 6f                	jb     112f <__safestack_unsafe_stack_ptr@@Base+0x112f>
    10c0:	79 00                	jns    10c2 <__safestack_unsafe_stack_ptr@@Base+0x10c2>
    10c2:	6d                   	ins    DWORD PTR es:[rdi],dx
    10c3:	61                   	(bad)
    10c4:	6c                   	ins    BYTE PTR es:[rdi],dx
    10c5:	6c                   	ins    BYTE PTR es:[rdi],dx
    10c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10c7:	63 00                	movsxd eax,DWORD PTR [rax]
    10c9:	5f                   	pop    rdi
    10ca:	5f                   	pop    rdi
    10cb:	6c                   	ins    BYTE PTR es:[rdi],dx
    10cc:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
    10d3:	72 74                	jb     1149 <__safestack_unsafe_stack_ptr@@Base+0x1149>
    10d5:	5f                   	pop    rdi
    10d6:	6d                   	ins    DWORD PTR es:[rdi],dx
    10d7:	61                   	(bad)
    10d8:	69 6e 00 70 74 68 72 	imul   ebp,DWORD PTR [rsi+0x0],0x72687470
    10df:	65 61                	gs (bad)
    10e1:	64 5f                	fs pop rdi
    10e3:	6b 65 79 5f          	imul   esp,DWORD PTR [rbp+0x79],0x5f
    10e7:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    10ea:	61                   	(bad)
    10eb:	74 65                	je     1152 <__safestack_unsafe_stack_ptr@@Base+0x1152>
    10ed:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    10f0:	64 65 72 72          	fs gs jb 1166 <__safestack_unsafe_stack_ptr@@Base+0x1166>
    10f4:	00 66 70             	add    BYTE PTR [rsi+0x70],ah
    10f7:	72 69                	jb     1162 <__safestack_unsafe_stack_ptr@@Base+0x1162>
    10f9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10fa:	74 66                	je     1162 <__safestack_unsafe_stack_ptr@@Base+0x1162>
    10fc:	00 64 6c 73          	add    BYTE PTR [rsp+rbp*2+0x73],ah
    1100:	79 6d                	jns    116f <__safestack_unsafe_stack_ptr@@Base+0x116f>
    1102:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1105:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
    1108:	5f                   	pop    rdi
    1109:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
    110f:	7a 65                	jp     1176 <__safestack_unsafe_stack_ptr@@Base+0x1176>
    1111:	00 70 74             	add    BYTE PTR [rax+0x74],dh
    1114:	68 72 65 61 64       	push   0x64616572
    1119:	5f                   	pop    rdi
    111a:	73 65                	jae    1181 <__safestack_unsafe_stack_ptr@@Base+0x1181>
    111c:	74 73                	je     1191 <__safestack_unsafe_stack_ptr@@Base+0x1191>
    111e:	70 65                	jo     1185 <__safestack_unsafe_stack_ptr@@Base+0x1185>
    1120:	63 69 66             	movsxd ebp,DWORD PTR [rcx+0x66]
    1123:	69 63 00 70 74 68 72 	imul   esp,DWORD PTR [rbx+0x0],0x72687470
    112a:	65 61                	gs (bad)
    112c:	64 5f                	fs pop rdi
    112e:	6d                   	ins    DWORD PTR es:[rdi],dx
    112f:	75 74                	jne    11a5 <__safestack_unsafe_stack_ptr@@Base+0x11a5>
    1131:	65 78 5f             	gs js  1193 <__safestack_unsafe_stack_ptr@@Base+0x1193>
    1134:	75 6e                	jne    11a4 <__safestack_unsafe_stack_ptr@@Base+0x11a4>
    1136:	6c                   	ins    BYTE PTR es:[rdi],dx
    1137:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1138:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    113b:	5f                   	pop    rdi
    113c:	5f                   	pop    rdi
    113d:	65 72 72             	gs jb  11b2 <__safestack_unsafe_stack_ptr@@Base+0x11b2>
    1140:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1141:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1142:	5f                   	pop    rdi
    1143:	6c                   	ins    BYTE PTR es:[rdi],dx
    1144:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1145:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    1148:	69 6f 6e 00 64 6c 76 	imul   ebp,DWORD PTR [rdi+0x6e],0x766c6400
    114f:	73 79                	jae    11ca <__safestack_unsafe_stack_ptr@@Base+0x11ca>
    1151:	6d                   	ins    DWORD PTR es:[rdi],dx
    1152:	00 61 62             	add    BYTE PTR [rcx+0x62],ah
    1155:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1156:	72 74                	jb     11cc <__safestack_unsafe_stack_ptr@@Base+0x11cc>
    1158:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    115b:	74 6c                	je     11c9 <__safestack_unsafe_stack_ptr@@Base+0x11c9>
    115d:	73 5f                	jae    11be <__safestack_unsafe_stack_ptr@@Base+0x11be>
    115f:	67 65 74 5f          	addr32 gs je 11c2 <__safestack_unsafe_stack_ptr@@Base+0x11c2>
    1163:	61                   	(bad)
    1164:	64 64 72 00          	fs fs jb 1168 <__safestack_unsafe_stack_ptr@@Base+0x1168>
    1168:	70 75                	jo     11df <__safestack_unsafe_stack_ptr@@Base+0x11df>
    116a:	74 73                	je     11df <__safestack_unsafe_stack_ptr@@Base+0x11df>
    116c:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
    116f:	74 73                	je     11e4 <__safestack_unsafe_stack_ptr@@Base+0x11e4>
    1171:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    1174:	72 74                	jb     11ea <__safestack_unsafe_stack_ptr@@Base+0x11ea>
    1176:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1177:	6c                   	ins    BYTE PTR es:[rdi],dx
    1178:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
    117c:	6d                   	ins    DWORD PTR es:[rdi],dx
    117d:	2e 73 6f             	cs jae 11ef <__safestack_unsafe_stack_ptr@@Base+0x11ef>
    1180:	2e 36 00 6c 69 62    	cs ss add BYTE PTR [rcx+rbp*2+0x62],ch
    1186:	72 65                	jb     11ed <__safestack_unsafe_stack_ptr@@Base+0x11ed>
    1188:	73 6f                	jae    11f9 <__safestack_unsafe_stack_ptr@@Base+0x11f9>
    118a:	6c                   	ins    BYTE PTR es:[rdi],dx
    118b:	76 2e                	jbe    11bb <__safestack_unsafe_stack_ptr@@Base+0x11bb>
    118d:	73 6f                	jae    11fe <__safestack_unsafe_stack_ptr@@Base+0x11fe>
    118f:	2e 32 00             	cs xor al,BYTE PTR [rax]
    1192:	6c                   	ins    BYTE PTR es:[rdi],dx
    1193:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
    119a:	36 00 6c 64 2d       	ss add BYTE PTR [rsp+riz*2+0x2d],ch
    119f:	6c                   	ins    BYTE PTR es:[rdi],dx
    11a0:	69 6e 75 78 2d 78 38 	imul   ebp,DWORD PTR [rsi+0x75],0x38782d78
    11a7:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
    11ad:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11ae:	2e 32 00             	cs xor al,BYTE PTR [rax]
    11b1:	67 5f                	addr32 pop rdi
    11b3:	69 6e 63 35 39 00 67 	imul   ebp,DWORD PTR [rsi+0x63],0x67003935
    11ba:	5f                   	pop    rdi
    11bb:	72 64                	jb     1221 <__safestack_unsafe_stack_ptr@@Base+0x1221>
    11bd:	69 32 72 61 78 00    	imul   esi,DWORD PTR [rdx],0x786172
    11c3:	5f                   	pop    rdi
    11c4:	5f                   	pop    rdi
    11c5:	73 61                	jae    1228 <__safestack_unsafe_stack_ptr@@Base+0x1228>
    11c7:	66 65 73 74          	data16 gs jae 123f <__safestack_unsafe_stack_ptr@@Base+0x123f>
    11cb:	61                   	(bad)
    11cc:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    11cf:	75 6e                	jne    123f <__safestack_unsafe_stack_ptr@@Base+0x123f>
    11d1:	73 61                	jae    1234 <__safestack_unsafe_stack_ptr@@Base+0x1234>
    11d3:	66 65 5f             	gs pop di
    11d6:	73 74                	jae    124c <__safestack_unsafe_stack_ptr@@Base+0x124c>
    11d8:	61                   	(bad)
    11d9:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    11dc:	70 74                	jo     1252 <__safestack_unsafe_stack_ptr@@Base+0x1252>
    11de:	72 00                	jb     11e0 <__safestack_unsafe_stack_ptr@@Base+0x11e0>
    11e0:	67 5f                	addr32 pop rdi
    11e2:	6c                   	ins    BYTE PTR es:[rdi],dx
    11e3:	65 61                	gs (bad)
    11e5:	6b 31 00             	imul   esi,DWORD PTR [rcx],0x0
    11e8:	67 5f                	addr32 pop rdi
    11ea:	73 74                	jae    1260 <__safestack_unsafe_stack_ptr@@Base+0x1260>
    11ec:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    11ef:	73 68                	jae    1259 <__safestack_unsafe_stack_ptr@@Base+0x1259>
    11f1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    11f4:	73 61                	jae    1257 <__safestack_unsafe_stack_ptr@@Base+0x1257>
    11f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11f7:	69 74 69 7a 65 72 5f 	imul   esi,DWORD PTR [rcx+rbp*2+0x7a],0x695f7265
    11fe:	69 
    11ff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1200:	74 65                	je     1267 <__safestack_unsafe_stack_ptr@@Base+0x1267>
    1202:	72 6e                	jb     1272 <__safestack_unsafe_stack_ptr@@Base+0x1272>
    1204:	61                   	(bad)
    1205:	6c                   	ins    BYTE PTR es:[rdi],dx
    1206:	5f                   	pop    rdi
    1207:	6d                   	ins    DWORD PTR es:[rdi],dx
    1208:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    120a:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
    120d:	00 67 61             	add    BYTE PTR [rdi+0x61],ah
    1210:	64 64 78 78          	fs fs js 128c <__safestack_unsafe_stack_ptr@@Base+0x128c>
    1214:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    1217:	73 75                	jae    128e <__safestack_unsafe_stack_ptr@@Base+0x128e>
    1219:	62                   	(bad)
    121a:	78 79                	js     1295 <__safestack_unsafe_stack_ptr@@Base+0x1295>
    121c:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    121f:	72 64                	jb     1285 <__safestack_unsafe_stack_ptr@@Base+0x1285>
    1221:	78 32                	js     1255 <__safestack_unsafe_stack_ptr@@Base+0x1255>
    1223:	72 61                	jb     1286 <__safestack_unsafe_stack_ptr@@Base+0x1286>
    1225:	78 00                	js     1227 <__safestack_unsafe_stack_ptr@@Base+0x1227>
    1227:	67 5f                	addr32 pop rdi
    1229:	70 6f                	jo     129a <__safestack_unsafe_stack_ptr@@Base+0x129a>
    122b:	70 72                	jo     129f <__safestack_unsafe_stack_ptr@@Base+0x129f>
    122d:	64 78 00             	fs js  1230 <__safestack_unsafe_stack_ptr@@Base+0x1230>
    1230:	5f                   	pop    rdi
    1231:	5f                   	pop    rdi
    1232:	73 61                	jae    1295 <__safestack_unsafe_stack_ptr@@Base+0x1295>
    1234:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1235:	69 74 69 7a 65 72 5f 	imul   esi,DWORD PTR [rcx+rbp*2+0x7a],0x695f7265
    123c:	69 
    123d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    123e:	74 65                	je     12a5 <__safestack_unsafe_stack_ptr@@Base+0x12a5>
    1240:	72 6e                	jb     12b0 <__safestack_unsafe_stack_ptr@@Base+0x12b0>
    1242:	61                   	(bad)
    1243:	6c                   	ins    BYTE PTR es:[rdi],dx
    1244:	5f                   	pop    rdi
    1245:	6d                   	ins    DWORD PTR es:[rdi],dx
    1246:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1248:	73 65                	jae    12af <__safestack_unsafe_stack_ptr@@Base+0x12af>
    124a:	74 00                	je     124c <__safestack_unsafe_stack_ptr@@Base+0x124c>
    124c:	76 75                	jbe    12c3 <__safestack_unsafe_stack_ptr@@Base+0x12c3>
    124e:	6c                   	ins    BYTE PTR es:[rdi],dx
    124f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1250:	5f                   	pop    rdi
    1251:	6c                   	ins    BYTE PTR es:[rdi],dx
    1252:	65 61                	gs (bad)
    1254:	6b 00 67             	imul   eax,DWORD PTR [rax],0x67
    1257:	33 00                	xor    eax,DWORD PTR [rax]
    1259:	5f                   	pop    rdi
    125a:	65 64 61             	gs fs (bad)
    125d:	74 61                	je     12c0 <__safestack_unsafe_stack_ptr@@Base+0x12c0>
    125f:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    1262:	79 79                	jns    12dd <__safestack_unsafe_stack_ptr@@Base+0x12dd>
    1264:	72 65                	jb     12cb <__safestack_unsafe_stack_ptr@@Base+0x12cb>
    1266:	74 00                	je     1268 <__safestack_unsafe_stack_ptr@@Base+0x1268>
    1268:	5f                   	pop    rdi
    1269:	5f                   	pop    rdi
    126a:	73 61                	jae    12cd <__safestack_unsafe_stack_ptr@@Base+0x12cd>
    126c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    126d:	69 74 69 7a 65 72 5f 	imul   esi,DWORD PTR [rcx+rbp*2+0x7a],0x695f7265
    1274:	69 
    1275:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1276:	74 65                	je     12dd <__safestack_unsafe_stack_ptr@@Base+0x12dd>
    1278:	72 6e                	jb     12e8 <__safestack_unsafe_stack_ptr@@Base+0x12e8>
    127a:	61                   	(bad)
    127b:	6c                   	ins    BYTE PTR es:[rdi],dx
    127c:	5f                   	pop    rdi
    127d:	6d                   	ins    DWORD PTR es:[rdi],dx
    127e:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1280:	6d                   	ins    DWORD PTR es:[rdi],dx
    1281:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1282:	76 65                	jbe    12e9 <__safestack_unsafe_stack_ptr@@Base+0x12e9>
    1284:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    1287:	7a 31                	jp     12ba <__safestack_unsafe_stack_ptr@@Base+0x12ba>
    1289:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    128c:	7a 33                	jp     12c1 <__safestack_unsafe_stack_ptr@@Base+0x12c1>
    128e:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    1291:	7a 35                	jp     12c8 <__safestack_unsafe_stack_ptr@@Base+0x12c8>
    1293:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    1296:	73 75                	jae    130d <__safestack_unsafe_stack_ptr@@Base+0x130d>
    1298:	62 79 78 00 67       	(bad)
    129d:	5f                   	pop    rdi
    129e:	6c                   	ins    BYTE PTR es:[rdi],dx
    129f:	64 32 00             	xor    al,BYTE PTR fs:[rax]
    12a2:	67 5f                	addr32 pop rdi
    12a4:	72 61                	jb     1307 <__safestack_unsafe_stack_ptr@@Base+0x1307>
    12a6:	78 32                	js     12da <__safestack_unsafe_stack_ptr@@Base+0x12da>
    12a8:	72 64                	jb     130e <__safestack_unsafe_stack_ptr@@Base+0x130e>
    12aa:	78 00                	js     12ac <__safestack_unsafe_stack_ptr@@Base+0x12ac>
    12ac:	67 61                	addr32 (bad)
    12ae:	64 64 78 79          	fs fs js 132b <__safestack_unsafe_stack_ptr@@Base+0x132b>
    12b2:	7a 00                	jp     12b4 <__safestack_unsafe_stack_ptr@@Base+0x12b4>
    12b4:	5f                   	pop    rdi
    12b5:	5f                   	pop    rdi
    12b6:	73 61                	jae    1319 <__safestack_unsafe_stack_ptr@@Base+0x1319>
    12b8:	66 65 73 74          	data16 gs jae 1330 <__safestack_unsafe_stack_ptr@@Base+0x1330>
    12bc:	61                   	(bad)
    12bd:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    12c0:	69 6e 69 74 00 62 69 	imul   ebp,DWORD PTR [rsi+0x69],0x69620074
    12c7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12c8:	73 68                	jae    1332 <__safestack_unsafe_stack_ptr@@Base+0x1332>
    12ca:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    12cd:	67 65 74 5f          	addr32 gs je 1330 <__safestack_unsafe_stack_ptr@@Base+0x1330>
    12d1:	75 6e                	jne    1341 <__safestack_unsafe_stack_ptr@@Base+0x1341>
    12d3:	73 61                	jae    1336 <__safestack_unsafe_stack_ptr@@Base+0x1336>
    12d5:	66 65 5f             	gs pop di
    12d8:	73 74                	jae    134e <__safestack_unsafe_stack_ptr@@Base+0x134e>
    12da:	61                   	(bad)
    12db:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    12de:	70 74                	jo     1354 <__safestack_unsafe_stack_ptr@@Base+0x1354>
    12e0:	72 00                	jb     12e2 <__safestack_unsafe_stack_ptr@@Base+0x12e2>
    12e2:	61                   	(bad)
    12e3:	64 64 72 65          	fs fs jb 134c <__safestack_unsafe_stack_ptr@@Base+0x134c>
    12e7:	73 73                	jae    135c <__safestack_unsafe_stack_ptr@@Base+0x135c>
    12e9:	5f                   	pop    rdi
    12ea:	74 61                	je     134d <__safestack_unsafe_stack_ptr@@Base+0x134d>
    12ec:	6b 65 6e 00          	imul   esp,DWORD PTR [rbp+0x6e],0x0
    12f0:	67 5f                	addr32 pop rdi
    12f2:	73 74                	jae    1368 <__safestack_unsafe_stack_ptr@@Base+0x1368>
    12f4:	34 00                	xor    al,0x0
    12f6:	67 5f                	addr32 pop rdi
    12f8:	73 79                	jae    1373 <__safestack_unsafe_stack_ptr@@Base+0x1373>
    12fa:	73 63                	jae    135f <__safestack_unsafe_stack_ptr@@Base+0x135f>
    12fc:	61                   	(bad)
    12fd:	6c                   	ins    BYTE PTR es:[rdi],dx
    12fe:	6c                   	ins    BYTE PTR es:[rdi],dx
    12ff:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    1302:	73 74                	jae    1378 <__safestack_unsafe_stack_ptr@@Base+0x1378>
    1304:	32 00                	xor    al,BYTE PTR [rax]
    1306:	5f                   	pop    rdi
    1307:	5f                   	pop    rdi
    1308:	67 65 74 5f          	addr32 gs je 136b <__safestack_unsafe_stack_ptr@@Base+0x136b>
    130c:	75 6e                	jne    137c <__safestack_unsafe_stack_ptr@@Base+0x137c>
    130e:	73 61                	jae    1371 <__safestack_unsafe_stack_ptr@@Base+0x1371>
    1310:	66 65 5f             	gs pop di
    1313:	73 74                	jae    1389 <__safestack_unsafe_stack_ptr@@Base+0x1389>
    1315:	61                   	(bad)
    1316:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    1319:	74 6f                	je     138a <__safestack_unsafe_stack_ptr@@Base+0x138a>
    131b:	70 00                	jo     131d <__safestack_unsafe_stack_ptr@@Base+0x131d>
    131d:	5f                   	pop    rdi
    131e:	5f                   	pop    rdi
    131f:	64 61                	fs (bad)
    1321:	74 61                	je     1384 <__safestack_unsafe_stack_ptr@@Base+0x1384>
    1323:	5f                   	pop    rdi
    1324:	73 74                	jae    139a <__safestack_unsafe_stack_ptr@@Base+0x139a>
    1326:	61                   	(bad)
    1327:	72 74                	jb     139d <__safestack_unsafe_stack_ptr@@Base+0x139d>
    1329:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    132c:	69 6e 63 38 00 67 5f 	imul   ebp,DWORD PTR [rsi+0x63],0x5f670038
    1333:	73 68                	jae    139d <__safestack_unsafe_stack_ptr@@Base+0x139d>
    1335:	33 00                	xor    eax,DWORD PTR [rax]
    1337:	67 5f                	addr32 pop rdi
    1339:	69 6e 63 00 67 5f 73 	imul   ebp,DWORD PTR [rsi+0x63],0x735f6700
    1340:	31 00                	xor    DWORD PTR [rax],eax
    1342:	67 5f                	addr32 pop rdi
    1344:	73 33                	jae    1379 <__safestack_unsafe_stack_ptr@@Base+0x1379>
    1346:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    1349:	61                   	(bad)
    134a:	72 67                	jb     13b3 <__safestack_unsafe_stack_ptr@@Base+0x13b3>
    134c:	32 73 65             	xor    dh,BYTE PTR [rbx+0x65]
    134f:	74 79                	je     13ca <__safestack_unsafe_stack_ptr@@Base+0x13ca>
    1351:	79 00                	jns    1353 <__safestack_unsafe_stack_ptr@@Base+0x1353>
    1353:	67 61                	addr32 (bad)
    1355:	64 64 79 79          	fs fs jns 13d2 <__safestack_unsafe_stack_ptr@@Base+0x13d2>
    1359:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    135c:	4f 5f                	rex.WRXB pop r15
    135e:	73 74                	jae    13d4 <__safestack_unsafe_stack_ptr@@Base+0x13d4>
    1360:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[rsi+0x5f],0x64657375
    1367:	64 
    1368:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    136b:	69 6e 63 35 38 00 67 	imul   ebp,DWORD PTR [rsi+0x63],0x67003835
    1372:	34 00                	xor    al,0x0
    1374:	5f                   	pop    rdi
    1375:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1377:	64 00 67 61          	add    BYTE PTR fs:[rdi+0x61],ah
    137b:	64 64 78 79          	fs fs js 13f8 <__safestack_unsafe_stack_ptr@@Base+0x13f8>
    137f:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    1382:	61                   	(bad)
    1383:	72 67                	jb     13ec <__safestack_unsafe_stack_ptr@@Base+0x13ec>
    1385:	32 73 65             	xor    dh,BYTE PTR [rbx+0x65]
    1388:	74 78                	je     1402 <__safestack_unsafe_stack_ptr@@Base+0x1402>
    138a:	78 00                	js     138c <__safestack_unsafe_stack_ptr@@Base+0x138c>
    138c:	67 5f                	addr32 pop rdi
    138e:	70 72                	jo     1402 <__safestack_unsafe_stack_ptr@@Base+0x1402>
    1390:	69 6e 74 66 00 67 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f670066
    1397:	72 61                	jb     13fa <__safestack_unsafe_stack_ptr@@Base+0x13fa>
    1399:	78 32                	js     13cd <__safestack_unsafe_stack_ptr@@Base+0x13cd>
    139b:	72 64                	jb     1401 <__safestack_unsafe_stack_ptr@@Base+0x1401>
    139d:	69 00 5f 5f 62 73    	imul   eax,DWORD PTR [rax],0x73625f5f
    13a3:	73 5f                	jae    1404 <__safestack_unsafe_stack_ptr@@Base+0x1404>
    13a5:	73 74                	jae    141b <__safestack_unsafe_stack_ptr@@Base+0x141b>
    13a7:	61                   	(bad)
    13a8:	72 74                	jb     141e <__safestack_unsafe_stack_ptr@@Base+0x141e>
    13aa:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    13ad:	7a 32                	jp     13e1 <__safestack_unsafe_stack_ptr@@Base+0x13e1>
    13af:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    13b2:	69 63 61 6c 6c 32 00 	imul   esp,DWORD PTR [rbx+0x61],0x326c6c
    13b9:	67 5f                	addr32 pop rdi
    13bb:	72 61                	jb     141e <__safestack_unsafe_stack_ptr@@Base+0x141e>
    13bd:	78 32                	js     13f1 <__safestack_unsafe_stack_ptr@@Base+0x13f1>
    13bf:	72 73                	jb     1434 <__safestack_unsafe_stack_ptr@@Base+0x1434>
    13c1:	69 00 5f 5f 69 6e    	imul   eax,DWORD PTR [rax],0x6e695f5f
    13c7:	74 65                	je     142e <__safestack_unsafe_stack_ptr@@Base+0x142e>
    13c9:	72 63                	jb     142e <__safestack_unsafe_stack_ptr@@Base+0x142e>
    13cb:	65 70 74             	gs jo  1442 <__safestack_unsafe_stack_ptr@@Base+0x1442>
    13ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13cf:	72 5f                	jb     1430 <__safestack_unsafe_stack_ptr@@Base+0x1430>
    13d1:	74 72                	je     1445 <__safestack_unsafe_stack_ptr@@Base+0x1445>
    13d3:	61                   	(bad)
    13d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    13d5:	70 6f                	jo     1446 <__safestack_unsafe_stack_ptr@@Base+0x1446>
    13d7:	6c                   	ins    BYTE PTR es:[rdi],dx
    13d8:	69 6e 65 5f 70 74 68 	imul   ebp,DWORD PTR [rsi+0x65],0x6874705f
    13df:	72 65                	jb     1446 <__safestack_unsafe_stack_ptr@@Base+0x1446>
    13e1:	61                   	(bad)
    13e2:	64 5f                	fs pop rdi
    13e4:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    13e7:	61                   	(bad)
    13e8:	74 65                	je     144f <__safestack_unsafe_stack_ptr@@Base+0x144f>
    13ea:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    13ed:	6c                   	ins    BYTE PTR es:[rdi],dx
    13ee:	64 00 67 5f          	add    BYTE PTR fs:[rdi+0x5f],ah
    13f2:	78 78                	js     146c <__safestack_unsafe_stack_ptr@@Base+0x146c>
    13f4:	72 65                	jb     145b <__safestack_unsafe_stack_ptr@@Base+0x145b>
    13f6:	74 00                	je     13f8 <__safestack_unsafe_stack_ptr@@Base+0x13f8>
    13f8:	5f                   	pop    rdi
    13f9:	5f                   	pop    rdi
    13fa:	67 65 74 5f          	addr32 gs je 145d <__safestack_unsafe_stack_ptr@@Base+0x145d>
    13fe:	75 6e                	jne    146e <__safestack_unsafe_stack_ptr@@Base+0x146e>
    1400:	73 61                	jae    1463 <__safestack_unsafe_stack_ptr@@Base+0x1463>
    1402:	66 65 5f             	gs pop di
    1405:	73 74                	jae    147b <__safestack_unsafe_stack_ptr@@Base+0x147b>
    1407:	61                   	(bad)
    1408:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    140b:	73 74                	jae    1481 <__safestack_unsafe_stack_ptr@@Base+0x1481>
    140d:	61                   	(bad)
    140e:	72 74                	jb     1484 <__safestack_unsafe_stack_ptr@@Base+0x1484>
    1410:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    1413:	73 74                	jae    1489 <__safestack_unsafe_stack_ptr@@Base+0x1489>
    1415:	33 00                	xor    eax,DWORD PTR [rax]
    1417:	5f                   	pop    rdi
    1418:	5f                   	pop    rdi
    1419:	67 65 74 5f          	addr32 gs je 147c <__safestack_unsafe_stack_ptr@@Base+0x147c>
    141d:	75 6e                	jne    148d <__safestack_unsafe_stack_ptr@@Base+0x148d>
    141f:	73 61                	jae    1482 <__safestack_unsafe_stack_ptr@@Base+0x1482>
    1421:	66 65 5f             	gs pop di
    1424:	73 74                	jae    149a <__safestack_unsafe_stack_ptr@@Base+0x149a>
    1426:	61                   	(bad)
    1427:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    142a:	62 6f 74 74 6f       	(bad)
    142f:	6d                   	ins    DWORD PTR es:[rdi],dx
    1430:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    1433:	73 74                	jae    14a9 <__safestack_unsafe_stack_ptr@@Base+0x14a9>
    1435:	35 00 67 5f 72       	xor    eax,0x725f6700
    143a:	73 69                	jae    14a5 <__safestack_unsafe_stack_ptr@@Base+0x14a5>
    143c:	32 72 61             	xor    dh,BYTE PTR [rdx+0x61]
    143f:	78 00                	js     1441 <__safestack_unsafe_stack_ptr@@Base+0x1441>
    1441:	76 75                	jbe    14b8 <__safestack_unsafe_stack_ptr@@Base+0x14b8>
    1443:	6c                   	ins    BYTE PTR es:[rdi],dx
    1444:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1445:	5f                   	pop    rdi
    1446:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1447:	76 65                	jbe    14ae <__safestack_unsafe_stack_ptr@@Base+0x14ae>
    1449:	72 66                	jb     14b1 <__safestack_unsafe_stack_ptr@@Base+0x14b1>
    144b:	6c                   	ins    BYTE PTR es:[rdi],dx
    144c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    144d:	77 00                	ja     144f <__safestack_unsafe_stack_ptr@@Base+0x144f>
    144f:	67 5f                	addr32 pop rdi
    1451:	69 6e 63 33 32 00 67 	imul   ebp,DWORD PTR [rsi+0x63],0x67003233
    1458:	5f                   	pop    rdi
    1459:	73 68                	jae    14c3 <__safestack_unsafe_stack_ptr@@Base+0x14c3>
    145b:	32 00                	xor    al,BYTE PTR [rax]
    145d:	5f                   	pop    rdi
    145e:	5f                   	pop    rdi
    145f:	5f                   	pop    rdi
    1460:	69 6e 74 65 72 63 65 	imul   ebp,DWORD PTR [rsi+0x74],0x65637265
    1467:	70 74                	jo     14dd <__safestack_unsafe_stack_ptr@@Base+0x14dd>
    1469:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    146a:	72 5f                	jb     14cb <__safestack_unsafe_stack_ptr@@Base+0x14cb>
    146c:	70 74                	jo     14e2 <__safestack_unsafe_stack_ptr@@Base+0x14e2>
    146e:	68 72 65 61 64       	push   0x64616572
    1473:	5f                   	pop    rdi
    1474:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    1477:	61                   	(bad)
    1478:	74 65                	je     14df <__safestack_unsafe_stack_ptr@@Base+0x14df>
    147a:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    147d:	73 34                	jae    14b3 <__safestack_unsafe_stack_ptr@@Base+0x14b3>
    147f:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    1482:	73 32                	jae    14b6 <__safestack_unsafe_stack_ptr@@Base+0x14b6>
    1484:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
    1487:	73 79                	jae    1502 <__safestack_unsafe_stack_ptr@@Base+0x1502>
    1489:	73 63                	jae    14ee <__safestack_unsafe_stack_ptr@@Base+0x14ee>
    148b:	61                   	(bad)
    148c:	6c                   	ins    BYTE PTR es:[rdi],dx
    148d:	6c                   	ins    BYTE PTR es:[rdi],dx
    148e:	32 00                	xor    al,BYTE PTR [rax]
    1490:	47                   	rex.RXB
    1491:	4c                   	rex.WR
    1492:	49                   	rex.WB
    1493:	42                   	rex.X
    1494:	43 5f                	rex.XB pop r15
    1496:	32 2e                	xor    ch,BYTE PTR [rsi]
    1498:	33 00                	xor    eax,DWORD PTR [rax]
    149a:	47                   	rex.RXB
    149b:	4c                   	rex.WR
    149c:	49                   	rex.WB
    149d:	42                   	rex.X
    149e:	43 5f                	rex.XB pop r15
    14a0:	32 2e                	xor    ch,BYTE PTR [rsi]
    14a2:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
    14a5:	47                   	rex.RXB
    14a6:	4c                   	rex.WR
    14a7:	49                   	rex.WB
    14a8:	42                   	rex.X
    14a9:	43 5f                	rex.XB pop r15
    14ab:	32 2e                	xor    ch,BYTE PTR [rsi]
    14ad:	32 2e                	xor    ch,BYTE PTR [rsi]
    14af:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000000014b2 <.gnu.version>:
    14b2:	00 00                	add    BYTE PTR [rax],al
    14b4:	02 00                	add    al,BYTE PTR [rax]
    14b6:	03 00                	add    eax,DWORD PTR [rax]
    14b8:	02 00                	add    al,BYTE PTR [rax]
    14ba:	02 00                	add    al,BYTE PTR [rax]
    14bc:	01 00                	add    DWORD PTR [rax],eax
    14be:	02 00                	add    al,BYTE PTR [rax]
    14c0:	01 00                	add    DWORD PTR [rax],eax
    14c2:	01 00                	add    DWORD PTR [rax],eax
    14c4:	02 00                	add    al,BYTE PTR [rax]
    14c6:	01 00                	add    DWORD PTR [rax],eax
    14c8:	02 00                	add    al,BYTE PTR [rax]
    14ca:	03 00                	add    eax,DWORD PTR [rax]
    14cc:	02 00                	add    al,BYTE PTR [rax]
    14ce:	02 00                	add    al,BYTE PTR [rax]
    14d0:	04 00                	add    al,0x0
    14d2:	02 00                	add    al,BYTE PTR [rax]
    14d4:	02 00                	add    al,BYTE PTR [rax]
    14d6:	01 00                	add    DWORD PTR [rax],eax
    14d8:	02 00                	add    al,BYTE PTR [rax]
    14da:	02 00                	add    al,BYTE PTR [rax]
    14dc:	03 00                	add    eax,DWORD PTR [rax]
    14de:	02 00                	add    al,BYTE PTR [rax]
    14e0:	02 00                	add    al,BYTE PTR [rax]
    14e2:	03 00                	add    eax,DWORD PTR [rax]
    14e4:	02 00                	add    al,BYTE PTR [rax]
    14e6:	02 00                	add    al,BYTE PTR [rax]
    14e8:	01 00                	add    DWORD PTR [rax],eax
    14ea:	03 00                	add    eax,DWORD PTR [rax]
    14ec:	02 00                	add    al,BYTE PTR [rax]
    14ee:	03 00                	add    eax,DWORD PTR [rax]
    14f0:	03 00                	add    eax,DWORD PTR [rax]
    14f2:	02 00                	add    al,BYTE PTR [rax]
    14f4:	01 00                	add    DWORD PTR [rax],eax
    14f6:	01 00                	add    DWORD PTR [rax],eax
    14f8:	01 00                	add    DWORD PTR [rax],eax
    14fa:	01 00                	add    DWORD PTR [rax],eax
    14fc:	01 00                	add    DWORD PTR [rax],eax
    14fe:	01 00                	add    DWORD PTR [rax],eax
    1500:	01 00                	add    DWORD PTR [rax],eax
    1502:	01 00                	add    DWORD PTR [rax],eax
    1504:	01 00                	add    DWORD PTR [rax],eax
    1506:	01 00                	add    DWORD PTR [rax],eax
    1508:	01 00                	add    DWORD PTR [rax],eax
    150a:	01 00                	add    DWORD PTR [rax],eax
    150c:	01 00                	add    DWORD PTR [rax],eax
    150e:	01 00                	add    DWORD PTR [rax],eax
    1510:	01 00                	add    DWORD PTR [rax],eax
    1512:	01 00                	add    DWORD PTR [rax],eax
    1514:	01 00                	add    DWORD PTR [rax],eax
    1516:	01 00                	add    DWORD PTR [rax],eax
    1518:	01 00                	add    DWORD PTR [rax],eax
    151a:	01 00                	add    DWORD PTR [rax],eax
    151c:	01 00                	add    DWORD PTR [rax],eax
    151e:	01 00                	add    DWORD PTR [rax],eax
    1520:	01 00                	add    DWORD PTR [rax],eax
    1522:	01 00                	add    DWORD PTR [rax],eax
    1524:	01 00                	add    DWORD PTR [rax],eax
    1526:	01 00                	add    DWORD PTR [rax],eax
    1528:	01 00                	add    DWORD PTR [rax],eax
    152a:	01 00                	add    DWORD PTR [rax],eax
    152c:	01 00                	add    DWORD PTR [rax],eax
    152e:	01 00                	add    DWORD PTR [rax],eax
    1530:	01 00                	add    DWORD PTR [rax],eax
    1532:	01 00                	add    DWORD PTR [rax],eax
    1534:	01 00                	add    DWORD PTR [rax],eax
    1536:	02 00                	add    al,BYTE PTR [rax]
    1538:	01 00                	add    DWORD PTR [rax],eax
    153a:	01 00                	add    DWORD PTR [rax],eax
    153c:	01 00                	add    DWORD PTR [rax],eax
    153e:	01 00                	add    DWORD PTR [rax],eax
    1540:	01 00                	add    DWORD PTR [rax],eax
    1542:	01 00                	add    DWORD PTR [rax],eax
    1544:	01 00                	add    DWORD PTR [rax],eax
    1546:	01 00                	add    DWORD PTR [rax],eax
    1548:	01 00                	add    DWORD PTR [rax],eax
    154a:	01 00                	add    DWORD PTR [rax],eax
    154c:	01 00                	add    DWORD PTR [rax],eax
    154e:	01 00                	add    DWORD PTR [rax],eax
    1550:	01 00                	add    DWORD PTR [rax],eax
    1552:	01 00                	add    DWORD PTR [rax],eax
    1554:	01 00                	add    DWORD PTR [rax],eax
    1556:	01 00                	add    DWORD PTR [rax],eax
    1558:	01 00                	add    DWORD PTR [rax],eax
    155a:	01 00                	add    DWORD PTR [rax],eax
    155c:	01 00                	add    DWORD PTR [rax],eax
    155e:	01 00                	add    DWORD PTR [rax],eax
    1560:	01 00                	add    DWORD PTR [rax],eax
    1562:	01 00                	add    DWORD PTR [rax],eax
    1564:	01 00                	add    DWORD PTR [rax],eax
    1566:	01 00                	add    DWORD PTR [rax],eax
    1568:	01 00                	add    DWORD PTR [rax],eax
    156a:	01 00                	add    DWORD PTR [rax],eax
    156c:	01 00                	add    DWORD PTR [rax],eax
    156e:	01 00                	add    DWORD PTR [rax],eax
    1570:	01 00                	add    DWORD PTR [rax],eax
    1572:	01 00                	add    DWORD PTR [rax],eax
    1574:	01 00                	add    DWORD PTR [rax],eax
    1576:	01 00                	add    DWORD PTR [rax],eax
    1578:	01 00                	add    DWORD PTR [rax],eax
    157a:	01 00                	add    DWORD PTR [rax],eax
    157c:	01 00                	add    DWORD PTR [rax],eax
    157e:	01 00                	add    DWORD PTR [rax],eax

Disassembly of section .gnu.version_r:

0000000000001580 <.gnu.version_r>:
    1580:	01 00                	add    DWORD PTR [rax],eax
    1582:	01 00                	add    DWORD PTR [rax],eax
    1584:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    1585:	01 00                	add    DWORD PTR [rax],eax
    1587:	00 10                	add    BYTE PTR [rax],dl
    1589:	00 00                	add    BYTE PTR [rax],al
    158b:	00 20                	add    BYTE PTR [rax],ah
    158d:	00 00                	add    BYTE PTR [rax],al
    158f:	00 13                	add    BYTE PTR [rbx],dl
    1591:	69 69 0d 00 00 04 00 	imul   ebp,DWORD PTR [rcx+0xd],0x40000
    1598:	98                   	cwde
    1599:	04 00                	add    al,0x0
    159b:	00 00                	add    BYTE PTR [rax],al
    159d:	00 00                	add    BYTE PTR [rax],al
    159f:	00 01                	add    BYTE PTR [rcx],al
    15a1:	00 02                	add    BYTE PTR [rdx],al
    15a3:	00 9a 01 00 00 10    	add    BYTE PTR [rdx+0x10000001],bl
    15a9:	00 00                	add    BYTE PTR [rax],al
    15ab:	00 00                	add    BYTE PTR [rax],al
    15ad:	00 00                	add    BYTE PTR [rax],al
    15af:	00 b4 91 96 06 00 00 	add    BYTE PTR [rcx+rdx*4+0x696],dh
    15b6:	03 00                	add    eax,DWORD PTR [rax]
    15b8:	a2 04 00 00 10 00 00 	movabs ds:0x7500000010000004,al
    15bf:	00 75 
    15c1:	1a 69 09             	sbb    ch,BYTE PTR [rcx+0x9]
    15c4:	00 00                	add    BYTE PTR [rax],al
    15c6:	02 00                	add    al,BYTE PTR [rax]
    15c8:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    15c9:	04 00                	add    al,0x0
    15cb:	00 00                	add    BYTE PTR [rax],al
    15cd:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000000015d0 <.rela.dyn>:
    15d0:	60                   	(bad)
    15d1:	5d                   	pop    rbp
    15d2:	00 00                	add    BYTE PTR [rax],al
    15d4:	00 00                	add    BYTE PTR [rax],al
    15d6:	00 00                	add    BYTE PTR [rax],al
    15d8:	08 00                	or     BYTE PTR [rax],al
    15da:	00 00                	add    BYTE PTR [rax],al
    15dc:	00 00                	add    BYTE PTR [rax],al
    15de:	00 00                	add    BYTE PTR [rax],al
    15e0:	20 26                	and    BYTE PTR [rsi],ah
    15e2:	00 00                	add    BYTE PTR [rax],al
    15e4:	00 00                	add    BYTE PTR [rax],al
    15e6:	00 00                	add    BYTE PTR [rax],al
    15e8:	68 5d 00 00 00       	push   0x5d
    15ed:	00 00                	add    BYTE PTR [rax],al
    15ef:	00 08                	add    BYTE PTR [rax],cl
    15f1:	00 00                	add    BYTE PTR [rax],al
    15f3:	00 00                	add    BYTE PTR [rax],al
    15f5:	00 00                	add    BYTE PTR [rax],al
    15f7:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
    15fd:	00 00                	add    BYTE PTR [rax],al
    15ff:	00 70 5d             	add    BYTE PTR [rax+0x5d],dh
    1602:	00 00                	add    BYTE PTR [rax],al
    1604:	00 00                	add    BYTE PTR [rax],al
    1606:	00 00                	add    BYTE PTR [rax],al
    1608:	08 00                	or     BYTE PTR [rax],al
    160a:	00 00                	add    BYTE PTR [rax],al
    160c:	00 00                	add    BYTE PTR [rax],al
    160e:	00 00                	add    BYTE PTR [rax],al
    1610:	60                   	(bad)
    1611:	22 00                	and    al,BYTE PTR [rax]
    1613:	00 00                	add    BYTE PTR [rax],al
    1615:	00 00                	add    BYTE PTR [rax],al
    1617:	00 c8                	add    al,cl
    1619:	5f                   	pop    rdi
    161a:	00 00                	add    BYTE PTR [rax],al
    161c:	00 00                	add    BYTE PTR [rax],al
    161e:	00 00                	add    BYTE PTR [rax],al
    1620:	08 00                	or     BYTE PTR [rax],al
    1622:	00 00                	add    BYTE PTR [rax],al
    1624:	00 00                	add    BYTE PTR [rax],al
    1626:	00 00                	add    BYTE PTR [rax],al
    1628:	e0 2f                	loopne 1659 <__safestack_unsafe_stack_ptr@@Base+0x1659>
    162a:	00 00                	add    BYTE PTR [rax],al
    162c:	00 00                	add    BYTE PTR [rax],al
    162e:	00 00                	add    BYTE PTR [rax],al
    1630:	c8 60 00 00          	enter  0x60,0x0
    1634:	00 00                	add    BYTE PTR [rax],al
    1636:	00 00                	add    BYTE PTR [rax],al
    1638:	08 00                	or     BYTE PTR [rax],al
    163a:	00 00                	add    BYTE PTR [rax],al
    163c:	00 00                	add    BYTE PTR [rax],al
    163e:	00 00                	add    BYTE PTR [rax],al
    1640:	c8 60 00 00          	enter  0x60,0x0
    1644:	00 00                	add    BYTE PTR [rax],al
    1646:	00 00                	add    BYTE PTR [rax],al
    1648:	d0 60 00             	shl    BYTE PTR [rax+0x0],1
    164b:	00 00                	add    BYTE PTR [rax],al
    164d:	00 00                	add    BYTE PTR [rax],al
    164f:	00 08                	add    BYTE PTR [rax],cl
    1651:	00 00                	add    BYTE PTR [rax],al
    1653:	00 00                	add    BYTE PTR [rax],al
    1655:	00 00                	add    BYTE PTR [rax],al
    1657:	00 1f                	add    BYTE PTR [rdi],bl
    1659:	41 00 00             	add    BYTE PTR [r8],al
    165c:	00 00                	add    BYTE PTR [rax],al
    165e:	00 00                	add    BYTE PTR [rax],al
    1660:	e0 60                	loopne 16c2 <__safestack_unsafe_stack_ptr@@Base+0x16c2>
    1662:	00 00                	add    BYTE PTR [rax],al
    1664:	00 00                	add    BYTE PTR [rax],al
    1666:	00 00                	add    BYTE PTR [rax],al
    1668:	08 00                	or     BYTE PTR [rax],al
    166a:	00 00                	add    BYTE PTR [rax],al
    166c:	00 00                	add    BYTE PTR [rax],al
    166e:	00 00                	add    BYTE PTR [rax],al
    1670:	d0 2f                	shr    BYTE PTR [rdi],1
    1672:	00 00                	add    BYTE PTR [rax],al
    1674:	00 00                	add    BYTE PTR [rax],al
    1676:	00 00                	add    BYTE PTR [rax],al
    1678:	e8 60 00 00 00       	call   16dd <__safestack_unsafe_stack_ptr@@Base+0x16dd>
    167d:	00 00                	add    BYTE PTR [rax],al
    167f:	00 08                	add    BYTE PTR [rax],cl
    1681:	00 00                	add    BYTE PTR [rax],al
    1683:	00 00                	add    BYTE PTR [rax],al
    1685:	00 00                	add    BYTE PTR [rax],al
    1687:	00 e8                	add    al,ch
    1689:	2f                   	(bad)
    168a:	00 00                	add    BYTE PTR [rax],al
    168c:	00 00                	add    BYTE PTR [rax],al
    168e:	00 00                	add    BYTE PTR [rax],al
    1690:	f0 60                	lock (bad)
    1692:	00 00                	add    BYTE PTR [rax],al
    1694:	00 00                	add    BYTE PTR [rax],al
    1696:	00 00                	add    BYTE PTR [rax],al
    1698:	08 00                	or     BYTE PTR [rax],al
    169a:	00 00                	add    BYTE PTR [rax],al
    169c:	00 00                	add    BYTE PTR [rax],al
    169e:	00 00                	add    BYTE PTR [rax],al
    16a0:	f0 2f                	lock (bad)
    16a2:	00 00                	add    BYTE PTR [rax],al
    16a4:	00 00                	add    BYTE PTR [rax],al
    16a6:	00 00                	add    BYTE PTR [rax],al
    16a8:	f8                   	clc
    16a9:	60                   	(bad)
    16aa:	00 00                	add    BYTE PTR [rax],al
    16ac:	00 00                	add    BYTE PTR [rax],al
    16ae:	00 00                	add    BYTE PTR [rax],al
    16b0:	08 00                	or     BYTE PTR [rax],al
    16b2:	00 00                	add    BYTE PTR [rax],al
    16b4:	00 00                	add    BYTE PTR [rax],al
    16b6:	00 00                	add    BYTE PTR [rax],al
    16b8:	d8 2f                	fsubr  DWORD PTR [rdi]
    16ba:	00 00                	add    BYTE PTR [rax],al
    16bc:	00 00                	add    BYTE PTR [rax],al
    16be:	00 00                	add    BYTE PTR [rax],al
    16c0:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    16c3:	00 00                	add    BYTE PTR [rax],al
    16c5:	00 00                	add    BYTE PTR [rax],al
    16c7:	00 08                	add    BYTE PTR [rax],cl
    16c9:	00 00                	add    BYTE PTR [rax],al
    16cb:	00 00                	add    BYTE PTR [rax],al
    16cd:	00 00                	add    BYTE PTR [rax],al
    16cf:	00 b0 2f 00 00 00    	add    BYTE PTR [rax+0x2f],dh
    16d5:	00 00                	add    BYTE PTR [rax],al
    16d7:	00 08                	add    BYTE PTR [rax],cl
    16d9:	61                   	(bad)
    16da:	00 00                	add    BYTE PTR [rax],al
    16dc:	00 00                	add    BYTE PTR [rax],al
    16de:	00 00                	add    BYTE PTR [rax],al
    16e0:	08 00                	or     BYTE PTR [rax],al
    16e2:	00 00                	add    BYTE PTR [rax],al
    16e4:	00 00                	add    BYTE PTR [rax],al
    16e6:	00 00                	add    BYTE PTR [rax],al
    16e8:	c0 2f 00             	shr    BYTE PTR [rdi],0x0
    16eb:	00 00                	add    BYTE PTR [rax],al
    16ed:	00 00                	add    BYTE PTR [rax],al
    16ef:	00 a8 5f 00 00 00    	add    BYTE PTR [rax+0x5f],ch
    16f5:	00 00                	add    BYTE PTR [rax],al
    16f7:	00 12                	add    BYTE PTR [rdx],dl
    16f9:	00 00                	add    BYTE PTR [rax],al
    16fb:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    1706:	00 00                	add    BYTE PTR [rax],al
    1708:	b0 5f                	mov    al,0x5f
    170a:	00 00                	add    BYTE PTR [rax],al
    170c:	00 00                	add    BYTE PTR [rax],al
    170e:	00 00                	add    BYTE PTR [rax],al
    1710:	06                   	(bad)
    1711:	00 00                	add    BYTE PTR [rax],al
    1713:	00 02                	add    BYTE PTR [rdx],al
	...
    171d:	00 00                	add    BYTE PTR [rax],al
    171f:	00 b8 5f 00 00 00    	add    BYTE PTR [rax+0x5f],bh
    1725:	00 00                	add    BYTE PTR [rax],al
    1727:	00 06                	add    BYTE PTR [rsi],al
    1729:	00 00                	add    BYTE PTR [rax],al
    172b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1731 <__safestack_unsafe_stack_ptr@@Base+0x1731>
    1731:	00 00                	add    BYTE PTR [rax],al
    1733:	00 00                	add    BYTE PTR [rax],al
    1735:	00 00                	add    BYTE PTR [rax],al
    1737:	00 c0                	add    al,al
    1739:	5f                   	pop    rdi
    173a:	00 00                	add    BYTE PTR [rax],al
    173c:	00 00                	add    BYTE PTR [rax],al
    173e:	00 00                	add    BYTE PTR [rax],al
    1740:	06                   	(bad)
    1741:	00 00                	add    BYTE PTR [rax],al
    1743:	00 12                	add    BYTE PTR [rdx],dl
	...
    174d:	00 00                	add    BYTE PTR [rax],al
    174f:	00 d0                	add    al,dl
    1751:	5f                   	pop    rdi
    1752:	00 00                	add    BYTE PTR [rax],al
    1754:	00 00                	add    BYTE PTR [rax],al
    1756:	00 00                	add    BYTE PTR [rax],al
    1758:	06                   	(bad)
    1759:	00 00                	add    BYTE PTR [rax],al
    175b:	00 1b                	add    BYTE PTR [rbx],bl
	...
    1765:	00 00                	add    BYTE PTR [rax],al
    1767:	00 d8                	add    al,bl
    1769:	5f                   	pop    rdi
    176a:	00 00                	add    BYTE PTR [rax],al
    176c:	00 00                	add    BYTE PTR [rax],al
    176e:	00 00                	add    BYTE PTR [rax],al
    1770:	06                   	(bad)
    1771:	00 00                	add    BYTE PTR [rax],al
    1773:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    177e:	00 00                	add    BYTE PTR [rax],al
    1780:	e0 5f                	loopne 17e1 <__safestack_unsafe_stack_ptr@@Base+0x17e1>
    1782:	00 00                	add    BYTE PTR [rax],al
    1784:	00 00                	add    BYTE PTR [rax],al
    1786:	00 00                	add    BYTE PTR [rax],al
    1788:	06                   	(bad)
    1789:	00 00                	add    BYTE PTR [rax],al
    178b:	00 20                	add    BYTE PTR [rax],ah
	...

Disassembly of section .rela.plt:

0000000000001798 <.rela.plt>:
    1798:	00 60 00             	add    BYTE PTR [rax+0x0],ah
    179b:	00 00                	add    BYTE PTR [rax],al
    179d:	00 00                	add    BYTE PTR [rax],al
    179f:	00 07                	add    BYTE PTR [rdi],al
    17a1:	00 00                	add    BYTE PTR [rax],al
    17a3:	00 01                	add    BYTE PTR [rcx],al
	...
    17ad:	00 00                	add    BYTE PTR [rax],al
    17af:	00 08                	add    BYTE PTR [rax],cl
    17b1:	60                   	(bad)
    17b2:	00 00                	add    BYTE PTR [rax],al
    17b4:	00 00                	add    BYTE PTR [rax],al
    17b6:	00 00                	add    BYTE PTR [rax],al
    17b8:	07                   	(bad)
    17b9:	00 00                	add    BYTE PTR [rax],al
    17bb:	00 03                	add    BYTE PTR [rbx],al
	...
    17c5:	00 00                	add    BYTE PTR [rax],al
    17c7:	00 10                	add    BYTE PTR [rax],dl
    17c9:	60                   	(bad)
    17ca:	00 00                	add    BYTE PTR [rax],al
    17cc:	00 00                	add    BYTE PTR [rax],al
    17ce:	00 00                	add    BYTE PTR [rax],al
    17d0:	07                   	(bad)
    17d1:	00 00                	add    BYTE PTR [rax],al
    17d3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    17de:	00 00                	add    BYTE PTR [rax],al
    17e0:	18 60 00             	sbb    BYTE PTR [rax+0x0],ah
    17e3:	00 00                	add    BYTE PTR [rax],al
    17e5:	00 00                	add    BYTE PTR [rax],al
    17e7:	00 07                	add    BYTE PTR [rdi],al
    17e9:	00 00                	add    BYTE PTR [rax],al
    17eb:	00 06                	add    BYTE PTR [rsi],al
	...
    17f5:	00 00                	add    BYTE PTR [rax],al
    17f7:	00 20                	add    BYTE PTR [rax],ah
    17f9:	60                   	(bad)
    17fa:	00 00                	add    BYTE PTR [rax],al
    17fc:	00 00                	add    BYTE PTR [rax],al
    17fe:	00 00                	add    BYTE PTR [rax],al
    1800:	07                   	(bad)
    1801:	00 00                	add    BYTE PTR [rax],al
    1803:	00 09                	add    BYTE PTR [rcx],cl
	...
    180d:	00 00                	add    BYTE PTR [rax],al
    180f:	00 28                	add    BYTE PTR [rax],ch
    1811:	60                   	(bad)
    1812:	00 00                	add    BYTE PTR [rax],al
    1814:	00 00                	add    BYTE PTR [rax],al
    1816:	00 00                	add    BYTE PTR [rax],al
    1818:	07                   	(bad)
    1819:	00 00                	add    BYTE PTR [rax],al
    181b:	00 0b                	add    BYTE PTR [rbx],cl
	...
    1825:	00 00                	add    BYTE PTR [rax],al
    1827:	00 30                	add    BYTE PTR [rax],dh
    1829:	60                   	(bad)
    182a:	00 00                	add    BYTE PTR [rax],al
    182c:	00 00                	add    BYTE PTR [rax],al
    182e:	00 00                	add    BYTE PTR [rax],al
    1830:	07                   	(bad)
    1831:	00 00                	add    BYTE PTR [rax],al
    1833:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    183e:	00 00                	add    BYTE PTR [rax],al
    1840:	38 60 00             	cmp    BYTE PTR [rax+0x0],ah
    1843:	00 00                	add    BYTE PTR [rax],al
    1845:	00 00                	add    BYTE PTR [rax],al
    1847:	00 07                	add    BYTE PTR [rdi],al
    1849:	00 00                	add    BYTE PTR [rax],al
    184b:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1851 <__safestack_unsafe_stack_ptr@@Base+0x1851>
    1851:	00 00                	add    BYTE PTR [rax],al
    1853:	00 00                	add    BYTE PTR [rax],al
    1855:	00 00                	add    BYTE PTR [rax],al
    1857:	00 40 60             	add    BYTE PTR [rax+0x60],al
    185a:	00 00                	add    BYTE PTR [rax],al
    185c:	00 00                	add    BYTE PTR [rax],al
    185e:	00 00                	add    BYTE PTR [rax],al
    1860:	07                   	(bad)
    1861:	00 00                	add    BYTE PTR [rax],al
    1863:	00 0e                	add    BYTE PTR [rsi],cl
	...
    186d:	00 00                	add    BYTE PTR [rax],al
    186f:	00 48 60             	add    BYTE PTR [rax+0x60],cl
    1872:	00 00                	add    BYTE PTR [rax],al
    1874:	00 00                	add    BYTE PTR [rax],al
    1876:	00 00                	add    BYTE PTR [rax],al
    1878:	07                   	(bad)
    1879:	00 00                	add    BYTE PTR [rax],al
    187b:	00 0f                	add    BYTE PTR [rdi],cl
	...
    1885:	00 00                	add    BYTE PTR [rax],al
    1887:	00 50 60             	add    BYTE PTR [rax+0x60],dl
    188a:	00 00                	add    BYTE PTR [rax],al
    188c:	00 00                	add    BYTE PTR [rax],al
    188e:	00 00                	add    BYTE PTR [rax],al
    1890:	07                   	(bad)
    1891:	00 00                	add    BYTE PTR [rax],al
    1893:	00 10                	add    BYTE PTR [rax],dl
	...
    189d:	00 00                	add    BYTE PTR [rax],al
    189f:	00 58 60             	add    BYTE PTR [rax+0x60],bl
    18a2:	00 00                	add    BYTE PTR [rax],al
    18a4:	00 00                	add    BYTE PTR [rax],al
    18a6:	00 00                	add    BYTE PTR [rax],al
    18a8:	07                   	(bad)
    18a9:	00 00                	add    BYTE PTR [rax],al
    18ab:	00 11                	add    BYTE PTR [rcx],dl
	...
    18b5:	00 00                	add    BYTE PTR [rax],al
    18b7:	00 60 60             	add    BYTE PTR [rax+0x60],ah
    18ba:	00 00                	add    BYTE PTR [rax],al
    18bc:	00 00                	add    BYTE PTR [rax],al
    18be:	00 00                	add    BYTE PTR [rax],al
    18c0:	07                   	(bad)
    18c1:	00 00                	add    BYTE PTR [rax],al
    18c3:	00 13                	add    BYTE PTR [rbx],dl
	...
    18cd:	00 00                	add    BYTE PTR [rax],al
    18cf:	00 68 60             	add    BYTE PTR [rax+0x60],ch
    18d2:	00 00                	add    BYTE PTR [rax],al
    18d4:	00 00                	add    BYTE PTR [rax],al
    18d6:	00 00                	add    BYTE PTR [rax],al
    18d8:	07                   	(bad)
    18d9:	00 00                	add    BYTE PTR [rax],al
    18db:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    18e6:	00 00                	add    BYTE PTR [rax],al
    18e8:	70 60                	jo     194a <__safestack_unsafe_stack_ptr@@Base+0x194a>
    18ea:	00 00                	add    BYTE PTR [rax],al
    18ec:	00 00                	add    BYTE PTR [rax],al
    18ee:	00 00                	add    BYTE PTR [rax],al
    18f0:	07                   	(bad)
    18f1:	00 00                	add    BYTE PTR [rax],al
    18f3:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 18f9 <__safestack_unsafe_stack_ptr@@Base+0x18f9>
    18f9:	00 00                	add    BYTE PTR [rax],al
    18fb:	00 00                	add    BYTE PTR [rax],al
    18fd:	00 00                	add    BYTE PTR [rax],al
    18ff:	00 78 60             	add    BYTE PTR [rax+0x60],bh
    1902:	00 00                	add    BYTE PTR [rax],al
    1904:	00 00                	add    BYTE PTR [rax],al
    1906:	00 00                	add    BYTE PTR [rax],al
    1908:	07                   	(bad)
    1909:	00 00                	add    BYTE PTR [rax],al
    190b:	00 16                	add    BYTE PTR [rsi],dl
	...
    1915:	00 00                	add    BYTE PTR [rax],al
    1917:	00 80 60 00 00 00    	add    BYTE PTR [rax+0x60],al
    191d:	00 00                	add    BYTE PTR [rax],al
    191f:	00 07                	add    BYTE PTR [rdi],al
    1921:	00 00                	add    BYTE PTR [rax],al
    1923:	00 17                	add    BYTE PTR [rdi],dl
	...
    192d:	00 00                	add    BYTE PTR [rax],al
    192f:	00 88 60 00 00 00    	add    BYTE PTR [rax+0x60],cl
    1935:	00 00                	add    BYTE PTR [rax],al
    1937:	00 07                	add    BYTE PTR [rdi],al
    1939:	00 00                	add    BYTE PTR [rax],al
    193b:	00 18                	add    BYTE PTR [rax],bl
	...
    1945:	00 00                	add    BYTE PTR [rax],al
    1947:	00 90 60 00 00 00    	add    BYTE PTR [rax+0x60],dl
    194d:	00 00                	add    BYTE PTR [rax],al
    194f:	00 07                	add    BYTE PTR [rdi],al
    1951:	00 00                	add    BYTE PTR [rax],al
    1953:	00 19                	add    BYTE PTR [rcx],bl
	...
    195d:	00 00                	add    BYTE PTR [rax],al
    195f:	00 98 60 00 00 00    	add    BYTE PTR [rax+0x60],bl
    1965:	00 00                	add    BYTE PTR [rax],al
    1967:	00 07                	add    BYTE PTR [rdi],al
    1969:	00 00                	add    BYTE PTR [rax],al
    196b:	00 1a                	add    BYTE PTR [rdx],bl
	...
    1975:	00 00                	add    BYTE PTR [rax],al
    1977:	00 a0 60 00 00 00    	add    BYTE PTR [rax+0x60],ah
    197d:	00 00                	add    BYTE PTR [rax],al
    197f:	00 07                	add    BYTE PTR [rdi],al
    1981:	00 00                	add    BYTE PTR [rax],al
    1983:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
    198e:	00 00                	add    BYTE PTR [rax],al
    1990:	a8 60                	test   al,0x60
    1992:	00 00                	add    BYTE PTR [rax],al
    1994:	00 00                	add    BYTE PTR [rax],al
    1996:	00 00                	add    BYTE PTR [rax],al
    1998:	07                   	(bad)
    1999:	00 00                	add    BYTE PTR [rax],al
    199b:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 19a1 <__safestack_unsafe_stack_ptr@@Base+0x19a1>
    19a1:	00 00                	add    BYTE PTR [rax],al
    19a3:	00 00                	add    BYTE PTR [rax],al
    19a5:	00 00                	add    BYTE PTR [rax],al
    19a7:	00 b0 60 00 00 00    	add    BYTE PTR [rax+0x60],dh
    19ad:	00 00                	add    BYTE PTR [rax],al
    19af:	00 07                	add    BYTE PTR [rdi],al
    19b1:	00 00                	add    BYTE PTR [rax],al
    19b3:	00 1e                	add    BYTE PTR [rsi],bl
	...
    19bd:	00 00                	add    BYTE PTR [rax],al
    19bf:	00 b8 60 00 00 00    	add    BYTE PTR [rax+0x60],bh
    19c5:	00 00                	add    BYTE PTR [rax],al
    19c7:	00 07                	add    BYTE PTR [rdi],al
    19c9:	00 00                	add    BYTE PTR [rax],al
    19cb:	00 1f                	add    BYTE PTR [rdi],bl
	...

Disassembly of section .init:

0000000000002000 <.init>:
    2000:	f3 0f 1e fa          	endbr64
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 b1 3f 00 00 	mov    rax,QWORD PTR [rip+0x3fb1]        # 5fc0 <__gmon_start__@Base>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <__safestack_unsafe_stack_ptr@@Base+0x2016>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret

Disassembly of section .plt:

0000000000002020 <free@plt-0x10>:
    2020:	ff 35 ca 3f 00 00    	push   QWORD PTR [rip+0x3fca]        # 5ff0 <_IO_stdin_used@@Base+0x1ff0>
    2026:	ff 25 cc 3f 00 00    	jmp    QWORD PTR [rip+0x3fcc]        # 5ff8 <_IO_stdin_used@@Base+0x1ff8>
    202c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000002030 <free@plt>:
    2030:	ff 25 ca 3f 00 00    	jmp    QWORD PTR [rip+0x3fca]        # 6000 <free@GLIBC_2.2.5>
    2036:	68 00 00 00 00       	push   0x0
    203b:	e9 e0 ff ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

0000000000002040 <abort@plt>:
    2040:	ff 25 c2 3f 00 00    	jmp    QWORD PTR [rip+0x3fc2]        # 6008 <abort@GLIBC_2.2.5>
    2046:	68 01 00 00 00       	push   0x1
    204b:	e9 d0 ff ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

0000000000002050 <__errno_location@plt>:
    2050:	ff 25 ba 3f 00 00    	jmp    QWORD PTR [rip+0x3fba]        # 6010 <__errno_location@GLIBC_2.2.5>
    2056:	68 02 00 00 00       	push   0x2
    205b:	e9 c0 ff ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

0000000000002060 <puts@plt>:
    2060:	ff 25 b2 3f 00 00    	jmp    QWORD PTR [rip+0x3fb2]        # 6018 <puts@GLIBC_2.2.5>
    2066:	68 03 00 00 00       	push   0x3
    206b:	e9 b0 ff ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

0000000000002070 <getpid@plt>:
    2070:	ff 25 aa 3f 00 00    	jmp    QWORD PTR [rip+0x3faa]        # 6020 <getpid@GLIBC_2.2.5>
    2076:	68 04 00 00 00       	push   0x4
    207b:	e9 a0 ff ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

0000000000002080 <printf@plt>:
    2080:	ff 25 a2 3f 00 00    	jmp    QWORD PTR [rip+0x3fa2]        # 6028 <printf@GLIBC_2.2.5>
    2086:	68 05 00 00 00       	push   0x5
    208b:	e9 90 ff ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

0000000000002090 <pthread_key_create@plt>:
    2090:	ff 25 9a 3f 00 00    	jmp    QWORD PTR [rip+0x3f9a]        # 6030 <pthread_key_create@GLIBC_2.34>
    2096:	68 06 00 00 00       	push   0x6
    209b:	e9 80 ff ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

00000000000020a0 <memset@plt>:
    20a0:	ff 25 92 3f 00 00    	jmp    QWORD PTR [rip+0x3f92]        # 6038 <memset@GLIBC_2.2.5>
    20a6:	68 07 00 00 00       	push   0x7
    20ab:	e9 70 ff ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

00000000000020b0 <pthread_attr_init@plt>:
    20b0:	ff 25 8a 3f 00 00    	jmp    QWORD PTR [rip+0x3f8a]        # 6040 <pthread_attr_init@GLIBC_2.2.5>
    20b6:	68 08 00 00 00       	push   0x8
    20bb:	e9 60 ff ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

00000000000020c0 <__tls_get_addr@plt>:
    20c0:	ff 25 82 3f 00 00    	jmp    QWORD PTR [rip+0x3f82]        # 6048 <__tls_get_addr@GLIBC_2.3>
    20c6:	68 09 00 00 00       	push   0x9
    20cb:	e9 50 ff ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

00000000000020d0 <fprintf@plt>:
    20d0:	ff 25 7a 3f 00 00    	jmp    QWORD PTR [rip+0x3f7a]        # 6050 <fprintf@GLIBC_2.2.5>
    20d6:	68 0a 00 00 00       	push   0xa
    20db:	e9 40 ff ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

00000000000020e0 <syscall@plt>:
    20e0:	ff 25 72 3f 00 00    	jmp    QWORD PTR [rip+0x3f72]        # 6058 <syscall@GLIBC_2.2.5>
    20e6:	68 0b 00 00 00       	push   0xb
    20eb:	e9 30 ff ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

00000000000020f0 <strtol@plt>:
    20f0:	ff 25 6a 3f 00 00    	jmp    QWORD PTR [rip+0x3f6a]        # 6060 <strtol@GLIBC_2.2.5>
    20f6:	68 0c 00 00 00       	push   0xc
    20fb:	e9 20 ff ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

0000000000002100 <gets@plt>:
    2100:	ff 25 62 3f 00 00    	jmp    QWORD PTR [rip+0x3f62]        # 6068 <gets@GLIBC_2.2.5>
    2106:	68 0d 00 00 00       	push   0xd
    210b:	e9 10 ff ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

0000000000002110 <pthread_attr_getguardsize@plt>:
    2110:	ff 25 5a 3f 00 00    	jmp    QWORD PTR [rip+0x3f5a]        # 6070 <pthread_attr_getguardsize@GLIBC_2.34>
    2116:	68 0e 00 00 00       	push   0xe
    211b:	e9 00 ff ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

0000000000002120 <pthread_mutex_unlock@plt>:
    2120:	ff 25 52 3f 00 00    	jmp    QWORD PTR [rip+0x3f52]        # 6078 <pthread_mutex_unlock@GLIBC_2.2.5>
    2126:	68 0f 00 00 00       	push   0xf
    212b:	e9 f0 fe ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

0000000000002130 <malloc@plt>:
    2130:	ff 25 4a 3f 00 00    	jmp    QWORD PTR [rip+0x3f4a]        # 6080 <malloc@GLIBC_2.2.5>
    2136:	68 10 00 00 00       	push   0x10
    213b:	e9 e0 fe ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

0000000000002140 <dlsym@plt>:
    2140:	ff 25 42 3f 00 00    	jmp    QWORD PTR [rip+0x3f42]        # 6088 <dlsym@GLIBC_2.34>
    2146:	68 11 00 00 00       	push   0x11
    214b:	e9 d0 fe ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

0000000000002150 <pthread_attr_destroy@plt>:
    2150:	ff 25 3a 3f 00 00    	jmp    QWORD PTR [rip+0x3f3a]        # 6090 <pthread_attr_destroy@GLIBC_2.2.5>
    2156:	68 12 00 00 00       	push   0x12
    215b:	e9 c0 fe ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

0000000000002160 <getrlimit@plt>:
    2160:	ff 25 32 3f 00 00    	jmp    QWORD PTR [rip+0x3f32]        # 6098 <getrlimit@GLIBC_2.2.5>
    2166:	68 13 00 00 00       	push   0x13
    216b:	e9 b0 fe ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

0000000000002170 <dlvsym@plt>:
    2170:	ff 25 2a 3f 00 00    	jmp    QWORD PTR [rip+0x3f2a]        # 60a0 <dlvsym@GLIBC_2.34>
    2176:	68 14 00 00 00       	push   0x14
    217b:	e9 a0 fe ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

0000000000002180 <pthread_mutex_lock@plt>:
    2180:	ff 25 22 3f 00 00    	jmp    QWORD PTR [rip+0x3f22]        # 60a8 <pthread_mutex_lock@GLIBC_2.2.5>
    2186:	68 15 00 00 00       	push   0x15
    218b:	e9 90 fe ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

0000000000002190 <pthread_attr_getstacksize@plt>:
    2190:	ff 25 1a 3f 00 00    	jmp    QWORD PTR [rip+0x3f1a]        # 60b0 <pthread_attr_getstacksize@GLIBC_2.34>
    2196:	68 16 00 00 00       	push   0x16
    219b:	e9 80 fe ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

00000000000021a0 <pthread_setspecific@plt>:
    21a0:	ff 25 12 3f 00 00    	jmp    QWORD PTR [rip+0x3f12]        # 60b8 <pthread_setspecific@GLIBC_2.34>
    21a6:	68 17 00 00 00       	push   0x17
    21ab:	e9 70 fe ff ff       	jmp    2020 <__safestack_unsafe_stack_ptr@@Base+0x2020>

Disassembly of section .plt.got:

00000000000021b0 <__cxa_finalize@plt>:
    21b0:	ff 25 22 3e 00 00    	jmp    QWORD PTR [rip+0x3e22]        # 5fd8 <__cxa_finalize@GLIBC_2.2.5>
    21b6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000021c0 <_start@@Base>:
    21c0:	             f3 0f 1e fa          	endbr64
    21c4:	             31 ed                	xor    ebp,ebp
    21c6:	             49 89 d1             	mov    r9,rdx
    21c9:	             5e                   	pop    rsi
    21ca:	             48 89 e2             	mov    rdx,rsp
    21cd:	             48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    21d1:	             50                   	push   rax
    21d2:	             54                   	push   rsp
    21d3:	             45 31 c0             	xor    r8d,r8d
    21d6:	             31 c9                	xor    ecx,ecx
    21d8:	             48 8d 3d 21 0d 00 00 	lea    rdi,[rip+0xd21]        # 2f00 <main@@Base>
    21df:	             ff 15 cb 3d 00 00    	call   QWORD PTR [rip+0x3dcb]        # 5fb0 <__libc_start_main@GLIBC_2.34>
    21e5:	             f4                   	hlt
    21e6:	             66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    21ed:	             00 00 00 
    21f0:	/----------> 48 8d 3d 19 3f 00 00 	lea    rdi,[rip+0x3f19]        # 6110 <__bss_start@@Base>
    21f7:	|            48 8d 05 12 3f 00 00 	lea    rax,[rip+0x3f12]        # 6110 <__bss_start@@Base>
    21fe:	|            48 39 f8             	cmp    rax,rdi
    2201:	|        /-- 74 15                	je     2218 <_start@@Base+0x58>
    2203:	|        |   48 8b 05 ae 3d 00 00 	mov    rax,QWORD PTR [rip+0x3dae]        # 5fb8 <_ITM_deregisterTMCloneTable@Base>
    220a:	|        |   48 85 c0             	test   rax,rax
    220d:	|        +-- 74 09                	je     2218 <_start@@Base+0x58>
    220f:	|        |   ff e0                	jmp    rax
    2211:	|        |   0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2218:	|        \-> c3                   	ret
    2219:	|            0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2220:	|  /-------> 48 8d 3d e9 3e 00 00 	lea    rdi,[rip+0x3ee9]        # 6110 <__bss_start@@Base>
    2227:	|  |         48 8d 35 e2 3e 00 00 	lea    rsi,[rip+0x3ee2]        # 6110 <__bss_start@@Base>
    222e:	|  |         48 29 fe             	sub    rsi,rdi
    2231:	|  |         48 89 f0             	mov    rax,rsi
    2234:	|  |         48 c1 ee 3f          	shr    rsi,0x3f
    2238:	|  |         48 c1 f8 03          	sar    rax,0x3
    223c:	|  |         48 01 c6             	add    rsi,rax
    223f:	|  |         48 d1 fe             	sar    rsi,1
    2242:	|  |     /-- 74 14                	je     2258 <_start@@Base+0x98>
    2244:	|  |     |   48 8b 05 85 3d 00 00 	mov    rax,QWORD PTR [rip+0x3d85]        # 5fd0 <_ITM_registerTMCloneTable@Base>
    224b:	|  |     |   48 85 c0             	test   rax,rax
    224e:	|  |     +-- 74 08                	je     2258 <_start@@Base+0x98>
    2250:	|  |     |   ff e0                	jmp    rax
    2252:	|  |     |   66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2258:	|  |     \-> c3                   	ret
    2259:	|  |         0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2260:	|  |         f3 0f 1e fa          	endbr64
    2264:	|  |         80 3d a5 3e 00 00 00 	cmp    BYTE PTR [rip+0x3ea5],0x0        # 6110 <__bss_start@@Base>
    226b:	|  |  /----- 75 2b                	jne    2298 <_start@@Base+0xd8>
    226d:	|  |  |      55                   	push   rbp
    226e:	|  |  |      48 83 3d 62 3d 00 00 	cmp    QWORD PTR [rip+0x3d62],0x0        # 5fd8 <__cxa_finalize@GLIBC_2.2.5>
    2275:	|  |  |      00 
    2276:	|  |  |      48 89 e5             	mov    rbp,rsp
    2279:	|  |  |  /-- 74 0c                	je     2287 <_start@@Base+0xc7>
    227b:	|  |  |  |   48 8b 3d 46 3e 00 00 	mov    rdi,QWORD PTR [rip+0x3e46]        # 60c8 <__data_start@@Base+0x8>
    2282:	|  |  |  |   e8 29 ff ff ff       	call   21b0 <__cxa_finalize@plt>
    2287:	\--|--|--\-X e8 64 ff ff ff       	call   21f0 <_start@@Base+0x30>
    228c:	   |  |      c6 05 7d 3e 00 00 01 	mov    BYTE PTR [rip+0x3e7d],0x1        # 6110 <__bss_start@@Base>
    2293:	   |  |      5d                   	pop    rbp
    2294:	   |  |      c3                   	ret
    2295:	   |  |      0f 1f 00             	nop    DWORD PTR [rax]
    2298:	   |  \----> c3                   	ret
    2299:	   |         0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    22a0:	   |         f3 0f 1e fa          	endbr64
    22a4:	   \-------- e9 77 ff ff ff       	jmp    2220 <_start@@Base+0x60>
    22a9:	             0f 1f 00             	nop    DWORD PTR [rax]

00000000000022ac <__interceptor_trampoline_pthread_create@@Base>:
    22ac:	e9 0f 00 00 00       	jmp    22c0 <___interceptor_pthread_create@@Base>
    22b1:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    22b8:	00 00 00 
    22bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000022c0 <___interceptor_pthread_create@@Base>:
    22c0:	                f3 0f 1e fa          	endbr64
    22c4:	                55                   	push   rbp
    22c5:	                41 57                	push   r15
    22c7:	                41 56                	push   r14
    22c9:	                41 55                	push   r13
    22cb:	                41 54                	push   r12
    22cd:	                53                   	push   rbx
    22ce:	                48 83 ec 58          	sub    rsp,0x58
    22d2:	                49 89 cf             	mov    r15,rcx
    22d5:	                49 89 d4             	mov    r12,rdx
    22d8:	                48 89 f3             	mov    rbx,rsi
    22db:	                49 89 fe             	mov    r14,rdi
    22de:	                48 8d 3d 43 3e 00 00 	lea    rdi,[rip+0x3e43]        # 6128 <__bss_start@@Base+0x18>
    22e5:	                e8 96 fe ff ff       	call   2180 <pthread_mutex_lock@plt>
    22ea:	                80 3d 5f 3e 00 00 00 	cmp    BYTE PTR [rip+0x3e5f],0x0        # 6150 <__bss_start@@Base+0x40>
    22f1:	            /-- 75 28                	jne    231b <___interceptor_pthread_create@@Base+0x5b>
    22f3:	            |   48 8d 3d 7c 1d 00 00 	lea    rdi,[rip+0x1d7c]        # 4076 <_IO_stdin_used@@Base+0x76>
    22fa:	            |   48 8d 35 17 3e 00 00 	lea    rsi,[rip+0x3e17]        # 6118 <__bss_start@@Base+0x8>
    2301:	            |   48 8d 15 a4 ff ff ff 	lea    rdx,[rip+0xffffffffffffffa4]        # 22ac <__interceptor_trampoline_pthread_create@@Base>
    2308:	            |   48 8d 0d 9d ff ff ff 	lea    rcx,[rip+0xffffffffffffff9d]        # 22ac <__interceptor_trampoline_pthread_create@@Base>
    230f:	            |   e8 0c 07 00 00       	call   2a20 <__get_unsafe_stack_ptr@@Base+0x20>
    2314:	            |   c6 05 35 3e 00 00 01 	mov    BYTE PTR [rip+0x3e35],0x1        # 6150 <__bss_start@@Base+0x40>
    231b:	            \-> 48 8d 3d 06 3e 00 00 	lea    rdi,[rip+0x3e06]        # 6128 <__bss_start@@Base+0x18>
    2322:	                e8 f9 fd ff ff       	call   2120 <pthread_mutex_unlock@plt>
    2327:	                48 c7 44 24 10 00 00 	mov    QWORD PTR [rsp+0x10],0x0
    232e:	                00 00 
    2330:	                48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
    2337:	                00 00 
    2339:	                48 85 db             	test   rbx,rbx
    233c:	            /-- 0f 84 db 00 00 00    	je     241d <___interceptor_pthread_create@@Base+0x15d>
    2342:	            |   48 8d 74 24 10       	lea    rsi,[rsp+0x10]
    2347:	            |   48 89 df             	mov    rdi,rbx
    234a:	            |   e8 41 fe ff ff       	call   2190 <pthread_attr_getstacksize@plt>
    234f:	            |   48 8d 74 24 18       	lea    rsi,[rsp+0x18]
    2354:	            |   48 89 df             	mov    rdi,rbx
    2357:	            |   e8 b4 fd ff ff       	call   2110 <pthread_attr_getguardsize@plt>
    235c:	            |   48 8b 54 24 10       	mov    rdx,QWORD PTR [rsp+0x10]
    2361:	            |   48 85 d2             	test   rdx,rdx
    2364:	      /-----|-- 0f 84 f0 00 00 00    	je     245a <___interceptor_pthread_create@@Base+0x19a>
    236a:	      |  /--|-> 48 83 c2 0f          	add    rdx,0xf
    236e:	      |  |  |   48 83 e2 f0          	and    rdx,0xfffffffffffffff0
    2372:	      |  |  |   48 89 54 24 10       	mov    QWORD PTR [rsp+0x10],rdx
    2377:	      |  |  |   4c 8b 6c 24 18       	mov    r13,QWORD PTR [rsp+0x18]
    237c:	      |  |  |   4c 01 ea             	add    rdx,r13
    237f:	/-----|--|--|-- 0f 82 05 01 00 00    	jb     248a <___interceptor_pthread_create@@Base+0x1ca>
    2385:	|     |  |  |   48 c7 04 24 00 00 00 	mov    QWORD PTR [rsp],0x0
    238c:	|     |  |  |   00 
    238d:	|     |  |  |   bf 09 00 00 00       	mov    edi,0x9
    2392:	|     |  |  |   31 f6                	xor    esi,esi
    2394:	|     |  |  |   b9 03 00 00 00       	mov    ecx,0x3
    2399:	|     |  |  |   41 b8 22 00 00 00    	mov    r8d,0x22
    239f:	|     |  |  |   41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    23a5:	|     |  |  |   31 c0                	xor    eax,eax
    23a7:	|     |  |  |   e8 34 fd ff ff       	call   20e0 <syscall@plt>
    23ac:	|     |  |  |   48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    23b0:	|  /--|--|--|-- 0f 84 04 01 00 00    	je     24ba <___interceptor_pthread_create@@Base+0x1fa>
    23b6:	|  |  |  |  |   48 89 c5             	mov    rbp,rax
    23b9:	|  |  |  |  |   bf 0a 00 00 00       	mov    edi,0xa
    23be:	|  |  |  |  |   48 89 c6             	mov    rsi,rax
    23c1:	|  |  |  |  |   4c 89 ea             	mov    rdx,r13
    23c4:	|  |  |  |  |   31 c9                	xor    ecx,ecx
    23c6:	|  |  |  |  |   31 c0                	xor    eax,eax
    23c8:	|  |  |  |  |   e8 13 fd ff ff       	call   20e0 <syscall@plt>
    23cd:	|  |  |  |  |   4c 01 ed             	add    rbp,r13
    23d0:	|  |  |  |  |   48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    23d5:	|  |  |  |  |   48 8d 0c 28          	lea    rcx,[rax+rbp*1]
    23d9:	|  |  |  |  |   48 83 c1 d8          	add    rcx,0xffffffffffffffd8
    23dd:	|  |  |  |  |   4c 89 64 28 d8       	mov    QWORD PTR [rax+rbp*1-0x28],r12
    23e2:	|  |  |  |  |   4c 89 7c 28 e0       	mov    QWORD PTR [rax+rbp*1-0x20],r15
    23e7:	|  |  |  |  |   48 89 6c 28 e8       	mov    QWORD PTR [rax+rbp*1-0x18],rbp
    23ec:	|  |  |  |  |   48 89 44 28 f0       	mov    QWORD PTR [rax+rbp*1-0x10],rax
    23f1:	|  |  |  |  |   48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
    23f6:	|  |  |  |  |   48 89 54 28 f8       	mov    QWORD PTR [rax+rbp*1-0x8],rdx
    23fb:	|  |  |  |  |   48 8d 15 ee 00 00 00 	lea    rdx,[rip+0xee]        # 24f0 <___interceptor_pthread_create@@Base+0x230>
    2402:	|  |  |  |  |   4c 89 f7             	mov    rdi,r14
    2405:	|  |  |  |  |   48 89 de             	mov    rsi,rbx
    2408:	|  |  |  |  |   ff 15 0a 3d 00 00    	call   QWORD PTR [rip+0x3d0a]        # 6118 <__bss_start@@Base+0x8>
    240e:	|  |  |  |  |   48 83 c4 58          	add    rsp,0x58
    2412:	|  |  |  |  |   5b                   	pop    rbx
    2413:	|  |  |  |  |   41 5c                	pop    r12
    2415:	|  |  |  |  |   41 5d                	pop    r13
    2417:	|  |  |  |  |   41 5e                	pop    r14
    2419:	|  |  |  |  |   41 5f                	pop    r15
    241b:	|  |  |  |  |   5d                   	pop    rbp
    241c:	|  |  |  |  |   c3                   	ret
    241d:	|  |  |  |  \-> 4c 8d 6c 24 20       	lea    r13,[rsp+0x20]
    2422:	|  |  |  |      4c 89 ef             	mov    rdi,r13
    2425:	|  |  |  |      e8 86 fc ff ff       	call   20b0 <pthread_attr_init@plt>
    242a:	|  |  |  |      48 8d 74 24 10       	lea    rsi,[rsp+0x10]
    242f:	|  |  |  |      4c 89 ef             	mov    rdi,r13
    2432:	|  |  |  |      e8 59 fd ff ff       	call   2190 <pthread_attr_getstacksize@plt>
    2437:	|  |  |  |      48 8d 74 24 18       	lea    rsi,[rsp+0x18]
    243c:	|  |  |  |      4c 89 ef             	mov    rdi,r13
    243f:	|  |  |  |      e8 cc fc ff ff       	call   2110 <pthread_attr_getguardsize@plt>
    2444:	|  |  |  |      4c 89 ef             	mov    rdi,r13
    2447:	|  |  |  |      e8 04 fd ff ff       	call   2150 <pthread_attr_destroy@plt>
    244c:	|  |  |  |      48 8b 54 24 10       	mov    rdx,QWORD PTR [rsp+0x10]
    2451:	|  |  |  |      48 85 d2             	test   rdx,rdx
    2454:	|  |  |  \----- 0f 85 10 ff ff ff    	jne    236a <___interceptor_pthread_create@@Base+0xaa>
    245a:	|  |  \-------> 48 8b 05 7f 3b 00 00 	mov    rax,QWORD PTR [rip+0x3b7f]        # 5fe0 <stderr@GLIBC_2.2.5>
    2461:	|  |            48 8b 38             	mov    rdi,QWORD PTR [rax]
    2464:	|  |            48 8d 35 99 1b 00 00 	lea    rsi,[rip+0x1b99]        # 4004 <_IO_stdin_used@@Base+0x4>
    246b:	|  |            48 8d 15 b4 1b 00 00 	lea    rdx,[rip+0x1bb4]        # 4026 <_IO_stdin_used@@Base+0x26>
    2472:	|  |            4c 8d 05 e5 1b 00 00 	lea    r8,[rip+0x1be5]        # 405e <_IO_stdin_used@@Base+0x5e>
    2479:	|  |            b9 e3 00 00 00       	mov    ecx,0xe3
    247e:	|  |            31 c0                	xor    eax,eax
    2480:	|  |            e8 4b fc ff ff       	call   20d0 <fprintf@plt>
    2485:	|  |            e8 b6 fb ff ff       	call   2040 <abort@plt>
    248a:	\--|----------> 48 8b 05 4f 3b 00 00 	mov    rax,QWORD PTR [rip+0x3b4f]        # 5fe0 <stderr@GLIBC_2.2.5>
    2491:	   |            48 8b 38             	mov    rdi,QWORD PTR [rax]
    2494:	   |            48 8d 35 69 1b 00 00 	lea    rsi,[rip+0x1b69]        # 4004 <_IO_stdin_used@@Base+0x4>
    249b:	   |            48 8d 15 84 1b 00 00 	lea    rdx,[rip+0x1b84]        # 4026 <_IO_stdin_used@@Base+0x26>
    24a2:	   |            4c 8d 05 a5 1b 00 00 	lea    r8,[rip+0x1ba5]        # 404e <_IO_stdin_used@@Base+0x4e>
    24a9:	   |            b9 5c 00 00 00       	mov    ecx,0x5c
    24ae:	   |            31 c0                	xor    eax,eax
    24b0:	   |            e8 1b fc ff ff       	call   20d0 <fprintf@plt>
    24b5:	   |            e8 86 fb ff ff       	call   2040 <abort@plt>
    24ba:	   \----------> 48 8b 05 1f 3b 00 00 	mov    rax,QWORD PTR [rip+0x3b1f]        # 5fe0 <stderr@GLIBC_2.2.5>
    24c1:	                48 8b 38             	mov    rdi,QWORD PTR [rax]
    24c4:	                48 8d 35 39 1b 00 00 	lea    rsi,[rip+0x1b39]        # 4004 <_IO_stdin_used@@Base+0x4>
    24cb:	                48 8d 15 54 1b 00 00 	lea    rdx,[rip+0x1b54]        # 4026 <_IO_stdin_used@@Base+0x26>
    24d2:	                4c 8d 05 8a 1b 00 00 	lea    r8,[rip+0x1b8a]        # 4063 <_IO_stdin_used@@Base+0x63>
    24d9:	                b9 5f 00 00 00       	mov    ecx,0x5f
    24de:	                31 c0                	xor    eax,eax
    24e0:	                e8 eb fb ff ff       	call   20d0 <fprintf@plt>
    24e5:	                e8 56 fb ff ff       	call   2040 <abort@plt>
    24ea:	                66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    24f0:	                f3 0f 1e fa          	endbr64
    24f4:	                55                   	push   rbp
    24f5:	                41 57                	push   r15
    24f7:	                41 56                	push   r14
    24f9:	                41 55                	push   r13
    24fb:	                41 54                	push   r12
    24fd:	                53                   	push   rbx
    24fe:	                50                   	push   rax
    24ff:	                4c 8b 77 18          	mov    r14,QWORD PTR [rdi+0x18]
    2503:	                4d 85 f6             	test   r14,r14
    2506:	            /-- 0f 88 80 00 00 00    	js     258c <___interceptor_pthread_create@@Base+0x2cc>
    250c:	            |   4c 8b 7f 20          	mov    r15,QWORD PTR [rdi+0x20]
    2510:	            |   4d 85 ff             	test   r15,r15
    2513:	         /--|-- 0f 88 a3 00 00 00    	js     25bc <___interceptor_pthread_create@@Base+0x2fc>
    2519:	         |  |   4c 8b 67 10          	mov    r12,QWORD PTR [rdi+0x10]
    251d:	         |  |   4f 8d 2c 34          	lea    r13,[r12+r14*1]
    2521:	         |  |   41 f6 c5 0f          	test   r13b,0xf
    2525:	      /--|--|-- 0f 85 c1 00 00 00    	jne    25ec <___interceptor_pthread_create@@Base+0x32c>
    252b:	      |  |  |   48 8b 2f             	mov    rbp,QWORD PTR [rdi]
    252e:	      |  |  |   48 8b 5f 08          	mov    rbx,QWORD PTR [rdi+0x8]
    2532:	      |  |  |   64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    2539:	      |  |  |   00 00 
    253b:	      |  |  |   48 03 05 66 3a 00 00 	add    rax,QWORD PTR [rip+0x3a66]        # 5fa8 <__safestack_unsafe_stack_ptr@@Base+0x5fa8>
    2542:	      |  |  |   4c 89 28             	mov    QWORD PTR [rax],r13
    2545:	      |  |  |   66 66 66 64 48 8b 04 	data16 data16 data16 mov rax,QWORD PTR fs:0x0
    254c:	      |  |  |   25 00 00 00 00 
    2551:	      |  |  |   4c 89 a0 e8 ff ff ff 	mov    QWORD PTR [rax-0x18],r12
    2558:	      |  |  |   4c 89 b0 f0 ff ff ff 	mov    QWORD PTR [rax-0x10],r14
    255f:	      |  |  |   4c 89 b8 f8 ff ff ff 	mov    QWORD PTR [rax-0x8],r15
    2566:	      |  |  |   8b 3d b4 3b 00 00    	mov    edi,DWORD PTR [rip+0x3bb4]        # 6120 <__bss_start@@Base+0x10>
    256c:	      |  |  |   be 01 00 00 00       	mov    esi,0x1
    2571:	      |  |  |   e8 2a fc ff ff       	call   21a0 <pthread_setspecific@plt>
    2576:	      |  |  |   48 89 df             	mov    rdi,rbx
    2579:	      |  |  |   48 89 e8             	mov    rax,rbp
    257c:	      |  |  |   48 83 c4 08          	add    rsp,0x8
    2580:	      |  |  |   5b                   	pop    rbx
    2581:	      |  |  |   41 5c                	pop    r12
    2583:	      |  |  |   41 5d                	pop    r13
    2585:	      |  |  |   41 5e                	pop    r14
    2587:	      |  |  |   41 5f                	pop    r15
    2589:	      |  |  |   5d                   	pop    rbp
    258a:	      |  |  |   ff e0                	jmp    rax
    258c:	      |  |  \-> 48 8b 05 4d 3a 00 00 	mov    rax,QWORD PTR [rip+0x3a4d]        # 5fe0 <stderr@GLIBC_2.2.5>
    2593:	      |  |      48 8b 38             	mov    rdi,QWORD PTR [rax]
    2596:	      |  |      48 8d 35 67 1a 00 00 	lea    rsi,[rip+0x1a67]        # 4004 <_IO_stdin_used@@Base+0x4>
    259d:	      |  |      48 8d 15 82 1a 00 00 	lea    rdx,[rip+0x1a82]        # 4026 <_IO_stdin_used@@Base+0x26>
    25a4:	      |  |      4c 8d 05 da 1a 00 00 	lea    r8,[rip+0x1ada]        # 4085 <_IO_stdin_used@@Base+0x85>
    25ab:	      |  |      b9 65 00 00 00       	mov    ecx,0x65
    25b0:	      |  |      31 c0                	xor    eax,eax
    25b2:	      |  |      e8 19 fb ff ff       	call   20d0 <fprintf@plt>
    25b7:	      |  |      e8 84 fa ff ff       	call   2040 <abort@plt>
    25bc:	      |  \----> 48 8b 05 1d 3a 00 00 	mov    rax,QWORD PTR [rip+0x3a1d]        # 5fe0 <stderr@GLIBC_2.2.5>
    25c3:	      |         48 8b 38             	mov    rdi,QWORD PTR [rax]
    25c6:	      |         48 8d 35 37 1a 00 00 	lea    rsi,[rip+0x1a37]        # 4004 <_IO_stdin_used@@Base+0x4>
    25cd:	      |         48 8d 15 52 1a 00 00 	lea    rdx,[rip+0x1a52]        # 4026 <_IO_stdin_used@@Base+0x26>
    25d4:	      |         4c 8d 05 d0 1a 00 00 	lea    r8,[rip+0x1ad0]        # 40ab <_IO_stdin_used@@Base+0xab>
    25db:	      |         b9 66 00 00 00       	mov    ecx,0x66
    25e0:	      |         31 c0                	xor    eax,eax
    25e2:	      |         e8 e9 fa ff ff       	call   20d0 <fprintf@plt>
    25e7:	      |         e8 54 fa ff ff       	call   2040 <abort@plt>
    25ec:	      \-------> 48 8b 05 ed 39 00 00 	mov    rax,QWORD PTR [rip+0x39ed]        # 5fe0 <stderr@GLIBC_2.2.5>
    25f3:	                48 8b 38             	mov    rdi,QWORD PTR [rax]
    25f6:	                48 8d 35 07 1a 00 00 	lea    rsi,[rip+0x1a07]        # 4004 <_IO_stdin_used@@Base+0x4>
    25fd:	                48 8d 15 22 1a 00 00 	lea    rdx,[rip+0x1a22]        # 4026 <_IO_stdin_used@@Base+0x26>
    2604:	                4c 8d 05 c7 1a 00 00 	lea    r8,[rip+0x1ac7]        # 40d2 <_IO_stdin_used@@Base+0xd2>
    260b:	                b9 68 00 00 00       	mov    ecx,0x68
    2610:	                31 c0                	xor    eax,eax
    2612:	                e8 b9 fa ff ff       	call   20d0 <fprintf@plt>
    2617:	                e8 24 fa ff ff       	call   2040 <abort@plt>
    261c:	                0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000002620 <__safestack_init@@Base>:
    2620:	                f3 0f 1e fa          	endbr64
    2624:	                41 57                	push   r15
    2626:	                41 56                	push   r14
    2628:	                53                   	push   rbx
    2629:	                48 83 ec 20          	sub    rsp,0x20
    262d:	                48 8d 74 24 10       	lea    rsi,[rsp+0x10]
    2632:	                bf 03 00 00 00       	mov    edi,0x3
    2637:	                e8 24 fb ff ff       	call   2160 <getrlimit@plt>
    263c:	                4c 8b 74 24 10       	mov    r14,QWORD PTR [rsp+0x10]
    2641:	                49 83 fe ff          	cmp    r14,0xffffffffffffffff
    2645:	                b9 00 00 80 02       	mov    ecx,0x2800000
    264a:	                4c 0f 44 f1          	cmove  r14,rcx
    264e:	                85 c0                	test   eax,eax
    2650:	                4c 0f 45 f1          	cmovne r14,rcx
    2654:	                49 81 fe 00 f0 ff ff 	cmp    r14,0xfffffffffffff000
    265b:	         /----- 0f 83 cb 00 00 00    	jae    272c <__safestack_init@@Base+0x10c>
    2661:	         |      49 8d 96 00 10 00 00 	lea    rdx,[r14+0x1000]
    2668:	         |      48 c7 04 24 00 00 00 	mov    QWORD PTR [rsp],0x0
    266f:	         |      00 
    2670:	         |      bf 09 00 00 00       	mov    edi,0x9
    2675:	         |      31 f6                	xor    esi,esi
    2677:	         |      b9 03 00 00 00       	mov    ecx,0x3
    267c:	         |      41 b8 22 00 00 00    	mov    r8d,0x22
    2682:	         |      41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2688:	         |      31 c0                	xor    eax,eax
    268a:	         |      e8 51 fa ff ff       	call   20e0 <syscall@plt>
    268f:	         |      48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    2693:	         |  /-- 0f 84 c3 00 00 00    	je     275c <__safestack_init@@Base+0x13c>
    2699:	         |  |   48 89 c3             	mov    rbx,rax
    269c:	         |  |   bf 0a 00 00 00       	mov    edi,0xa
    26a1:	         |  |   ba 00 10 00 00       	mov    edx,0x1000
    26a6:	         |  |   48 89 c6             	mov    rsi,rax
    26a9:	         |  |   31 c9                	xor    ecx,ecx
    26ab:	         |  |   31 c0                	xor    eax,eax
    26ad:	         |  |   e8 2e fa ff ff       	call   20e0 <syscall@plt>
    26b2:	         |  |   4d 85 f6             	test   r14,r14
    26b5:	      /--|--|-- 0f 88 d1 00 00 00    	js     278c <__safestack_init@@Base+0x16c>
    26bb:	      |  |  |   4e 8d 3c 33          	lea    r15,[rbx+r14*1]
    26bf:	      |  |  |   49 81 c7 00 10 00 00 	add    r15,0x1000
    26c6:	      |  |  |   41 f6 c7 0f          	test   r15b,0xf
    26ca:	   /--|--|--|-- 0f 85 ec 00 00 00    	jne    27bc <__safestack_init@@Base+0x19c>
    26d0:	   |  |  |  |   48 81 c3 00 10 00 00 	add    rbx,0x1000
    26d7:	   |  |  |  |   64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    26de:	   |  |  |  |   00 00 
    26e0:	   |  |  |  |   48 03 05 c1 38 00 00 	add    rax,QWORD PTR [rip+0x38c1]        # 5fa8 <__safestack_unsafe_stack_ptr@@Base+0x5fa8>
    26e7:	   |  |  |  |   4c 89 38             	mov    QWORD PTR [rax],r15
    26ea:	   |  |  |  |   66 66 66 64 48 8b 04 	data16 data16 data16 mov rax,QWORD PTR fs:0x0
    26f1:	   |  |  |  |   25 00 00 00 00 
    26f6:	   |  |  |  |   48 89 98 e8 ff ff ff 	mov    QWORD PTR [rax-0x18],rbx
    26fd:	   |  |  |  |   4c 89 b0 f0 ff ff ff 	mov    QWORD PTR [rax-0x10],r14
    2704:	   |  |  |  |   48 c7 80 f8 ff ff ff 	mov    QWORD PTR [rax-0x8],0x1000
    270b:	   |  |  |  |   00 10 00 00 
    270f:	   |  |  |  |   48 8d 3d 0a 3a 00 00 	lea    rdi,[rip+0x3a0a]        # 6120 <__bss_start@@Base+0x10>
    2716:	   |  |  |  |   48 8d 35 d3 00 00 00 	lea    rsi,[rip+0xd3]        # 27f0 <__safestack_init@@Base+0x1d0>
    271d:	   |  |  |  |   e8 6e f9 ff ff       	call   2090 <pthread_key_create@plt>
    2722:	   |  |  |  |   48 83 c4 20          	add    rsp,0x20
    2726:	   |  |  |  |   5b                   	pop    rbx
    2727:	   |  |  |  |   41 5e                	pop    r14
    2729:	   |  |  |  |   41 5f                	pop    r15
    272b:	   |  |  |  |   c3                   	ret
    272c:	   |  |  \--|-> 48 8b 05 ad 38 00 00 	mov    rax,QWORD PTR [rip+0x38ad]        # 5fe0 <stderr@GLIBC_2.2.5>
    2733:	   |  |     |   48 8b 38             	mov    rdi,QWORD PTR [rax]
    2736:	   |  |     |   48 8d 35 c7 18 00 00 	lea    rsi,[rip+0x18c7]        # 4004 <_IO_stdin_used@@Base+0x4>
    273d:	   |  |     |   48 8d 15 e2 18 00 00 	lea    rdx,[rip+0x18e2]        # 4026 <_IO_stdin_used@@Base+0x26>
    2744:	   |  |     |   4c 8d 05 03 19 00 00 	lea    r8,[rip+0x1903]        # 404e <_IO_stdin_used@@Base+0x4e>
    274b:	   |  |     |   b9 5c 00 00 00       	mov    ecx,0x5c
    2750:	   |  |     |   31 c0                	xor    eax,eax
    2752:	   |  |     |   e8 79 f9 ff ff       	call   20d0 <fprintf@plt>
    2757:	   |  |     |   e8 e4 f8 ff ff       	call   2040 <abort@plt>
    275c:	   |  |     \-> 48 8b 05 7d 38 00 00 	mov    rax,QWORD PTR [rip+0x387d]        # 5fe0 <stderr@GLIBC_2.2.5>
    2763:	   |  |         48 8b 38             	mov    rdi,QWORD PTR [rax]
    2766:	   |  |         48 8d 35 97 18 00 00 	lea    rsi,[rip+0x1897]        # 4004 <_IO_stdin_used@@Base+0x4>
    276d:	   |  |         48 8d 15 b2 18 00 00 	lea    rdx,[rip+0x18b2]        # 4026 <_IO_stdin_used@@Base+0x26>
    2774:	   |  |         4c 8d 05 e8 18 00 00 	lea    r8,[rip+0x18e8]        # 4063 <_IO_stdin_used@@Base+0x63>
    277b:	   |  |         b9 5f 00 00 00       	mov    ecx,0x5f
    2780:	   |  |         31 c0                	xor    eax,eax
    2782:	   |  |         e8 49 f9 ff ff       	call   20d0 <fprintf@plt>
    2787:	   |  |         e8 b4 f8 ff ff       	call   2040 <abort@plt>
    278c:	   |  \-------> 48 8b 05 4d 38 00 00 	mov    rax,QWORD PTR [rip+0x384d]        # 5fe0 <stderr@GLIBC_2.2.5>
    2793:	   |            48 8b 38             	mov    rdi,QWORD PTR [rax]
    2796:	   |            48 8d 35 67 18 00 00 	lea    rsi,[rip+0x1867]        # 4004 <_IO_stdin_used@@Base+0x4>
    279d:	   |            48 8d 15 82 18 00 00 	lea    rdx,[rip+0x1882]        # 4026 <_IO_stdin_used@@Base+0x26>
    27a4:	   |            4c 8d 05 da 18 00 00 	lea    r8,[rip+0x18da]        # 4085 <_IO_stdin_used@@Base+0x85>
    27ab:	   |            b9 65 00 00 00       	mov    ecx,0x65
    27b0:	   |            31 c0                	xor    eax,eax
    27b2:	   |            e8 19 f9 ff ff       	call   20d0 <fprintf@plt>
    27b7:	   |            e8 84 f8 ff ff       	call   2040 <abort@plt>
    27bc:	   \----------> 48 8b 05 1d 38 00 00 	mov    rax,QWORD PTR [rip+0x381d]        # 5fe0 <stderr@GLIBC_2.2.5>
    27c3:	                48 8b 38             	mov    rdi,QWORD PTR [rax]
    27c6:	                48 8d 35 37 18 00 00 	lea    rsi,[rip+0x1837]        # 4004 <_IO_stdin_used@@Base+0x4>
    27cd:	                48 8d 15 52 18 00 00 	lea    rdx,[rip+0x1852]        # 4026 <_IO_stdin_used@@Base+0x26>
    27d4:	                4c 8d 05 f7 18 00 00 	lea    r8,[rip+0x18f7]        # 40d2 <_IO_stdin_used@@Base+0xd2>
    27db:	                b9 68 00 00 00       	mov    ecx,0x68
    27e0:	                31 c0                	xor    eax,eax
    27e2:	                e8 e9 f8 ff ff       	call   20d0 <fprintf@plt>
    27e7:	                e8 54 f8 ff ff       	call   2040 <abort@plt>
    27ec:	                0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    27f0:	                f3 0f 1e fa          	endbr64
    27f4:	                55                   	push   rbp
    27f5:	                41 57                	push   r15
    27f7:	                41 56                	push   r14
    27f9:	                41 55                	push   r13
    27fb:	                41 54                	push   r12
    27fd:	                53                   	push   rbx
    27fe:	                50                   	push   rax
    27ff:	                66 66 66 64 48 8b 04 	data16 data16 data16 mov rax,QWORD PTR fs:0x0
    2806:	                25 00 00 00 00 
    280b:	                48 83 b8 e8 ff ff ff 	cmp    QWORD PTR [rax-0x18],0x0
    2812:	                00 
    2813:	/-------------- 0f 84 47 01 00 00    	je     2960 <__safestack_init@@Base+0x340>
    2819:	|               48 89 c3             	mov    rbx,rax
    281c:	|               4c 8d a0 e8 ff ff ff 	lea    r12,[rax-0x18]
    2823:	|               8b 3d f7 38 00 00    	mov    edi,DWORD PTR [rip+0x38f7]        # 6120 <__bss_start@@Base+0x10>
    2829:	|               31 f6                	xor    esi,esi
    282b:	|               e8 70 f9 ff ff       	call   21a0 <pthread_setspecific@plt>
    2830:	|               4c 8d 35 21 39 00 00 	lea    r14,[rip+0x3921]        # 6158 <__bss_start@@Base+0x48>
    2837:	|               4c 89 f7             	mov    rdi,r14
    283a:	|               e8 41 f9 ff ff       	call   2180 <pthread_mutex_lock@plt>
    283f:	|               4c 8b 3d 3a 39 00 00 	mov    r15,QWORD PTR [rip+0x393a]        # 6180 <__bss_start@@Base+0x70>
    2846:	|               4c 89 3c 24          	mov    QWORD PTR [rsp],r15
    284a:	|               48 c7 05 2b 39 00 00 	mov    QWORD PTR [rip+0x392b],0x0        # 6180 <__bss_start@@Base+0x70>
    2851:	|               00 00 00 00 
    2855:	|               4c 89 f7             	mov    rdi,r14
    2858:	|               e8 c3 f8 ff ff       	call   2120 <pthread_mutex_unlock@plt>
    285d:	|               e8 0e f8 ff ff       	call   2070 <getpid@plt>
    2862:	|               89 c5                	mov    ebp,eax
    2864:	|               bf ba 00 00 00       	mov    edi,0xba
    2869:	|               31 c0                	xor    eax,eax
    286b:	|               e8 70 f8 ff ff       	call   20e0 <syscall@plt>
    2870:	|               49 89 c6             	mov    r14,rax
    2873:	|               49 89 e5             	mov    r13,rsp
    2876:	|  /----------- eb 2f                	jmp    28a7 <__safestack_init@@Base+0x287>
    2878:	|  |            0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    287f:	|  |            00 
    2880:	|  |  /-------> 49 8b 77 08          	mov    rsi,QWORD PTR [r15+0x8]
    2884:	|  |  |         49 8b 57 10          	mov    rdx,QWORD PTR [r15+0x10]
    2888:	|  |  |         bf 0b 00 00 00       	mov    edi,0xb
    288d:	|  |  |         31 c0                	xor    eax,eax
    288f:	|  |  |         e8 4c f8 ff ff       	call   20e0 <syscall@plt>
    2894:	|  |  |         49 8b 07             	mov    rax,QWORD PTR [r15]
    2897:	|  |  |         49 89 45 00          	mov    QWORD PTR [r13+0x0],rax
    289b:	|  |  |         4c 89 ff             	mov    rdi,r15
    289e:	|  |  |         e8 8d f7 ff ff       	call   2030 <free@plt>
    28a3:	|  |  |         4d 8b 7d 00          	mov    r15,QWORD PTR [r13+0x0]
    28a7:	|  >--|-------> 4d 85 ff             	test   r15,r15
    28aa:	|  |  |  /----- 74 3c                	je     28e8 <__safestack_init@@Base+0x2c8>
    28ac:	|  |  |  |      41 39 6f 18          	cmp    DWORD PTR [r15+0x18],ebp
    28b0:	|  |  +--|----- 75 ce                	jne    2880 <__safestack_init@@Base+0x260>
    28b2:	|  |  |  |      49 8b 57 20          	mov    rdx,QWORD PTR [r15+0x20]
    28b6:	|  |  |  |      bf ea 00 00 00       	mov    edi,0xea
    28bb:	|  |  |  |      89 ee                	mov    esi,ebp
    28bd:	|  |  |  |      31 c9                	xor    ecx,ecx
    28bf:	|  |  |  |      31 c0                	xor    eax,eax
    28c1:	|  |  |  |      e8 1a f8 ff ff       	call   20e0 <syscall@plt>
    28c6:	|  |  |  |      83 f8 ff             	cmp    eax,0xffffffff
    28c9:	|  |  |  |  /-- 75 15                	jne    28e0 <__safestack_init@@Base+0x2c0>
    28cb:	|  |  |  |  |   e8 80 f7 ff ff       	call   2050 <__errno_location@plt>
    28d0:	|  |  |  |  |   83 38 03             	cmp    DWORD PTR [rax],0x3
    28d3:	|  |  \--|--|-- 74 ab                	je     2880 <__safestack_init@@Base+0x260>
    28d5:	|  |     |  |   4d 89 fd             	mov    r13,r15
    28d8:	|  |     |  |   4d 8b 3f             	mov    r15,QWORD PTR [r15]
    28db:	|  +-----|--|-- eb ca                	jmp    28a7 <__safestack_init@@Base+0x287>
    28dd:	|  |     |  |   0f 1f 00             	nop    DWORD PTR [rax]
    28e0:	|  |     |  \-> 4d 89 fd             	mov    r13,r15
    28e3:	|  |     |      4d 8b 3f             	mov    r15,QWORD PTR [r15]
    28e6:	|  \-----|----- eb bf                	jmp    28a7 <__safestack_init@@Base+0x287>
    28e8:	|        \----> bf 28 00 00 00       	mov    edi,0x28
    28ed:	|               e8 3e f8 ff ff       	call   2130 <malloc@plt>
    28f2:	|               49 89 c7             	mov    r15,rax
    28f5:	|               49 8b 0c 24          	mov    rcx,QWORD PTR [r12]
    28f9:	|               48 8b 93 f8 ff ff ff 	mov    rdx,QWORD PTR [rbx-0x8]
    2900:	|               48 29 d1             	sub    rcx,rdx
    2903:	|               48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
    2907:	|               48 03 93 f0 ff ff ff 	add    rdx,QWORD PTR [rbx-0x10]
    290e:	|               48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
    2912:	|               89 68 18             	mov    DWORD PTR [rax+0x18],ebp
    2915:	|               4c 89 70 20          	mov    QWORD PTR [rax+0x20],r14
    2919:	|               48 8d 1d 38 38 00 00 	lea    rbx,[rip+0x3838]        # 6158 <__bss_start@@Base+0x48>
    2920:	|               48 89 df             	mov    rdi,rbx
    2923:	|               e8 58 f8 ff ff       	call   2180 <pthread_mutex_lock@plt>
    2928:	|               48 8b 05 51 38 00 00 	mov    rax,QWORD PTR [rip+0x3851]        # 6180 <__bss_start@@Base+0x70>
    292f:	|               49 89 45 00          	mov    QWORD PTR [r13+0x0],rax
    2933:	|               48 8b 04 24          	mov    rax,QWORD PTR [rsp]
    2937:	|               49 89 07             	mov    QWORD PTR [r15],rax
    293a:	|               4c 89 3d 3f 38 00 00 	mov    QWORD PTR [rip+0x383f],r15        # 6180 <__bss_start@@Base+0x70>
    2941:	|               48 89 df             	mov    rdi,rbx
    2944:	|               e8 d7 f7 ff ff       	call   2120 <pthread_mutex_unlock@plt>
    2949:	|               49 c7 04 24 00 00 00 	mov    QWORD PTR [r12],0x0
    2950:	|               00 
    2951:	|               48 83 c4 08          	add    rsp,0x8
    2955:	|               5b                   	pop    rbx
    2956:	|               41 5c                	pop    r12
    2958:	|               41 5d                	pop    r13
    295a:	|               41 5e                	pop    r14
    295c:	|               41 5f                	pop    r15
    295e:	|               5d                   	pop    rbp
    295f:	|               c3                   	ret
    2960:	\-------------> 48 8b 05 79 36 00 00 	mov    rax,QWORD PTR [rip+0x3679]        # 5fe0 <stderr@GLIBC_2.2.5>
    2967:	                48 8b 38             	mov    rdi,QWORD PTR [rax]
    296a:	                48 8d 35 93 16 00 00 	lea    rsi,[rip+0x1693]        # 4004 <_IO_stdin_used@@Base+0x4>
    2971:	                48 8d 15 ae 16 00 00 	lea    rdx,[rip+0x16ae]        # 4026 <_IO_stdin_used@@Base+0x26>
    2978:	                4c 8d 05 82 17 00 00 	lea    r8,[rip+0x1782]        # 4101 <_IO_stdin_used@@Base+0x101>
    297f:	                b9 a1 00 00 00       	mov    ecx,0xa1
    2984:	                31 c0                	xor    eax,eax
    2986:	                e8 45 f7 ff ff       	call   20d0 <fprintf@plt>
    298b:	                e8 b0 f6 ff ff       	call   2040 <abort@plt>

0000000000002990 <__get_unsafe_stack_bottom@@Base>:
    2990:	f3 0f 1e fa          	endbr64
    2994:	50                   	push   rax
    2995:	66 66 66 64 48 8b 04 	data16 data16 data16 mov rax,QWORD PTR fs:0x0
    299c:	25 00 00 00 00 
    29a1:	48 8b 80 e8 ff ff ff 	mov    rax,QWORD PTR [rax-0x18]
    29a8:	59                   	pop    rcx
    29a9:	c3                   	ret
    29aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000029b0 <__get_unsafe_stack_top@@Base>:
    29b0:	f3 0f 1e fa          	endbr64
    29b4:	50                   	push   rax
    29b5:	66 66 66 64 48 8b 04 	data16 data16 data16 mov rax,QWORD PTR fs:0x0
    29bc:	25 00 00 00 00 
    29c1:	48 8b 88 e8 ff ff ff 	mov    rcx,QWORD PTR [rax-0x18]
    29c8:	48 03 88 f0 ff ff ff 	add    rcx,QWORD PTR [rax-0x10]
    29cf:	48 89 c8             	mov    rax,rcx
    29d2:	59                   	pop    rcx
    29d3:	c3                   	ret
    29d4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    29db:	00 00 00 
    29de:	66 90                	xchg   ax,ax

00000000000029e0 <__get_unsafe_stack_start@@Base>:
    29e0:	f3 0f 1e fa          	endbr64
    29e4:	50                   	push   rax
    29e5:	66 66 66 64 48 8b 04 	data16 data16 data16 mov rax,QWORD PTR fs:0x0
    29ec:	25 00 00 00 00 
    29f1:	48 8b 80 e8 ff ff ff 	mov    rax,QWORD PTR [rax-0x18]
    29f8:	59                   	pop    rcx
    29f9:	c3                   	ret
    29fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000002a00 <__get_unsafe_stack_ptr@@Base>:
    2a00:	    f3 0f 1e fa          	endbr64
    2a04:	    50                   	push   rax
    2a05:	    64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    2a0c:	    00 00 
    2a0e:	    48 03 05 93 35 00 00 	add    rax,QWORD PTR [rip+0x3593]        # 5fa8 <__safestack_unsafe_stack_ptr@@Base+0x5fa8>
    2a15:	    48 8b 00             	mov    rax,QWORD PTR [rax]
    2a18:	    59                   	pop    rcx
    2a19:	    c3                   	ret
    2a1a:	    66 90                	xchg   ax,ax
    2a1c:	    0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    2a20:	    f3 0f 1e fa          	endbr64
    2a24:	    41 57                	push   r15
    2a26:	    41 56                	push   r14
    2a28:	    41 55                	push   r13
    2a2a:	    41 54                	push   r12
    2a2c:	    53                   	push   rbx
    2a2d:	    48 89 cb             	mov    rbx,rcx
    2a30:	    49 89 d6             	mov    r14,rdx
    2a33:	    49 89 f7             	mov    r15,rsi
    2a36:	    49 89 fc             	mov    r12,rdi
    2a39:	    48 c7 c7 ff ff ff ff 	mov    rdi,0xffffffffffffffff
    2a40:	    4c 89 e6             	mov    rsi,r12
    2a43:	    e8 f8 f6 ff ff       	call   2140 <dlsym@plt>
    2a48:	    48 85 c0             	test   rax,rax
    2a4b:	/-- 75 14                	jne    2a61 <__get_unsafe_stack_ptr@@Base+0x61>
    2a4d:	|   45 31 ed             	xor    r13d,r13d
    2a50:	|   31 ff                	xor    edi,edi
    2a52:	|   4c 89 e6             	mov    rsi,r12
    2a55:	|   e8 e6 f6 ff ff       	call   2140 <dlsym@plt>
    2a5a:	|   48 39 d8             	cmp    rax,rbx
    2a5d:	|   49 0f 44 c5          	cmove  rax,r13
    2a61:	\-> 49 89 07             	mov    QWORD PTR [r15],rax
    2a64:	    48 85 c0             	test   rax,rax
    2a67:	    0f 95 c1             	setne  cl
    2a6a:	    49 39 de             	cmp    r14,rbx
    2a6d:	    0f 94 c0             	sete   al
    2a70:	    20 c8                	and    al,cl
    2a72:	    5b                   	pop    rbx
    2a73:	    41 5c                	pop    r12
    2a75:	    41 5d                	pop    r13
    2a77:	    41 5e                	pop    r14
    2a79:	    41 5f                	pop    r15
    2a7b:	    c3                   	ret
    2a7c:	    0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    2a80:	    f3 0f 1e fa          	endbr64
    2a84:	    41 57                	push   r15
    2a86:	    41 56                	push   r14
    2a88:	    53                   	push   rbx
    2a89:	    4c 89 c3             	mov    rbx,r8
    2a8c:	    49 89 ce             	mov    r14,rcx
    2a8f:	    49 89 d7             	mov    r15,rdx
    2a92:	    48 89 f2             	mov    rdx,rsi
    2a95:	    48 89 fe             	mov    rsi,rdi
    2a98:	    48 c7 c7 ff ff ff ff 	mov    rdi,0xffffffffffffffff
    2a9f:	    e8 cc f6 ff ff       	call   2170 <dlvsym@plt>
    2aa4:	    49 89 07             	mov    QWORD PTR [r15],rax
    2aa7:	    48 85 c0             	test   rax,rax
    2aaa:	    0f 95 c1             	setne  cl
    2aad:	    49 39 de             	cmp    r14,rbx
    2ab0:	    0f 94 c0             	sete   al
    2ab3:	    20 c8                	and    al,cl
    2ab5:	    5b                   	pop    rbx
    2ab6:	    41 5e                	pop    r14
    2ab8:	    41 5f                	pop    r15
    2aba:	    c3                   	ret
    2abb:	    90                   	nop
    2abc:	    0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000002ac0 <g_arg2setyy@@Base>:
    2ac0:	b8 01 00 00 00       	mov    eax,0x1
    2ac5:	c3                   	ret
    2ac6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2acd:	00 00 00 

0000000000002ad0 <g_arg2setxx@@Base>:
    2ad0:	31 c0                	xor    eax,eax
    2ad2:	c3                   	ret
    2ad3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2ada:	00 00 00 
    2add:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000002ae0 <g_yyret@@Base>:
    2ae0:	b8 34 00 00 00       	mov    eax,0x34
    2ae5:	c3                   	ret
    2ae6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2aed:	00 00 00 
    2af0:	b8 35 00 00 00       	mov    eax,0x35
    2af5:	c3                   	ret
    2af6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2afd:	00 00 00 

0000000000002b00 <g_z1@@Base>:
    2b00:	31 c0                	xor    eax,eax
    2b02:	c3                   	ret
    2b03:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2b0a:	00 00 00 
    2b0d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000002b10 <g_rax2rsi@@Base>:
    2b10:	48 89 c6             	mov    rsi,rax
    2b13:	c3                   	ret
    2b14:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2b1b:	00 00 00 
    2b1e:	66 90                	xchg   ax,ax

0000000000002b20 <g_rax2rdi@@Base>:
    2b20:	48 89 c7             	mov    rdi,rax
    2b23:	c3                   	ret
    2b24:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2b2b:	00 00 00 
    2b2e:	66 90                	xchg   ax,ax
    2b30:	48 8b 05 99 35 00 00 	mov    rax,QWORD PTR [rip+0x3599]        # 60d0 <binsh@@Base>
    2b37:	c3                   	ret
    2b38:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    2b3f:	00 
    2b40:	48 8b 05 89 35 00 00 	mov    rax,QWORD PTR [rip+0x3589]        # 60d0 <binsh@@Base>
    2b47:	c3                   	ret
    2b48:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    2b4f:	00 
    2b50:	48 8b 05 79 35 00 00 	mov    rax,QWORD PTR [rip+0x3579]        # 60d0 <binsh@@Base>
    2b57:	c3                   	ret
    2b58:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    2b5f:	00 

0000000000002b60 <g_rax2rdx@@Base>:
    2b60:	48 89 c2             	mov    rdx,rax
    2b63:	c3                   	ret
    2b64:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2b6b:	00 00 00 
    2b6e:	66 90                	xchg   ax,ax

0000000000002b70 <g_rsi2rax@@Base>:
    2b70:	48 89 f0             	mov    rax,rsi
    2b73:	c3                   	ret
    2b74:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2b7b:	00 00 00 
    2b7e:	66 90                	xchg   ax,ax

0000000000002b80 <g_rdi2rax@@Base>:
    2b80:	48 89 f8             	mov    rax,rdi
    2b83:	c3                   	ret
    2b84:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2b8b:	00 00 00 
    2b8e:	66 90                	xchg   ax,ax

0000000000002b90 <g_rdx2rax@@Base>:
    2b90:	48 89 d0             	mov    rax,rdx
    2b93:	c3                   	ret
    2b94:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2b9b:	00 00 00 
    2b9e:	66 90                	xchg   ax,ax

0000000000002ba0 <g_z2@@Base>:
    2ba0:	48 31 f6             	xor    rsi,rsi
    2ba3:	c3                   	ret
    2ba4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2bab:	00 00 00 
    2bae:	66 90                	xchg   ax,ax

0000000000002bb0 <g_z3@@Base>:
    2bb0:	48 31 c0             	xor    rax,rax
    2bb3:	c3                   	ret
    2bb4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2bbb:	00 00 00 
    2bbe:	66 90                	xchg   ax,ax

0000000000002bc0 <g_inc8@@Base>:
    2bc0:	48 83 c0 08          	add    rax,0x8
    2bc4:	c3                   	ret
    2bc5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2bcc:	00 00 00 
    2bcf:	90                   	nop

0000000000002bd0 <g_inc32@@Base>:
    2bd0:	48 83 c0 20          	add    rax,0x20
    2bd4:	c3                   	ret
    2bd5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2bdc:	00 00 00 
    2bdf:	90                   	nop

0000000000002be0 <g_inc58@@Base>:
    2be0:	48 83 c0 3a          	add    rax,0x3a
    2be4:	c3                   	ret
    2be5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2bec:	00 00 00 
    2bef:	90                   	nop

0000000000002bf0 <g_inc59@@Base>:
    2bf0:	48 83 c0 3b          	add    rax,0x3b
    2bf4:	c3                   	ret
    2bf5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2bfc:	00 00 00 
    2bff:	90                   	nop

0000000000002c00 <g_inc@@Base>:
    2c00:	48 83 c0 01          	add    rax,0x1
    2c04:	c3                   	ret
    2c05:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2c0c:	00 00 00 
    2c0f:	90                   	nop

0000000000002c10 <g_z5@@Base>:
    2c10:	48 c7 c2 00 00 00 00 	mov    rdx,0x0
    2c17:	c3                   	ret
    2c18:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    2c1f:	00 

0000000000002c20 <g_poprdx@@Base>:
    2c20:	48 c7 c2 00 00 00 00 	mov    rdx,0x0
    2c27:	52                   	push   rdx
    2c28:	5a                   	pop    rdx
    2c29:	c3                   	ret
    2c2a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2c30:	48 8d 47 02          	lea    rax,[rdi+0x2]
    2c34:	c3                   	ret
    2c35:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2c3c:	00 00 00 
    2c3f:	90                   	nop

0000000000002c40 <gaddxx@@Base>:
    2c40:	48 8d 47 01          	lea    rax,[rdi+0x1]
    2c44:	c3                   	ret
    2c45:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2c4c:	00 00 00 
    2c4f:	90                   	nop

0000000000002c50 <gaddxy@@Base>:
    2c50:	48 8d 04 37          	lea    rax,[rdi+rsi*1]
    2c54:	c3                   	ret
    2c55:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2c5c:	00 00 00 
    2c5f:	90                   	nop

0000000000002c60 <gaddxyz@@Base>:
    2c60:	48 8d 04 37          	lea    rax,[rdi+rsi*1]
    2c64:	48 01 d0             	add    rax,rdx
    2c67:	c3                   	ret
    2c68:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    2c6f:	00 

0000000000002c70 <g_s1@@Base>:
    2c70:	48 8b 36             	mov    rsi,QWORD PTR [rsi]
    2c73:	31 c0                	xor    eax,eax
    2c75:	e9 66 f4 ff ff       	jmp    20e0 <syscall@plt>
    2c7a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000002c80 <g_syscall@@Base>:
    2c80:	48 89 f8             	mov    rax,rdi
    2c83:	48 31 f6             	xor    rsi,rsi
    2c86:	48 31 f6             	xor    rsi,rsi
    2c89:	48 31 d2             	xor    rdx,rdx
    2c8c:	0f 05                	syscall
    2c8e:	31 c0                	xor    eax,eax
    2c90:	c3                   	ret
    2c91:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2c98:	00 00 00 
    2c9b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    2ca0:	48 89 f8             	mov    rax,rdi
    2ca3:	48 89 f7             	mov    rdi,rsi
    2ca6:	48 31 f6             	xor    rsi,rsi
    2ca9:	48 31 d2             	xor    rdx,rdx
    2cac:	0f 05                	syscall
    2cae:	31 c0                	xor    eax,eax
    2cb0:	c3                   	ret
    2cb1:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2cb8:	00 00 00 
    2cbb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002cc0 <g_s2@@Base>:
    2cc0:	48 8b 06             	mov    rax,QWORD PTR [rsi]
    2cc3:	48 8b 56 08          	mov    rdx,QWORD PTR [rsi+0x8]
    2cc7:	48 89 c6             	mov    rsi,rax
    2cca:	31 c0                	xor    eax,eax
    2ccc:	e9 0f f4 ff ff       	jmp    20e0 <syscall@plt>
    2cd1:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2cd8:	00 00 00 
    2cdb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002ce0 <g_s3@@Base>:
    2ce0:	48 8b 06             	mov    rax,QWORD PTR [rsi]
    2ce3:	48 8b 56 08          	mov    rdx,QWORD PTR [rsi+0x8]
    2ce7:	48 8b 4e 10          	mov    rcx,QWORD PTR [rsi+0x10]
    2ceb:	48 89 c6             	mov    rsi,rax
    2cee:	31 c0                	xor    eax,eax
    2cf0:	e9 eb f3 ff ff       	jmp    20e0 <syscall@plt>
    2cf5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2cfc:	00 00 00 
    2cff:	90                   	nop

0000000000002d00 <g_s4@@Base>:
    2d00:	48 8b 06             	mov    rax,QWORD PTR [rsi]
    2d03:	48 8b 56 08          	mov    rdx,QWORD PTR [rsi+0x8]
    2d07:	48 8b 4e 18          	mov    rcx,QWORD PTR [rsi+0x18]
    2d0b:	4c 8b 46 20          	mov    r8,QWORD PTR [rsi+0x20]
    2d0f:	48 89 c6             	mov    rsi,rax
    2d12:	31 c0                	xor    eax,eax
    2d14:	e9 c7 f3 ff ff       	jmp    20e0 <syscall@plt>
    2d19:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002d20 <g_subxy@@Base>:
    2d20:	48 89 f8             	mov    rax,rdi
    2d23:	48 29 f0             	sub    rax,rsi
    2d26:	c3                   	ret
    2d27:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    2d2e:	00 00 

0000000000002d30 <g_subyx@@Base>:
    2d30:	48 89 f0             	mov    rax,rsi
    2d33:	48 29 f8             	sub    rax,rdi
    2d36:	c3                   	ret
    2d37:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    2d3e:	00 00 

0000000000002d40 <g_st@@Base>:
    2d40:	48 89 37             	mov    QWORD PTR [rdi],rsi
    2d43:	31 c0                	xor    eax,eax
    2d45:	c3                   	ret
    2d46:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2d4d:	00 00 00 

0000000000002d50 <g_st2@@Base>:
    2d50:	48 89 3e             	mov    QWORD PTR [rsi],rdi
    2d53:	31 c0                	xor    eax,eax
    2d55:	c3                   	ret
    2d56:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2d5d:	00 00 00 

0000000000002d60 <g_st3@@Base>:
    2d60:	48 89 f8             	mov    rax,rdi
    2d63:	48 89 36             	mov    QWORD PTR [rsi],rsi
    2d66:	c3                   	ret
    2d67:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    2d6e:	00 00 

0000000000002d70 <g_st4@@Base>:
    2d70:	48 89 f0             	mov    rax,rsi
    2d73:	48 89 3f             	mov    QWORD PTR [rdi],rdi
    2d76:	c3                   	ret
    2d77:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    2d7e:	00 00 

0000000000002d80 <g_st5@@Base>:
    2d80:	48 89 f0             	mov    rax,rsi
    2d83:	48 89 3f             	mov    QWORD PTR [rdi],rdi
    2d86:	c3                   	ret
    2d87:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    2d8e:	00 00 

0000000000002d90 <g_ld@@Base>:
    2d90:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    2d93:	c3                   	ret
    2d94:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2d9b:	00 00 00 
    2d9e:	66 90                	xchg   ax,ax

0000000000002da0 <g_ld2@@Base>:
    2da0:	48 8b 06             	mov    rax,QWORD PTR [rsi]
    2da3:	c3                   	ret
    2da4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2dab:	00 00 00 
    2dae:	66 90                	xchg   ax,ax

0000000000002db0 <g3@@Base>:
    2db0:	    48 8d 0d f9 01 00 00 	lea    rcx,[rip+0x1f9]        # 2fb0 <g_sh2@@Base>
    2db7:	    48 39 cf             	cmp    rdi,rcx
    2dba:	/-- 75 08                	jne    2dc4 <g3@@Base+0x14>
    2dbc:	|   48 89 f8             	mov    rax,rdi
    2dbf:	|   48 89 f7             	mov    rdi,rsi
    2dc2:	|   ff e0                	jmp    rax
    2dc4:	\-> 67 0f b9 40 02       	ud1    eax,DWORD PTR [eax+0x2]
    2dc9:	    0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002dd0 <g4@@Base>:
    2dd0:	    48 8d 05 d9 01 00 00 	lea    rax,[rip+0x1d9]        # 2fb0 <g_sh2@@Base>
    2dd7:	    48 39 c6             	cmp    rsi,rax
    2dda:	/-- 75 02                	jne    2dde <g4@@Base+0xe>
    2ddc:	|   ff e6                	jmp    rsi
    2dde:	\-> 67 0f b9 40 02       	ud1    eax,DWORD PTR [eax+0x2]
    2de3:	    66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2dea:	    00 00 00 
    2ded:	    0f 1f 00             	nop    DWORD PTR [rax]

0000000000002df0 <g_icall2@@Base>:
    2df0:	    48 8d 05 c9 01 00 00 	lea    rax,[rip+0x1c9]        # 2fc0 <g_sh3@@Base>
    2df7:	    48 39 c7             	cmp    rdi,rax
    2dfa:	/-- 75 02                	jne    2dfe <g_icall2@@Base+0xe>
    2dfc:	|   ff e7                	jmp    rdi
    2dfe:	\-> 67 0f b9 40 02       	ud1    eax,DWORD PTR [eax+0x2]
    2e03:	    66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2e0a:	    00 00 00 
    2e0d:	    0f 1f 00             	nop    DWORD PTR [rax]
    2e10:	    48 c7 c0 00 f0 ff ff 	mov    rax,0xfffffffffffff000
    2e17:	    48 23 05 aa 31 00 00 	and    rax,QWORD PTR [rip+0x31aa]        # 5fc8 <_IO_stdin_used@@Base+0x1fc8>
    2e1e:	    c3                   	ret
    2e1f:	    90                   	nop

0000000000002e20 <g_printf@@Base>:
    2e20:	50                   	push   rax
    2e21:	48 89 fe             	mov    rsi,rdi
    2e24:	48 8d 3d fc 12 00 00 	lea    rdi,[rip+0x12fc]        # 4127 <_IO_stdin_used@@Base+0x127>
    2e2b:	31 c0                	xor    eax,eax
    2e2d:	e8 4e f2 ff ff       	call   2080 <printf@plt>
    2e32:	31 c0                	xor    eax,eax
    2e34:	59                   	pop    rcx
    2e35:	c3                   	ret
    2e36:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2e3d:	00 00 00 

0000000000002e40 <vuln_leak@@Base>:
    2e40:	41 56                	push   r14
    2e42:	53                   	push   rbx
    2e43:	50                   	push   rax
    2e44:	48 89 fb             	mov    rbx,rdi
    2e47:	4c 8d 35 dc 12 00 00 	lea    r14,[rip+0x12dc]        # 412a <_IO_stdin_used@@Base+0x12a>
    2e4e:	48 8d 35 eb ff ff ff 	lea    rsi,[rip+0xffffffffffffffeb]        # 2e40 <vuln_leak@@Base>
    2e55:	4c 89 f7             	mov    rdi,r14
    2e58:	31 c0                	xor    eax,eax
    2e5a:	e8 21 f2 ff ff       	call   2080 <printf@plt>
    2e5f:	4c 89 f7             	mov    rdi,r14
    2e62:	48 89 de             	mov    rsi,rbx
    2e65:	31 c0                	xor    eax,eax
    2e67:	48 83 c4 08          	add    rsp,0x8
    2e6b:	5b                   	pop    rbx
    2e6c:	41 5e                	pop    r14
    2e6e:	e9 0d f2 ff ff       	jmp    2080 <printf@plt>
    2e73:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2e7a:	00 00 00 
    2e7d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000002e80 <vuln_overflow@@Base>:
    2e80:	41 57                	push   r15
    2e82:	41 56                	push   r14
    2e84:	53                   	push   rbx
    2e85:	4c 8b 35 1c 31 00 00 	mov    r14,QWORD PTR [rip+0x311c]        # 5fa8 <__safestack_unsafe_stack_ptr@@Base+0x5fa8>
    2e8c:	64 4d 8b 3e          	mov    r15,QWORD PTR fs:[r14]
    2e90:	49 8d 87 f0 fe ff ff 	lea    rax,[r15-0x110]
    2e97:	64 49 89 06          	mov    QWORD PTR fs:[r14],rax
    2e9b:	48 8d 3d b7 12 00 00 	lea    rdi,[rip+0x12b7]        # 4159 <_IO_stdin_used@@Base+0x159>
    2ea2:	e8 b9 f1 ff ff       	call   2060 <puts@plt>
    2ea7:	49 8d 9f f8 fe ff ff 	lea    rbx,[r15-0x108]
    2eae:	48 89 df             	mov    rdi,rbx
    2eb1:	e8 4a f2 ff ff       	call   2100 <gets@plt>
    2eb6:	48 89 df             	mov    rdi,rbx
    2eb9:	31 f6                	xor    esi,esi
    2ebb:	ba 0a 00 00 00       	mov    edx,0xa
    2ec0:	e8 2b f2 ff ff       	call   20f0 <strtol@plt>
    2ec5:	48 89 c3             	mov    rbx,rax
    2ec8:	48 8d 3d 94 12 00 00 	lea    rdi,[rip+0x1294]        # 4163 <_IO_stdin_used@@Base+0x163>
    2ecf:	e8 8c f1 ff ff       	call   2060 <puts@plt>
    2ed4:	48 63 c3             	movsxd rax,ebx
    2ed7:	48 c1 e0 04          	shl    rax,0x4
    2edb:	49 8d 3c 07          	lea    rdi,[r15+rax*1]
    2edf:	48 81 c7 00 ff ff ff 	add    rdi,0xffffffffffffff00
    2ee6:	e8 15 f2 ff ff       	call   2100 <gets@plt>
    2eeb:	64 4d 89 3e          	mov    QWORD PTR fs:[r14],r15
    2eef:	5b                   	pop    rbx
    2ef0:	41 5e                	pop    r14
    2ef2:	41 5f                	pop    r15
    2ef4:	c3                   	ret
    2ef5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2efc:	00 00 00 
    2eff:	90                   	nop

0000000000002f00 <main@@Base>:
    2f00:	          41 57                	push   r15
    2f02:	          41 56                	push   r14
    2f04:	          41 55                	push   r13
    2f06:	          41 54                	push   r12
    2f08:	          53                   	push   rbx
    2f09:	          4c 8b 35 98 30 00 00 	mov    r14,QWORD PTR [rip+0x3098]        # 5fa8 <__safestack_unsafe_stack_ptr@@Base+0x5fa8>
    2f10:	          64 4d 8b 3e          	mov    r15,QWORD PTR fs:[r14]
    2f14:	          49 8d 9f 00 fc ff ff 	lea    rbx,[r15-0x400]
    2f1b:	          64 49 89 1e          	mov    QWORD PTR fs:[r14],rbx
    2f1f:	          45 31 e4             	xor    r12d,r12d
    2f22:	          ba 00 04 00 00       	mov    edx,0x400
    2f27:	          48 89 df             	mov    rdi,rbx
    2f2a:	          31 f6                	xor    esi,esi
    2f2c:	          e8 6f f1 ff ff       	call   20a0 <memset@plt>
    2f31:	          48 89 df             	mov    rdi,rbx
    2f34:	          e8 07 ff ff ff       	call   2e40 <vuln_leak@@Base>
    2f39:	          e8 42 ff ff ff       	call   2e80 <vuln_overflow@@Base>
    2f3e:	          4c 8d 2d 8b 00 00 00 	lea    r13,[rip+0x8b]        # 2fd0 <g_xxret@@Base>
    2f45:	          31 ff                	xor    edi,edi
    2f47:	          31 db                	xor    ebx,ebx
    2f49:	      /-- eb 11                	jmp    2f5c <main@@Base+0x5c>
    2f4b:	      |   0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    2f50:	/-----|-> 49 ff c4             	inc    r12
    2f53:	|     |   49 81 fc 80 00 00 00 	cmp    r12,0x80
    2f5a:	|  /--|-- 74 30                	je     2f8c <main@@Base+0x8c>
    2f5c:	|  |  \-> 4b 83 bc e7 00 fc ff 	cmp    QWORD PTR [r15+r12*8-0x400],0x0
    2f63:	|  |      ff 00 
    2f65:	+--|----- 74 e9                	je     2f50 <main@@Base+0x50>
    2f67:	|  |           4b 8b 84 e7 00 fc ff 	mov    rax,QWORD PTR [r15+r12*8-0x400]
    2f6e:	|  |           ff 
    2f6f:	|  |           48 89 c1             	mov    rcx,rax
    2f72:	|  |           4c 29 e9             	sub    rcx,r13
    2f75:	|  |           48 c1 c1 3d          	rol    rcx,0x3d
    2f79:	|  |           48 83 f9 05          	cmp    rcx,0x5
    2f7d:	|  |  /--      73 29                	jae    2fa8 <main@@Base+0xa8>
    2f7f:	|  |  |   48 89 de             	mov    rsi,rbx
    2f82:	|  |  |   ff d0                	call   rax
    2f84:	|  |  |   48 89 df             	mov    rdi,rbx
    2f87:	|  |  |   48 89 c3             	mov    rbx,rax
    2f8a:	\--|--|-- eb c4                	jmp    2f50 <main@@Base+0x50>
    2f8c:	   \--|-> 48 8d 3d 9b 11 00 00 	lea    rdi,[rip+0x119b]        # 412e <_IO_stdin_used@@Base+0x12e>
    2f93:	      |   e8 88 fe ff ff       	call   2e20 <g_printf@@Base>
    2f98:	      |   64 4d 89 3e          	mov    QWORD PTR fs:[r14],r15
    2f9c:	      |   31 c0                	xor    eax,eax
    2f9e:	      |   5b                   	pop    rbx
    2f9f:	      |   41 5c                	pop    r12
    2fa1:	      |   41 5d                	pop    r13
    2fa3:	      |   41 5e                	pop    r14
    2fa5:	      |   41 5f                	pop    r15
    2fa7:	      |   c3                   	ret
    2fa8:	      \-> 67 0f b9 40 02       	ud1    eax,DWORD PTR [eax+0x2]
    2fad:	          0f 1f 00             	nop    DWORD PTR [rax]

0000000000002fb0 <g_sh2@@Base>:
    2fb0:	e9 8b fb ff ff       	jmp    2b40 <g_rax2rdi@@Base+0x20>
    2fb5:	cc                   	int3
    2fb6:	cc                   	int3
    2fb7:	cc                   	int3
    2fb8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    2fbf:	00 

0000000000002fc0 <g_sh3@@Base>:
    2fc0:	e9 8b fb ff ff       	jmp    2b50 <g_rax2rdi@@Base+0x30>
    2fc5:	cc                   	int3
    2fc6:	cc                   	int3
    2fc7:	cc                   	int3
    2fc8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    2fcf:	00 

0000000000002fd0 <g_xxret@@Base>:
    2fd0:	e9 1b fb ff ff       	jmp    2af0 <g_yyret@@Base+0x10>
    2fd5:	cc                   	int3
    2fd6:	cc                   	int3
    2fd7:	cc                   	int3

0000000000002fd8 <g_sh@@Base>:
    2fd8:	e9 53 fb ff ff       	jmp    2b30 <g_rax2rdi@@Base+0x10>
    2fdd:	cc                   	int3
    2fde:	cc                   	int3
    2fdf:	cc                   	int3

0000000000002fe0 <gaddyy@@Base>:
    2fe0:	e9 4b fc ff ff       	jmp    2c30 <g_poprdx@@Base+0x10>
    2fe5:	cc                   	int3
    2fe6:	cc                   	int3
    2fe7:	cc                   	int3

0000000000002fe8 <g_syscall2@@Base>:
    2fe8:	e9 b3 fc ff ff       	jmp    2ca0 <g_syscall@@Base+0x20>
    2fed:	cc                   	int3
    2fee:	cc                   	int3
    2fef:	cc                   	int3

0000000000002ff0 <g_leak1@@Base>:
    2ff0:	e9 1b fe ff ff       	jmp    2e10 <g_icall2@@Base+0x20>
    2ff5:	cc                   	int3
    2ff6:	cc                   	int3
    2ff7:	cc                   	int3

Disassembly of section .fini:

0000000000002ff8 <.fini>:
    2ff8:	f3 0f 1e fa          	endbr64
    2ffc:	48 83 ec 08          	sub    rsp,0x8
    3000:	48 83 c4 08          	add    rsp,0x8
    3004:	c3                   	ret

Disassembly of section .rodata:

0000000000004000 <_IO_stdin_used@@Base>:
    4000:	                                                          01 00                	add    DWORD PTR [rax],eax
    4002:	                                                          02 00                	add    al,BYTE PTR [rax]
    4004:	                                                   /----- 73 61                	jae    4067 <_IO_stdin_used@@Base+0x67>
    4006:	                                       /-----------|----- 66 65 73 74          	data16 gs jae 407e <_IO_stdin_used@@Base+0x7e>
    400a:	                                       |           |      61                   	(bad)
    400b:	                                       |           |      63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    400e:	                                       |           |      43                   	rex.XB
    400f:	                                       |           |      48                   	rex.W
    4010:	                                       |           |      45                   	rex.RB
    4011:	                                       |           |      43                   	rex.XB
    4012:	                                       |           |      4b 20 66 61          	rex.WXB and BYTE PTR [r14+0x61],spl
    4016:	                                       |           |      69 6c 65 64 3a 20 25 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7325203a
    401d:	                                       |           |      73 
    401e:	                                       |           |      3a 25 64 20 25 73    	cmp    ah,BYTE PTR [rip+0x73252064]        # 73256088 <_end@@Base+0x7324ff00>
    4024:	                                       |           |      0a 00                	or     al,BYTE PTR [rax]
    4026:	                                       |           |      63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    4029:	                                    /--|-----------|----- 70 69                	jo     4094 <_IO_stdin_used@@Base+0x94>
    402b:	                                    |  |           |      6c                   	ins    BYTE PTR es:[rdi],dx
    402c:	                                    |  |           |  /-- 65 72 2d             	gs jb  405c <_IO_stdin_used@@Base+0x5c>
    402f:	                                 /--|--|-----------|--|-- 72 74                	jb     40a5 <_IO_stdin_used@@Base+0xa5>
    4031:	                                 |  |  |           |  |   2f                   	(bad)
    4032:	                                 |  |  |           |  |   6c                   	ins    BYTE PTR es:[rdi],dx
    4033:	                                 |  |  |           |  |   69 62 2f 73 61 66 65 	imul   esp,DWORD PTR [rdx+0x2f],0x65666173
    403a:	                              /--|--|--|-----------|--|-- 73 74                	jae    40b0 <_IO_stdin_used@@Base+0xb0>
    403c:	                              |  |  |  |           |  |   61                   	(bad)
    403d:	                              |  |  |  |           |  |   63 6b 2f             	movsxd ebp,DWORD PTR [rbx+0x2f]
    4040:	                              |  |  |  |        /--|--|-- 73 61                	jae    40a3 <_IO_stdin_used@@Base+0xa3>
    4042:	         /--------------------|--|--|--|--------|--|--|-- 66 65 73 74          	data16 gs jae 40ba <_IO_stdin_used@@Base+0xba>
    4046:	         |                    |  |  |  |        |  |  |   61                   	(bad)
    4047:	         |                    |  |  |  |        |  |  |   63 6b 2e             	movsxd ebp,DWORD PTR [rbx+0x2e]
    404a:	         |                    |  |  |  |        |  |  |   63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    404d:	         |                    |  |  |  |        |  |  |   00 73 69             	add    BYTE PTR [rbx+0x69],dh
    4050:	         |                    |  |  |  |  /-----|--|--|-- 7a 65                	jp     40b7 <_IO_stdin_used@@Base+0xb7>
    4052:	         |                    |  |  |  |  |     |  |  |   20 2b                	and    BYTE PTR [rbx],ch
    4054:	         |                    |  |  |  |  |     |  |  |   20 67 75             	and    BYTE PTR [rdi+0x75],ah
    4057:	         |                    |  |  |  |  |     |  |  |   61                   	(bad)
    4058:	         |                    |  |  |  |  |  /--|--|--|-- 72 64                	jb     40be <_IO_stdin_used@@Base+0xbe>
    405a:	         |                    |  |  |  |  |  |  |  |  |   20 3e                	and    BYTE PTR [rsi],bh
    405c:	         |                    |  |  |  |  |  |  |  |  \-> 3d 20 73 69 7a       	cmp    eax,0x7a697320
    4061:	         |                    |  |  |  |  |  |  |  |      65 00 4d 41          	add    BYTE PTR gs:[rbp+0x41],cl
    4065:	         |                    |  |  |  |  |  |  |  |      50                   	push   rax
    4066:	         |                    |  |  |  |  |  |  |  |      5f                   	pop    rdi
    4067:	         |                    |  |  |  |  |  |  |  \----> 46                   	rex.RX
    4068:	         |                    |  |  |  |  |  |  |         41                   	rex.B
    4069:	         |                    |  |  |  |  |  |  |         49                   	rex.WB
    406a:	         |                    |  |  |  |  |  |  |         4c                   	rex.WR
    406b:	         |                    |  |  |  |  |  |  |         45                   	rex.RB
    406c:	         |                    |  |  |  |  |  |  |         44 20 21             	and    BYTE PTR [rcx],r12b
    406f:	         |                    |  |  |  |  |  |  |         3d 20 61 64 64       	cmp    eax,0x64646120
    4074:	         |                    |  |  |  |  |  |  |     /-- 72 00                	jb     4076 <_IO_stdin_used@@Base+0x76>
    4076:	         |                 /--|--|--|--|--|--|--|-----\-X 70 74                	jo     40ec <_IO_stdin_used@@Base+0xec>
    4078:	         |                 |  |  |  |  |  |  |  |         68 72 65 61 64       	push   0x64616572
    407d:	         |                 |  |  |  |  |  |  |  |         5f                   	pop    rdi
    407e:	         |                 |  |  |  |  \--|--|--|-------> 63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    4081:	         |                 |  |  |  |     |  |  |         61                   	(bad)
    4082:	         |                 |  |  |  |  /--|--|--|-------- 74 65                	je     40e9 <_IO_stdin_used@@Base+0xe9>
    4084:	         |                 |  |  |  |  |  |  |  |         00 28                	add    BYTE PTR [rax],ch
    4086:	         |                 |  |  |  |  |  |  |  |         63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4089:	         |                 |  |  |  |  |  |  |  |     /-- 72 20                	jb     40ab <_IO_stdin_used@@Base+0xab>
    408b:	         |                 |  |  |  |  |  |  |  |     |   2a 29                	sub    ch,BYTE PTR [rcx]
    408d:	         |              /--|--|--|--|--|--|--|--|-----|-- 73 74                	jae    4103 <_IO_stdin_used@@Base+0x103>
    408f:	         |              |  |  |  |  |  |  |  |  |     |   61                   	(bad)
    4090:	         |           /--|--|--|--|--|--|--|--|--|-----|-- 72 74                	jb     4106 <_IO_stdin_used@@Base+0x106>
    4092:	         |           |  |  |  |  |  |  |  |  |  |     |   20 2b                	and    BYTE PTR [rbx],ch
    4094:	         |           |  |  |  |  |  \--|--|--|--|-----|-> 20 73 69             	and    BYTE PTR [rbx+0x69],dh
    4097:	         |           |  |  |  |  |  /--|--|--|--|-----|-- 7a 65                	jp     40fe <_IO_stdin_used@@Base+0xfe>
    4099:	         |           |  |  |  |  |  |  |  |  |  |     |   20 3e                	and    BYTE PTR [rsi],bh
    409b:	         |           |  |  |  |  |  |  |  |  |  |     |   3d 20 28 63 68       	cmp    eax,0x68632820
    40a0:	         |           |  |  |  |  |  |  |  |  |  |     |   61                   	(bad)
    40a1:	         |           |  |  |  |  |  |  |  |  |  |  /--|-- 72 20                	jb     40c3 <_IO_stdin_used@@Base+0xc3>
    40a3:	         |           |  |  |  |  |  |  |  |  |  \--|--|-> 2a 29                	sub    ch,BYTE PTR [rcx]
    40a5:	         |        /--|--|--|--|--\--|--|--|--|-----|--|-X 73 74                	jae    411b <_IO_stdin_used@@Base+0x11b>
    40a7:	         |        |  |  |  |  |     |  |  |  |     |  |   61                   	(bad)
    40a8:	         |     /--|--|--|--|--|-----|--|--|--|-----|--|-- 72 74                	jb     411e <_IO_stdin_used@@Base+0x11e>
    40aa:	         |     |  |  |  |  |  |     |  |  |  |     |  |   00 28                	add    BYTE PTR [rax],ch
    40ac:	         |     |  |  |  |  |  |     |  |  |  |     |      63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    40af:	         |     |  |  |  |  |  |     |  |  |  |     |  /-- 72 20                	jb     40d1 <_IO_stdin_used@@Base+0xd1>
    40b1:	         |     |  |  |  |  |        |  |  |  |     |  |   2a 29                	sub    ch,BYTE PTR [rcx]
    40b3:	         |     |  |  |  |  |  /-----|--|--|--|-----|--|-- 73 74                	jae    4129 <_IO_stdin_used@@Base+0x129>
    40b5:	         |     |  |  |  |  |  |     |  |  |  |     |  |   61                   	(bad)
    40b6:	         |  /--|--|--|--|--|--|-----|--|--|--|-----|--|-- 72 74                	jb     412c <_IO_stdin_used@@Base+0x12c>
    40b8:	         |  |  |  |  |  |  |  |     |  |     |     |  |   20 2b                	and    BYTE PTR [rbx],ch
    40ba:	         \--|--|--|--|--|--|--|-----|--|-----|-----|--|-> 20 67 75             	and    BYTE PTR [rdi+0x75],ah
    40bd:	            |  |  |  |  |  |  |     |  |     |     |  |   61                   	(bad)
    40be:	            |  |  |  |  |  |  |     |  |  /--\-----|--|-X 72 64                	jb     4124 <_IO_stdin_used@@Base+0x124>
    40c0:	            |  |  |  |  |  |  |     |  |  |        |  |   20 3e                	and    BYTE PTR [rsi],bh
    40c2:	            |  |  |  |  |  |  |     |  |  |        |  |   3d 20 28 63 68       	cmp    eax,0x68632820
    40c7:	            |  |  |  |  |  |  |     |  |  |           |   61                   	(bad)
    40c8:	            |  |  |  |  |  |  |     |  |  |        /--|-- 72 20                	jb     40ea <_IO_stdin_used@@Base+0xea>
    40ca:	            |  |  |  |  |  |  |     |  |  |        |  |   2a 29                	sub    ch,BYTE PTR [rcx]
    40cc:	         /--|--|--|--|--|--|--|-----|--|--|--------|--|-- 73 74                	jae    4142 <_IO_stdin_used@@Base+0x142>
    40ce:	         |  |  |  |  |  |  |  |     |  |  |        |  |   61                   	(bad)
    40cf:	      /--|--|--|--|--|--|--|--|-----|--|--|--------|--|-- 72 74                	jb     4145 <_IO_stdin_used@@Base+0x145>
    40d1:	      |  |  |  |  |  |  |  |  |     |  |  |        |  \-> 00 28                	add    BYTE PTR [rax],ch
    40d3:	      |  |  |  |  |  |  |  |  |     |  |  |        |      28 28                	sub    BYTE PTR [rax],ch
    40d5:	      |  |  |  |  |  |  |  |  |  /--|--|--|--------|----- 73 69                	jae    4140 <_IO_stdin_used@@Base+0x140>
    40d7:	      |  |  |  |  |  |  |  |  |  |  |  |  |  /-----|----- 7a 65                	jp     413e <_IO_stdin_used@@Base+0x13e>
    40d9:	      |  |  |  |  |  |  |  |  |  |  |  |  |  |     |      5f                   	pop    rdi
    40da:	      |  |  |  |  |  |  |  |  |  |  |  |  |  |     |  /-- 74 29                	je     4105 <_IO_stdin_used@@Base+0x105>
    40dc:	   /--|--|--|--|--|--|--|--|--|--|--|--|--|--|-----|--|-- 73 74                	jae    4152 <_IO_stdin_used@@Base+0x152>
    40de:	   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |  |   61                   	(bad)
    40df:	   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |  |   63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    40e2:	/--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|-----|--|-- 70 74                	jo     4158 <_IO_stdin_used@@Base+0x158>
    40e4:	|  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  /--|--|-- 72 29                	jb     410f <_IO_stdin_used@@Base+0x10f>
    40e6:	|  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |   20 26                	and    BYTE PTR [rsi],ah
    40e8:	|  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |   20 28                	and    BYTE PTR [rax],ch
    40ea:	|  |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  \--|-> 6b 53 74 61          	imul   edx,DWORD PTR [rbx+0x74],0x61
    40ee:	|  |  |  |  |  |  |  |  |     |  |  |     |  |  |     |   63 6b 41             	movsxd ebp,DWORD PTR [rbx+0x41]
    40f1:	|  |  |  |  |  |  |  |  |     |  |  |     |  |  |     |   6c                   	ins    BYTE PTR es:[rdi],dx
    40f2:	|  |  |  |  |  |  |  |  |     |  |  |     |  |  |     |   69 67 6e 20 2d 20 31 	imul   esp,DWORD PTR [rdi+0x6e],0x31202d20
    40f9:	|  |  |  |  |  |  |  |  |     |  |  |     |  |  |     |   29 29                	sub    DWORD PTR [rcx],ebp
    40fb:	|  |  |  |  |  |  |  |  |     |  |  |     |  |  |     |   20 3d 3d 20 30 00    	and    BYTE PTR [rip+0x30203d],bh        # 30613e <_end@@Base+0x2fffb6>
    4101:	|  |  |  |  |  |  |  |  |     |  |     /--|--|--|-----|-- 75 6e                	jne    4171 <_IO_stdin_used@@Base+0x171>
    4103:	|  |  |  |  |  |  |  |  \-----|--|-----|--|--|--|--/--|-X 73 61                	jae    4166 <_IO_stdin_used@@Base+0x166>
    4105:	|  |  |  |  |  |  |  |        |  |     |  |  |  |  |  \-> 66 65 5f             	gs pop di
    4108:	|  |  |  |  |  |  |           |  |     |  |  |  |  |      73 74                	jae    417e <_IO_stdin_used@@Base+0x17e>
    410a:	|  |  |  |  |  |  |           |  |     |  |  |  |  |      61                   	(bad)
    410b:	|  |  |  |  |  |  |           |  |     |  |  |  |  |      63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    410e:	|  |  |  |  |  |  |           |  |     |  |  |  |  |      73 74                	jae    4184 <_IO_stdin_used@@Base+0x184>
    4110:	|  |  |  |  |  |  |           |  |     |  |  |     |      61                   	(bad)
    4111:	|  |  |  |  |  |  |           |  |     |  |  |     |      72 74                	jb     4187 <_IO_stdin_used@@Base+0x187>
    4113:	|  |  |  |  |  |  |           |  |     |  |  |     |      20 21                	and    BYTE PTR [rcx],ah
    4115:	|  |  |  |  |  |  |           |  |     |  |  |     |      3d 20 6e 75 6c       	cmp    eax,0x6c756e20
    411a:	|  |  |  |  |  |  |           |  |     |  |  |     |      6c                   	ins    BYTE PTR es:[rdi],dx
    411b:	|  |  |  |  |  |  \-----------|--|-----|--|--|-----|----> 70 74                	jo     4191 <_IO_stdin_used@@Base+0x191>
    411d:	|  |  |  |  |  |              |  |     |  |  |     |  /-- 72 00                	jb     411f <_IO_stdin_used@@Base+0x11f>
    411f:	|  |  |  |  |                 |  |     |  |  |     |  \-> 2f                   	(bad)
    4120:	|  |  |  |  |                 |  |     |  |  |     |      62 69 6e 2f 73       	(bad)
    4125:	|  |  |  |  |                 |  |     |     |     |      68 00 25 73 00       	push   0x732500
    412a:	|  |  |  |  |                    |     |     |     |      25 70 0a 00 5b       	and    eax,0x5b000a70
    412f:	|  |  |  |                       |     |     |     |      52                   	push   rdx
    4130:	|  |  |  |                       |     |     |     |      45 53                	rex.RB push r11
    4132:	|  |  |  |                       |     |     |     |      55                   	push   rbp
    4133:	|  |  |  |                       |     |     |     |      4c 54                	rex.WR push rsp
    4135:	|  |  |  |                       |     |     |     |      5d                   	pop    rbp
    4136:	|  |  |  |                       |     |     |     |      20 4e 6f             	and    BYTE PTR [rsi+0x6f],cl
    4139:	|  |  |  |                       |     |     |     |  /-- 74 20                	je     415b <_IO_stdin_used@@Base+0x15b>
    413b:	|  |  |  |                       |     |     |     |  |   65 78 70             	gs js  41ae <_IO_stdin_used@@Base+0x1ae>
    413e:	|  |  |  |                       |     |     \-----|--|-> 6c                   	ins    BYTE PTR es:[rdi],dx
    413f:	|  |  |  |                       |     |           |  |   6f                   	outs   dx,DWORD PTR ds:[rsi]
    4140:	|  |  |  |                       \-----|-----------|--|-> 69 74 65 64 20 3a 28 	imul   esi,DWORD PTR [rbp+riz*2+0x64],0x20283a20
    4147:	|  |                                   |           |  |   20 
    4148:	|  |                                   |           |  |   45 78 69             	rex.RB js 41b4 <_IO_stdin_used@@Base+0x1b4>
    414b:	|  |                                   |           |  |   74 69                	je     41b6 <_IO_stdin_used@@Base+0x1b6>
    414d:	|  |                                   |           |  |   6e                   	outs   dx,BYTE PTR ds:[rsi]
    414e:	|  |                                   |           |  |   67 20 73 61          	and    BYTE PTR [ebx+0x61],dh
    4152:	|  \-----------------------------------|-----------|--|-> 66 65 6c             	data16 gs ins BYTE PTR es:[rdi],dx
    4155:	|                                      |           |  |   79 2e                	jns    4185 <_IO_stdin_used@@Base+0x185>
    4157:	|                                      |           |  |   0a 00                	or     al,BYTE PTR [rax]
    4159:	                                       |           |  |   45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    415b:	                                       |           |  \-> 74 65                	je     41c2 <_IO_stdin_used@@Base+0x1c2>
    415d:	                                       |           |      72 20                	jb     417f <_IO_stdin_used@@Base+0x17f>
    415f:	                                       |           |      69 64 3a 00 45 6e 74 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x65746e45
    4166:	                                       |           \----> 65 
    4167:	                                       |                  72 20                	jb     4189 <_IO_stdin_used@@Base+0x189>
    4169:	                                       |                  70 61                	jo     41cc <_IO_stdin_used@@Base+0x1cc>
    416b:	                                       |                  73 73                	jae    41e0 <_IO_stdin_used@@Base+0x1e0>
    416d:	                                       |                  77 6f                	ja     41de <_IO_stdin_used@@Base+0x1de>
    416f:	                                       |                  72 64                	jb     41d5 <_IO_stdin_used@@Base+0x1d5>
    4171:	                                       \----------------> 3a 00                	cmp    al,BYTE PTR [rax]

Disassembly of section .eh_frame_hdr:

0000000000004174 <.eh_frame_hdr>:
    4174:	01 1b                	add    DWORD PTR [rbx],ebx
    4176:	03 3b                	add    edi,DWORD PTR [rbx]
    4178:	08 02                	or     BYTE PTR [rdx],al
    417a:	00 00                	add    BYTE PTR [rax],al
    417c:	40 00 00             	rex add BYTE PTR [rax],al
    417f:	00 ac de ff ff 3c 02 	add    BYTE PTR [rsi+rbx*8+0x23cffff],ch
    4186:	00 00                	add    BYTE PTR [rax],al
    4188:	3c e0                	cmp    al,0xe0
    418a:	ff                   	(bad)
    418b:	ff 64 02 00          	jmp    QWORD PTR [rdx+rax*1+0x0]
    418f:	00 4c e0 ff          	add    BYTE PTR [rax+riz*8-0x1],cl
    4193:	ff 24 02             	jmp    QWORD PTR [rdx+rax*1]
    4196:	00 00                	add    BYTE PTR [rax],al
    4198:	38 e1                	cmp    cl,ah
    419a:	ff                   	(bad)
    419b:	ff                   	(bad)
    419c:	7c 02                	jl     41a0 <_IO_stdin_used@@Base+0x1a0>
    419e:	00 00                	add    BYTE PTR [rax],al
    41a0:	4c e1 ff             	rex.WR loope 41a2 <_IO_stdin_used@@Base+0x1a2>
    41a3:	ff 90 02 00 00 7c    	call   QWORD PTR [rax+0x7c000002]
    41a9:	e3 ff                	jrcxz  41aa <_IO_stdin_used@@Base+0x1aa>
    41ab:	ff e0                	jmp    rax
    41ad:	02 00                	add    al,BYTE PTR [rax]
    41af:	00 ac e4 ff ff 2c 03 	add    BYTE PTR [rsp+riz*8+0x32cffff],ch
    41b6:	00 00                	add    BYTE PTR [rax],al
    41b8:	7c e6                	jl     41a0 <_IO_stdin_used@@Base+0x1a0>
    41ba:	ff                   	(bad)
    41bb:	ff 60 03             	jmp    QWORD PTR [rax+0x3]
    41be:	00 00                	add    BYTE PTR [rax],al
    41c0:	1c e8                	sbb    al,0xe8
    41c2:	ff                   	(bad)
    41c3:	ff ac 03 00 00 3c e8 	jmp    FWORD PTR [rbx+rax*1-0x17c40000]
    41ca:	ff                   	(bad)
    41cb:	ff c4                	inc    esp
    41cd:	03 00                	add    eax,DWORD PTR [rax]
    41cf:	00 6c e8 ff          	add    BYTE PTR [rax+rbp*8-0x1],ch
    41d3:	ff                   	call   (bad)
    41d4:	dc 03                	fadd   QWORD PTR [rbx]
    41d6:	00 00                	add    BYTE PTR [rax],al
    41d8:	8c e8                	mov    eax,gs
    41da:	ff                   	(bad)
    41db:	ff f4                	push   rsp
    41dd:	03 00                	add    eax,DWORD PTR [rax]
    41df:	00 ac e8 ff ff 0c 04 	add    BYTE PTR [rax+rbp*8+0x40cffff],ch
    41e6:	00 00                	add    BYTE PTR [rax],al
    41e8:	0c e9                	or     al,0xe9
    41ea:	ff                   	(bad)
    41eb:	ff 48 04             	dec    DWORD PTR [rax+0x4]
    41ee:	00 00                	add    BYTE PTR [rax],al
    41f0:	4c e9 ff ff 74 04    	rex.WR jmp 47541f5 <_end@@Base+0x474e06d>
    41f6:	00 00                	add    BYTE PTR [rax],al
    41f8:	5c                   	pop    rsp
    41f9:	e9 ff ff 88 04       	jmp    48941fd <_end@@Base+0x488e075>
    41fe:	00 00                	add    BYTE PTR [rax],al
    4200:	6c                   	ins    BYTE PTR es:[rdi],dx
    4201:	e9 ff ff 9c 04       	jmp    49d4205 <_end@@Base+0x49ce07d>
    4206:	00 00                	add    BYTE PTR [rax],al
    4208:	7c e9                	jl     41f3 <_IO_stdin_used@@Base+0x1f3>
    420a:	ff                   	(bad)
    420b:	ff b0 04 00 00 8c    	push   QWORD PTR [rax-0x73fffffc]
    4211:	e9 ff ff c4 04       	jmp    4c54215 <_end@@Base+0x4c4e08d>
    4216:	00 00                	add    BYTE PTR [rax],al
    4218:	9c                   	pushf
    4219:	e9 ff ff d8 04       	jmp    4d9421d <_end@@Base+0x4d8e095>
    421e:	00 00                	add    BYTE PTR [rax],al
    4220:	ac                   	lods   al,BYTE PTR ds:[rsi]
    4221:	e9 ff ff ec 04       	jmp    4ed4225 <_end@@Base+0x4ece09d>
    4226:	00 00                	add    BYTE PTR [rax],al
    4228:	bc e9 ff ff 00       	mov    esp,0xffffe9
    422d:	05 00 00 cc e9       	add    eax,0xe9cc0000
    4232:	ff                   	(bad)
    4233:	ff 14 05 00 00 dc e9 	call   QWORD PTR [rax*1-0x16240000]
    423a:	ff                   	(bad)
    423b:	ff 28                	jmp    FWORD PTR [rax]
    423d:	05 00 00 ec e9       	add    eax,0xe9ec0000
    4242:	ff                   	(bad)
    4243:	ff                   	(bad)
    4244:	3c 05                	cmp    al,0x5
    4246:	00 00                	add    BYTE PTR [rax],al
    4248:	fc                   	cld
    4249:	e9 ff ff 50 05       	jmp    551424d <_end@@Base+0x550e0c5>
    424e:	00 00                	add    BYTE PTR [rax],al
    4250:	0c ea                	or     al,0xea
    4252:	ff                   	(bad)
    4253:	ff 64 05 00          	jmp    QWORD PTR [rbp+rax*1+0x0]
    4257:	00 1c ea             	add    BYTE PTR [rdx+rbp*8],bl
    425a:	ff                   	(bad)
    425b:	ff                   	(bad)
    425c:	78 05                	js     4263 <_IO_stdin_used@@Base+0x263>
    425e:	00 00                	add    BYTE PTR [rax],al
    4260:	2c ea                	sub    al,0xea
    4262:	ff                   	(bad)
    4263:	ff 8c 05 00 00 3c ea 	dec    DWORD PTR [rbp+rax*1-0x15c40000]
    426a:	ff                   	(bad)
    426b:	ff a0 05 00 00 4c    	jmp    QWORD PTR [rax+0x4c000005]
    4271:	ea                   	(bad)
    4272:	ff                   	(bad)
    4273:	ff b4 05 00 00 5c ea 	push   QWORD PTR [rbp+rax*1-0x15a40000]
    427a:	ff                   	(bad)
    427b:	ff c8                	dec    eax
    427d:	05 00 00 6c ea       	add    eax,0xea6c0000
    4282:	ff                   	(bad)
    4283:	ff                   	call   (bad)
    4284:	dc 05 00 00 7c ea    	fadd   QWORD PTR [rip+0xffffffffea7c0000]        # ffffffffea7c428a <_end@@Base+0xffffffffea7be102>
    428a:	ff                   	(bad)
    428b:	ff f0                	push   rax
    428d:	05 00 00 8c ea       	add    eax,0xea8c0000
    4292:	ff                   	(bad)
    4293:	ff 04 06             	inc    DWORD PTR [rsi+rax*1]
    4296:	00 00                	add    BYTE PTR [rax],al
    4298:	9c                   	pushf
    4299:	ea                   	(bad)
    429a:	ff                   	(bad)
    429b:	ff 18                	call   FWORD PTR [rax]
    429d:	06                   	(bad)
    429e:	00 00                	add    BYTE PTR [rax],al
    42a0:	ac                   	lods   al,BYTE PTR ds:[rsi]
    42a1:	ea                   	(bad)
    42a2:	ff                   	(bad)
    42a3:	ff 2c 06             	jmp    FWORD PTR [rsi+rax*1]
    42a6:	00 00                	add    BYTE PTR [rax],al
    42a8:	bc ea ff ff 40       	mov    esp,0x40ffffea
    42ad:	06                   	(bad)
    42ae:	00 00                	add    BYTE PTR [rax],al
    42b0:	cc                   	int3
    42b1:	ea                   	(bad)
    42b2:	ff                   	(bad)
    42b3:	ff 54 06 00          	call   QWORD PTR [rsi+rax*1+0x0]
    42b7:	00 dc                	add    ah,bl
    42b9:	ea                   	(bad)
    42ba:	ff                   	(bad)
    42bb:	ff 68 06             	jmp    FWORD PTR [rax+0x6]
    42be:	00 00                	add    BYTE PTR [rax],al
    42c0:	ec                   	in     al,dx
    42c1:	ea                   	(bad)
    42c2:	ff                   	(bad)
    42c3:	ff                   	(bad)
    42c4:	7c 06                	jl     42cc <_IO_stdin_used@@Base+0x2cc>
    42c6:	00 00                	add    BYTE PTR [rax],al
    42c8:	fc                   	cld
    42c9:	ea                   	(bad)
    42ca:	ff                   	(bad)
    42cb:	ff 90 06 00 00 0c    	call   QWORD PTR [rax+0xc000006]
    42d1:	eb ff                	jmp    42d2 <_IO_stdin_used@@Base+0x2d2>
    42d3:	ff a4 06 00 00 2c eb 	jmp    QWORD PTR [rsi+rax*1-0x14d40000]
    42da:	ff                   	(bad)
    42db:	ff                   	(bad)
    42dc:	b8 06 00 00 4c       	mov    eax,0x4c000006
    42e1:	eb ff                	jmp    42e2 <_IO_stdin_used@@Base+0x2e2>
    42e3:	ff cc                	dec    esp
    42e5:	06                   	(bad)
    42e6:	00 00                	add    BYTE PTR [rax],al
    42e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    42e9:	eb ff                	jmp    42ea <_IO_stdin_used@@Base+0x2ea>
    42eb:	ff e0                	jmp    rax
    42ed:	06                   	(bad)
    42ee:	00 00                	add    BYTE PTR [rax],al
    42f0:	8c eb                	mov    ebx,gs
    42f2:	ff                   	(bad)
    42f3:	ff f4                	push   rsp
    42f5:	06                   	(bad)
    42f6:	00 00                	add    BYTE PTR [rax],al
    42f8:	ac                   	lods   al,BYTE PTR ds:[rsi]
    42f9:	eb ff                	jmp    42fa <_IO_stdin_used@@Base+0x2fa>
    42fb:	ff 08                	dec    DWORD PTR [rax]
    42fd:	07                   	(bad)
    42fe:	00 00                	add    BYTE PTR [rax],al
    4300:	bc eb ff ff 1c       	mov    esp,0x1cffffeb
    4305:	07                   	(bad)
    4306:	00 00                	add    BYTE PTR [rax],al
    4308:	cc                   	int3
    4309:	eb ff                	jmp    430a <_IO_stdin_used@@Base+0x30a>
    430b:	ff 30                	push   QWORD PTR [rax]
    430d:	07                   	(bad)
    430e:	00 00                	add    BYTE PTR [rax],al
    4310:	dc eb                	fsub   st(3),st
    4312:	ff                   	(bad)
    4313:	ff 44 07 00          	inc    DWORD PTR [rdi+rax*1+0x0]
    4317:	00 ec                	add    ah,ch
    4319:	eb ff                	jmp    431a <_IO_stdin_used@@Base+0x31a>
    431b:	ff 58 07             	call   FWORD PTR [rax+0x7]
    431e:	00 00                	add    BYTE PTR [rax],al
    4320:	fc                   	cld
    4321:	eb ff                	jmp    4322 <_IO_stdin_used@@Base+0x322>
    4323:	ff 6c 07 00          	jmp    FWORD PTR [rdi+rax*1+0x0]
    4327:	00 0c ec             	add    BYTE PTR [rsp+rbp*8],cl
    432a:	ff                   	(bad)
    432b:	ff 80 07 00 00 1c    	inc    DWORD PTR [rax+0x1c000007]
    4331:	ec                   	in     al,dx
    4332:	ff                   	(bad)
    4333:	ff 94 07 00 00 2c ec 	call   QWORD PTR [rdi+rax*1-0x13d40000]
    433a:	ff                   	(bad)
    433b:	ff a8 07 00 00 3c    	jmp    FWORD PTR [rax+0x3c000007]
    4341:	ec                   	in     al,dx
    4342:	ff                   	(bad)
    4343:	ff                   	(bad)
    4344:	bc 07 00 00 5c       	mov    esp,0x5c000007
    4349:	ec                   	in     al,dx
    434a:	ff                   	(bad)
    434b:	ff d0                	call   rax
    434d:	07                   	(bad)
    434e:	00 00                	add    BYTE PTR [rax],al
    4350:	7c ec                	jl     433e <_IO_stdin_used@@Base+0x33e>
    4352:	ff                   	(bad)
    4353:	ff e4                	jmp    rsp
    4355:	07                   	(bad)
    4356:	00 00                	add    BYTE PTR [rax],al
    4358:	9c                   	pushf
    4359:	ec                   	in     al,dx
    435a:	ff                   	(bad)
    435b:	ff                   	(bad)
    435c:	f8                   	clc
    435d:	07                   	(bad)
    435e:	00 00                	add    BYTE PTR [rax],al
    4360:	ac                   	lods   al,BYTE PTR ds:[rsi]
    4361:	ec                   	in     al,dx
    4362:	ff                   	(bad)
    4363:	ff 0c 08             	dec    DWORD PTR [rax+rcx*1]
    4366:	00 00                	add    BYTE PTR [rax],al
    4368:	cc                   	int3
    4369:	ec                   	in     al,dx
    436a:	ff                   	(bad)
    436b:	ff 24 08             	jmp    QWORD PTR [rax+rcx*1]
    436e:	00 00                	add    BYTE PTR [rax],al
    4370:	0c ed                	or     al,0xed
    4372:	ff                   	(bad)
    4373:	ff 4c 08 00          	dec    DWORD PTR [rax+rcx*1+0x0]
    4377:	00 8c ed ff ff 78 08 	add    BYTE PTR [rbp+rbp*8+0x878ffff],cl
	...

Disassembly of section .eh_frame:

0000000000004380 <.eh_frame>:
    4380:	14 00                	adc    al,0x0
    4382:	00 00                	add    BYTE PTR [rax],al
    4384:	00 00                	add    BYTE PTR [rax],al
    4386:	00 00                	add    BYTE PTR [rax],al
    4388:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    438b:	00 01                	add    BYTE PTR [rcx],al
    438d:	78 10                	js     439f <_IO_stdin_used@@Base+0x39f>
    438f:	01 1b                	add    DWORD PTR [rbx],ebx
    4391:	0c 07                	or     al,0x7
    4393:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    4399:	00 00                	add    BYTE PTR [rax],al
    439b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    439e:	00 00                	add    BYTE PTR [rax],al
    43a0:	20 de                	and    dh,bl
    43a2:	ff                   	(bad)
    43a3:	ff 26                	jmp    QWORD PTR [rsi]
    43a5:	00 00                	add    BYTE PTR [rax],al
    43a7:	00 00                	add    BYTE PTR [rax],al
    43a9:	44 07                	rex.R (bad)
    43ab:	10 00                	adc    BYTE PTR [rax],al
    43ad:	00 00                	add    BYTE PTR [rax],al
    43af:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    43b2:	00 00                	add    BYTE PTR [rax],al
    43b4:	34 00                	xor    al,0x0
    43b6:	00 00                	add    BYTE PTR [rax],al
    43b8:	68 dc ff ff 90       	push   0xffffffff90ffffdc
    43bd:	01 00                	add    DWORD PTR [rax],eax
    43bf:	00 00                	add    BYTE PTR [rax],al
    43c1:	0e                   	(bad)
    43c2:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    43c5:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    43c8:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    43cb:	80 00 3f             	add    BYTE PTR [rax],0x3f
    43ce:	1a 3b                	sbb    bh,BYTE PTR [rbx]
    43d0:	2a 33                	sub    dh,BYTE PTR [rbx]
    43d2:	24 22                	and    al,0x22
    43d4:	00 00                	add    BYTE PTR [rax],al
    43d6:	00 00                	add    BYTE PTR [rax],al
    43d8:	14 00                	adc    al,0x0
    43da:	00 00                	add    BYTE PTR [rax],al
    43dc:	5c                   	pop    rsp
    43dd:	00 00                	add    BYTE PTR [rax],al
    43df:	00 d0                	add    al,dl
    43e1:	dd ff                	(bad)
    43e3:	ff 08                	dec    DWORD PTR [rax]
	...
    43ed:	00 00                	add    BYTE PTR [rax],al
    43ef:	00 10                	add    BYTE PTR [rax],dl
    43f1:	00 00                	add    BYTE PTR [rax],al
    43f3:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
    43f7:	00 b4 de ff ff 05 00 	add    BYTE PTR [rsi+rbx*8+0x5ffff],dh
    43fe:	00 00                	add    BYTE PTR [rax],al
    4400:	00 00                	add    BYTE PTR [rax],al
    4402:	00 00                	add    BYTE PTR [rax],al
    4404:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    4407:	00 88 00 00 00 b4    	add    BYTE PTR [rax-0x4c000000],cl
    440d:	de ff                	fdivp  st(7),st
    440f:	ff 2a                	jmp    FWORD PTR [rdx]
    4411:	02 00                	add    al,BYTE PTR [rax]
    4413:	00 00                	add    BYTE PTR [rax],al
    4415:	45 0e                	rex.RB (bad)
    4417:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    441a:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    441d:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4420:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    4423:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    4426:	38 44 0e 90          	cmp    BYTE PTR [rsi+rcx*1-0x70],al
    442a:	01 83 07 8c 06 8d    	add    DWORD PTR [rbx-0x72f973f9],eax
    4430:	05 8e 04 8f 03       	add    eax,0x38f048e
    4435:	86 02                	xchg   BYTE PTR [rdx],al
    4437:	03 40 01             	add    eax,DWORD PTR [rax+0x1]
    443a:	0e                   	(bad)
    443b:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    443e:	30 42 0e             	xor    BYTE PTR [rdx+0xe],al
    4441:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    4444:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4447:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    444a:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    444d:	08 41 0e             	or     BYTE PTR [rcx+0xe],al
    4450:	90                   	nop
    4451:	01 00                	add    DWORD PTR [rax],eax
    4453:	00 48 00             	add    BYTE PTR [rax+0x0],cl
    4456:	00 00                	add    BYTE PTR [rax],al
    4458:	d8 00                	fadd   DWORD PTR [rax]
    445a:	00 00                	add    BYTE PTR [rax],al
    445c:	94                   	xchg   esp,eax
    445d:	e0 ff                	loopne 445e <_IO_stdin_used@@Base+0x45e>
    445f:	ff 2c 01             	jmp    FWORD PTR [rcx+rax*1]
    4462:	00 00                	add    BYTE PTR [rax],al
    4464:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    4467:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    446a:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    446d:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4470:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    4473:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    4476:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    4479:	40 83 07 8c          	rex add DWORD PTR [rdi],0xffffff8c
    447d:	06                   	(bad)
    447e:	8d 05 8e 04 8f 03    	lea    eax,[rip+0x38f048e]        # 38f4912 <_end@@Base+0x38ee78a>
    4484:	86 02                	xchg   BYTE PTR [rdx],al
    4486:	02 81 0e 38 41 0e    	add    al,BYTE PTR [rcx+0xe41380e]
    448c:	30 42 0e             	xor    BYTE PTR [rdx+0xe],al
    448f:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    4492:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4495:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4498:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    449b:	08 42 0e             	or     BYTE PTR [rdx+0xe],al
    449e:	40 00 30             	add    BYTE PTR [rax],sil
    44a1:	00 00                	add    BYTE PTR [rax],al
    44a3:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    44a6:	00 00                	add    BYTE PTR [rax],al
    44a8:	78 e1                	js     448b <_IO_stdin_used@@Base+0x48b>
    44aa:	ff                   	(bad)
    44ab:	ff cc                	dec    esp
    44ad:	01 00                	add    DWORD PTR [rax],eax
    44af:	00 00                	add    BYTE PTR [rax],al
    44b1:	46 0e                	rex.RX (bad)
    44b3:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    44b6:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    44b9:	20 44 0e 40          	and    BYTE PTR [rsi+rcx*1+0x40],al
    44bd:	83 04 8e 03          	add    DWORD PTR [rsi+rcx*4],0x3
    44c1:	8f 02                	pop    QWORD PTR [rdx]
    44c3:	02 f9                	add    bh,cl
    44c5:	0e                   	(bad)
    44c6:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    44c9:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    44cc:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    44cf:	08 41 0e             	or     BYTE PTR [rcx+0xe],al
    44d2:	40 00 48 00          	rex add BYTE PTR [rax+0x0],cl
    44d6:	00 00                	add    BYTE PTR [rax],al
    44d8:	58                   	pop    rax
    44d9:	01 00                	add    DWORD PTR [rax],eax
    44db:	00 14 e3             	add    BYTE PTR [rbx+riz*8],dl
    44de:	ff                   	(bad)
    44df:	ff a0 01 00 00 00    	jmp    QWORD PTR [rax+0x1]
    44e5:	45 0e                	rex.RB (bad)
    44e7:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    44ea:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    44ed:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    44f0:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    44f3:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    44f6:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    44f9:	40 83 07 8c          	rex add DWORD PTR [rdi],0xffffff8c
    44fd:	06                   	(bad)
    44fe:	8d 05 8e 04 8f 03    	lea    eax,[rip+0x38f048e]        # 38f4992 <_end@@Base+0x38ee80a>
    4504:	86 02                	xchg   BYTE PTR [rdx],al
    4506:	03 56 01             	add    edx,DWORD PTR [rsi+0x1]
    4509:	0e                   	(bad)
    450a:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    450d:	30 42 0e             	xor    BYTE PTR [rdx+0xe],al
    4510:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    4513:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4516:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4519:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    451c:	08 41 0e             	or     BYTE PTR [rcx+0xe],al
    451f:	40 14 00             	rex adc al,0x0
    4522:	00 00                	add    BYTE PTR [rax],al
    4524:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    4525:	01 00                	add    DWORD PTR [rax],eax
    4527:	00 68 e4             	add    BYTE PTR [rax-0x1c],ch
    452a:	ff                   	(bad)
    452b:	ff 1a                	call   FWORD PTR [rdx]
    452d:	00 00                	add    BYTE PTR [rax],al
    452f:	00 00                	add    BYTE PTR [rax],al
    4531:	45 0e                	rex.RB (bad)
    4533:	10 54 0e 08          	adc    BYTE PTR [rsi+rcx*1+0x8],dl
    4537:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    453a:	00 00                	add    BYTE PTR [rax],al
    453c:	bc 01 00 00 70       	mov    esp,0x70000001
    4541:	e4 ff                	in     al,0xff
    4543:	ff 24 00             	jmp    QWORD PTR [rax+rax*1]
    4546:	00 00                	add    BYTE PTR [rax],al
    4548:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    454b:	10 5e 0e             	adc    BYTE PTR [rsi+0xe],bl
    454e:	08 00                	or     BYTE PTR [rax],al
    4550:	14 00                	adc    al,0x0
    4552:	00 00                	add    BYTE PTR [rax],al
    4554:	d4                   	(bad)
    4555:	01 00                	add    DWORD PTR [rax],eax
    4557:	00 88 e4 ff ff 1a    	add    BYTE PTR [rax+0x1affffe4],cl
    455d:	00 00                	add    BYTE PTR [rax],al
    455f:	00 00                	add    BYTE PTR [rax],al
    4561:	45 0e                	rex.RB (bad)
    4563:	10 54 0e 08          	adc    BYTE PTR [rsi+rcx*1+0x8],dl
    4567:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    456a:	00 00                	add    BYTE PTR [rax],al
    456c:	ec                   	in     al,dx
    456d:	01 00                	add    DWORD PTR [rax],eax
    456f:	00 90 e4 ff ff 1a    	add    BYTE PTR [rax+0x1affffe4],dl
    4575:	00 00                	add    BYTE PTR [rax],al
    4577:	00 00                	add    BYTE PTR [rax],al
    4579:	45 0e                	rex.RB (bad)
    457b:	10 54 0e 08          	adc    BYTE PTR [rsi+rcx*1+0x8],dl
    457f:	00 38                	add    BYTE PTR [rax],bh
    4581:	00 00                	add    BYTE PTR [rax],al
    4583:	00 04 02             	add    BYTE PTR [rdx+rax*1],al
    4586:	00 00                	add    BYTE PTR [rax],al
    4588:	98                   	cwde
    4589:	e4 ff                	in     al,0xff
    458b:	ff 5c 00 00          	call   FWORD PTR [rax+rax*1+0x0]
    458f:	00 00                	add    BYTE PTR [rax],al
    4591:	46 0e                	rex.RX (bad)
    4593:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4596:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4599:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    459c:	28 41 0e             	sub    BYTE PTR [rcx+0xe],al
    459f:	30 83 06 8c 05 8d    	xor    BYTE PTR [rbx-0x72fa73fa],al
    45a5:	04 8e                	add    al,0x8e
    45a7:	03 8f 02 02 46 0e    	add    ecx,DWORD PTR [rdi+0xe460202]
    45ad:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    45b0:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    45b3:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    45b6:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    45b9:	08 00                	or     BYTE PTR [rax],al
    45bb:	00 28                	add    BYTE PTR [rax],ch
    45bd:	00 00                	add    BYTE PTR [rax],al
    45bf:	00 40 02             	add    BYTE PTR [rax+0x2],al
    45c2:	00 00                	add    BYTE PTR [rax],al
    45c4:	bc e4 ff ff 3b       	mov    esp,0x3bffffe4
    45c9:	00 00                	add    BYTE PTR [rax],al
    45cb:	00 00                	add    BYTE PTR [rax],al
    45cd:	46 0e                	rex.RX (bad)
    45cf:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    45d2:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    45d5:	20 83 04 8e 03 8f    	and    BYTE PTR [rbx-0x70fc71fc],al
    45db:	02 6d 0e             	add    ch,BYTE PTR [rbp+0xe]
    45de:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    45e1:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    45e4:	08 00                	or     BYTE PTR [rax],al
    45e6:	00 00                	add    BYTE PTR [rax],al
    45e8:	10 00                	adc    BYTE PTR [rax],al
    45ea:	00 00                	add    BYTE PTR [rax],al
    45ec:	6c                   	ins    BYTE PTR es:[rdi],dx
    45ed:	02 00                	add    al,BYTE PTR [rax]
    45ef:	00 d0                	add    al,dl
    45f1:	e4 ff                	in     al,0xff
    45f3:	ff 06                	inc    DWORD PTR [rsi]
    45f5:	00 00                	add    BYTE PTR [rax],al
    45f7:	00 00                	add    BYTE PTR [rax],al
    45f9:	00 00                	add    BYTE PTR [rax],al
    45fb:	00 10                	add    BYTE PTR [rax],dl
    45fd:	00 00                	add    BYTE PTR [rax],al
    45ff:	00 80 02 00 00 cc    	add    BYTE PTR [rax-0x33fffffe],al
    4605:	e4 ff                	in     al,0xff
    4607:	ff 03                	inc    DWORD PTR [rbx]
    4609:	00 00                	add    BYTE PTR [rax],al
    460b:	00 00                	add    BYTE PTR [rax],al
    460d:	00 00                	add    BYTE PTR [rax],al
    460f:	00 10                	add    BYTE PTR [rax],dl
    4611:	00 00                	add    BYTE PTR [rax],al
    4613:	00 94 02 00 00 c8 e4 	add    BYTE PTR [rdx+rax*1-0x1b380000],dl
    461a:	ff                   	(bad)
    461b:	ff 06                	inc    DWORD PTR [rsi]
    461d:	00 00                	add    BYTE PTR [rax],al
    461f:	00 00                	add    BYTE PTR [rax],al
    4621:	00 00                	add    BYTE PTR [rax],al
    4623:	00 10                	add    BYTE PTR [rax],dl
    4625:	00 00                	add    BYTE PTR [rax],al
    4627:	00 a8 02 00 00 c4    	add    BYTE PTR [rax-0x3bfffffe],ch
    462d:	e4 ff                	in     al,0xff
    462f:	ff 06                	inc    DWORD PTR [rsi]
    4631:	00 00                	add    BYTE PTR [rax],al
    4633:	00 00                	add    BYTE PTR [rax],al
    4635:	00 00                	add    BYTE PTR [rax],al
    4637:	00 10                	add    BYTE PTR [rax],dl
    4639:	00 00                	add    BYTE PTR [rax],al
    463b:	00 bc 02 00 00 c0 e4 	add    BYTE PTR [rdx+rax*1-0x1b400000],bh
    4642:	ff                   	(bad)
    4643:	ff 03                	inc    DWORD PTR [rbx]
    4645:	00 00                	add    BYTE PTR [rax],al
    4647:	00 00                	add    BYTE PTR [rax],al
    4649:	00 00                	add    BYTE PTR [rax],al
    464b:	00 10                	add    BYTE PTR [rax],dl
    464d:	00 00                	add    BYTE PTR [rax],al
    464f:	00 d0                	add    al,dl
    4651:	02 00                	add    al,BYTE PTR [rax]
    4653:	00 bc e4 ff ff 04 00 	add    BYTE PTR [rsp+riz*8+0x4ffff],bh
    465a:	00 00                	add    BYTE PTR [rax],al
    465c:	00 00                	add    BYTE PTR [rax],al
    465e:	00 00                	add    BYTE PTR [rax],al
    4660:	10 00                	adc    BYTE PTR [rax],al
    4662:	00 00                	add    BYTE PTR [rax],al
    4664:	e4 02                	in     al,0x2
    4666:	00 00                	add    BYTE PTR [rax],al
    4668:	b8 e4 ff ff 04       	mov    eax,0x4ffffe4
    466d:	00 00                	add    BYTE PTR [rax],al
    466f:	00 00                	add    BYTE PTR [rax],al
    4671:	00 00                	add    BYTE PTR [rax],al
    4673:	00 10                	add    BYTE PTR [rax],dl
    4675:	00 00                	add    BYTE PTR [rax],al
    4677:	00 f8                	add    al,bh
    4679:	02 00                	add    al,BYTE PTR [rax]
    467b:	00 b4 e4 ff ff 08 00 	add    BYTE PTR [rsp+riz*8+0x8ffff],dh
    4682:	00 00                	add    BYTE PTR [rax],al
    4684:	00 00                	add    BYTE PTR [rax],al
    4686:	00 00                	add    BYTE PTR [rax],al
    4688:	10 00                	adc    BYTE PTR [rax],al
    468a:	00 00                	add    BYTE PTR [rax],al
    468c:	0c 03                	or     al,0x3
    468e:	00 00                	add    BYTE PTR [rax],al
    4690:	b0 e4                	mov    al,0xe4
    4692:	ff                   	(bad)
    4693:	ff 08                	dec    DWORD PTR [rax]
    4695:	00 00                	add    BYTE PTR [rax],al
    4697:	00 00                	add    BYTE PTR [rax],al
    4699:	00 00                	add    BYTE PTR [rax],al
    469b:	00 10                	add    BYTE PTR [rax],dl
    469d:	00 00                	add    BYTE PTR [rax],al
    469f:	00 20                	add    BYTE PTR [rax],ah
    46a1:	03 00                	add    eax,DWORD PTR [rax]
    46a3:	00 ac e4 ff ff 08 00 	add    BYTE PTR [rsp+riz*8+0x8ffff],ch
    46aa:	00 00                	add    BYTE PTR [rax],al
    46ac:	00 00                	add    BYTE PTR [rax],al
    46ae:	00 00                	add    BYTE PTR [rax],al
    46b0:	10 00                	adc    BYTE PTR [rax],al
    46b2:	00 00                	add    BYTE PTR [rax],al
    46b4:	34 03                	xor    al,0x3
    46b6:	00 00                	add    BYTE PTR [rax],al
    46b8:	a8 e4                	test   al,0xe4
    46ba:	ff                   	(bad)
    46bb:	ff 04 00             	inc    DWORD PTR [rax+rax*1]
    46be:	00 00                	add    BYTE PTR [rax],al
    46c0:	00 00                	add    BYTE PTR [rax],al
    46c2:	00 00                	add    BYTE PTR [rax],al
    46c4:	10 00                	adc    BYTE PTR [rax],al
    46c6:	00 00                	add    BYTE PTR [rax],al
    46c8:	48 03 00             	add    rax,QWORD PTR [rax]
    46cb:	00 a4 e4 ff ff 04 00 	add    BYTE PTR [rsp+riz*8+0x4ffff],ah
    46d2:	00 00                	add    BYTE PTR [rax],al
    46d4:	00 00                	add    BYTE PTR [rax],al
    46d6:	00 00                	add    BYTE PTR [rax],al
    46d8:	10 00                	adc    BYTE PTR [rax],al
    46da:	00 00                	add    BYTE PTR [rax],al
    46dc:	5c                   	pop    rsp
    46dd:	03 00                	add    eax,DWORD PTR [rax]
    46df:	00 a0 e4 ff ff 04    	add    BYTE PTR [rax+0x4ffffe4],ah
    46e5:	00 00                	add    BYTE PTR [rax],al
    46e7:	00 00                	add    BYTE PTR [rax],al
    46e9:	00 00                	add    BYTE PTR [rax],al
    46eb:	00 10                	add    BYTE PTR [rax],dl
    46ed:	00 00                	add    BYTE PTR [rax],al
    46ef:	00 70 03             	add    BYTE PTR [rax+0x3],dh
    46f2:	00 00                	add    BYTE PTR [rax],al
    46f4:	9c                   	pushf
    46f5:	e4 ff                	in     al,0xff
    46f7:	ff 04 00             	inc    DWORD PTR [rax+rax*1]
    46fa:	00 00                	add    BYTE PTR [rax],al
    46fc:	00 00                	add    BYTE PTR [rax],al
    46fe:	00 00                	add    BYTE PTR [rax],al
    4700:	10 00                	adc    BYTE PTR [rax],al
    4702:	00 00                	add    BYTE PTR [rax],al
    4704:	84 03                	test   BYTE PTR [rbx],al
    4706:	00 00                	add    BYTE PTR [rax],al
    4708:	98                   	cwde
    4709:	e4 ff                	in     al,0xff
    470b:	ff 04 00             	inc    DWORD PTR [rax+rax*1]
    470e:	00 00                	add    BYTE PTR [rax],al
    4710:	00 00                	add    BYTE PTR [rax],al
    4712:	00 00                	add    BYTE PTR [rax],al
    4714:	10 00                	adc    BYTE PTR [rax],al
    4716:	00 00                	add    BYTE PTR [rax],al
    4718:	98                   	cwde
    4719:	03 00                	add    eax,DWORD PTR [rax]
    471b:	00 94 e4 ff ff 04 00 	add    BYTE PTR [rsp+riz*8+0x4ffff],dl
    4722:	00 00                	add    BYTE PTR [rax],al
    4724:	00 00                	add    BYTE PTR [rax],al
    4726:	00 00                	add    BYTE PTR [rax],al
    4728:	10 00                	adc    BYTE PTR [rax],al
    472a:	00 00                	add    BYTE PTR [rax],al
    472c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    472d:	03 00                	add    eax,DWORD PTR [rax]
    472f:	00 90 e4 ff ff 05    	add    BYTE PTR [rax+0x5ffffe4],dl
    4735:	00 00                	add    BYTE PTR [rax],al
    4737:	00 00                	add    BYTE PTR [rax],al
    4739:	00 00                	add    BYTE PTR [rax],al
    473b:	00 10                	add    BYTE PTR [rax],dl
    473d:	00 00                	add    BYTE PTR [rax],al
    473f:	00 c0                	add    al,al
    4741:	03 00                	add    eax,DWORD PTR [rax]
    4743:	00 8c e4 ff ff 05 00 	add    BYTE PTR [rsp+riz*8+0x5ffff],cl
    474a:	00 00                	add    BYTE PTR [rax],al
    474c:	00 00                	add    BYTE PTR [rax],al
    474e:	00 00                	add    BYTE PTR [rax],al
    4750:	10 00                	adc    BYTE PTR [rax],al
    4752:	00 00                	add    BYTE PTR [rax],al
    4754:	d4                   	(bad)
    4755:	03 00                	add    eax,DWORD PTR [rax]
    4757:	00 88 e4 ff ff 05    	add    BYTE PTR [rax+0x5ffffe4],cl
    475d:	00 00                	add    BYTE PTR [rax],al
    475f:	00 00                	add    BYTE PTR [rax],al
    4761:	00 00                	add    BYTE PTR [rax],al
    4763:	00 10                	add    BYTE PTR [rax],dl
    4765:	00 00                	add    BYTE PTR [rax],al
    4767:	00 e8                	add    al,ch
    4769:	03 00                	add    eax,DWORD PTR [rax]
    476b:	00 84 e4 ff ff 05 00 	add    BYTE PTR [rsp+riz*8+0x5ffff],al
    4772:	00 00                	add    BYTE PTR [rax],al
    4774:	00 00                	add    BYTE PTR [rax],al
    4776:	00 00                	add    BYTE PTR [rax],al
    4778:	10 00                	adc    BYTE PTR [rax],al
    477a:	00 00                	add    BYTE PTR [rax],al
    477c:	fc                   	cld
    477d:	03 00                	add    eax,DWORD PTR [rax]
    477f:	00 80 e4 ff ff 05    	add    BYTE PTR [rax+0x5ffffe4],al
    4785:	00 00                	add    BYTE PTR [rax],al
    4787:	00 00                	add    BYTE PTR [rax],al
    4789:	00 00                	add    BYTE PTR [rax],al
    478b:	00 10                	add    BYTE PTR [rax],dl
    478d:	00 00                	add    BYTE PTR [rax],al
    478f:	00 10                	add    BYTE PTR [rax],dl
    4791:	04 00                	add    al,0x0
    4793:	00 7c e4 ff          	add    BYTE PTR [rsp+riz*8-0x1],bh
    4797:	ff 08                	dec    DWORD PTR [rax]
    4799:	00 00                	add    BYTE PTR [rax],al
    479b:	00 00                	add    BYTE PTR [rax],al
    479d:	00 00                	add    BYTE PTR [rax],al
    479f:	00 10                	add    BYTE PTR [rax],dl
    47a1:	00 00                	add    BYTE PTR [rax],al
    47a3:	00 24 04             	add    BYTE PTR [rsp+rax*1],ah
    47a6:	00 00                	add    BYTE PTR [rax],al
    47a8:	78 e4                	js     478e <_IO_stdin_used@@Base+0x78e>
    47aa:	ff                   	(bad)
    47ab:	ff 0a                	dec    DWORD PTR [rdx]
    47ad:	00 00                	add    BYTE PTR [rax],al
    47af:	00 00                	add    BYTE PTR [rax],al
    47b1:	00 00                	add    BYTE PTR [rax],al
    47b3:	00 10                	add    BYTE PTR [rax],dl
    47b5:	00 00                	add    BYTE PTR [rax],al
    47b7:	00 38                	add    BYTE PTR [rax],bh
    47b9:	04 00                	add    al,0x0
    47bb:	00 74 e4 ff          	add    BYTE PTR [rsp+riz*8-0x1],dh
    47bf:	ff 05 00 00 00 00    	inc    DWORD PTR [rip+0x0]        # 47c5 <_IO_stdin_used@@Base+0x7c5>
    47c5:	00 00                	add    BYTE PTR [rax],al
    47c7:	00 10                	add    BYTE PTR [rax],dl
    47c9:	00 00                	add    BYTE PTR [rax],al
    47cb:	00 4c 04 00          	add    BYTE PTR [rsp+rax*1+0x0],cl
    47cf:	00 70 e4             	add    BYTE PTR [rax-0x1c],dh
    47d2:	ff                   	(bad)
    47d3:	ff 05 00 00 00 00    	inc    DWORD PTR [rip+0x0]        # 47d9 <_IO_stdin_used@@Base+0x7d9>
    47d9:	00 00                	add    BYTE PTR [rax],al
    47db:	00 10                	add    BYTE PTR [rax],dl
    47dd:	00 00                	add    BYTE PTR [rax],al
    47df:	00 60 04             	add    BYTE PTR [rax+0x4],ah
    47e2:	00 00                	add    BYTE PTR [rax],al
    47e4:	6c                   	ins    BYTE PTR es:[rdi],dx
    47e5:	e4 ff                	in     al,0xff
    47e7:	ff 05 00 00 00 00    	inc    DWORD PTR [rip+0x0]        # 47ed <_IO_stdin_used@@Base+0x7ed>
    47ed:	00 00                	add    BYTE PTR [rax],al
    47ef:	00 10                	add    BYTE PTR [rax],dl
    47f1:	00 00                	add    BYTE PTR [rax],al
    47f3:	00 74 04 00          	add    BYTE PTR [rsp+rax*1+0x0],dh
    47f7:	00 68 e4             	add    BYTE PTR [rax-0x1c],ch
    47fa:	ff                   	(bad)
    47fb:	ff 08                	dec    DWORD PTR [rax]
    47fd:	00 00                	add    BYTE PTR [rax],al
    47ff:	00 00                	add    BYTE PTR [rax],al
    4801:	00 00                	add    BYTE PTR [rax],al
    4803:	00 10                	add    BYTE PTR [rax],dl
    4805:	00 00                	add    BYTE PTR [rax],al
    4807:	00 88 04 00 00 64    	add    BYTE PTR [rax+0x64000004],cl
    480d:	e4 ff                	in     al,0xff
    480f:	ff 0a                	dec    DWORD PTR [rdx]
    4811:	00 00                	add    BYTE PTR [rax],al
    4813:	00 00                	add    BYTE PTR [rax],al
    4815:	00 00                	add    BYTE PTR [rax],al
    4817:	00 10                	add    BYTE PTR [rax],dl
    4819:	00 00                	add    BYTE PTR [rax],al
    481b:	00 9c 04 00 00 60 e4 	add    BYTE PTR [rsp+rax*1-0x1ba00000],bl
    4822:	ff                   	(bad)
    4823:	ff 11                	call   QWORD PTR [rcx]
    4825:	00 00                	add    BYTE PTR [rax],al
    4827:	00 00                	add    BYTE PTR [rax],al
    4829:	00 00                	add    BYTE PTR [rax],al
    482b:	00 10                	add    BYTE PTR [rax],dl
    482d:	00 00                	add    BYTE PTR [rax],al
    482f:	00 b0 04 00 00 6c    	add    BYTE PTR [rax+0x6c000004],dh
    4835:	e4 ff                	in     al,0xff
    4837:	ff 11                	call   QWORD PTR [rcx]
    4839:	00 00                	add    BYTE PTR [rax],al
    483b:	00 00                	add    BYTE PTR [rax],al
    483d:	00 00                	add    BYTE PTR [rax],al
    483f:	00 10                	add    BYTE PTR [rax],dl
    4841:	00 00                	add    BYTE PTR [rax],al
    4843:	00 c4                	add    ah,al
    4845:	04 00                	add    al,0x0
    4847:	00 78 e4             	add    BYTE PTR [rax-0x1c],bh
    484a:	ff                   	(bad)
    484b:	ff 11                	call   QWORD PTR [rcx]
    484d:	00 00                	add    BYTE PTR [rax],al
    484f:	00 00                	add    BYTE PTR [rax],al
    4851:	00 00                	add    BYTE PTR [rax],al
    4853:	00 10                	add    BYTE PTR [rax],dl
    4855:	00 00                	add    BYTE PTR [rax],al
    4857:	00 d8                	add    al,bl
    4859:	04 00                	add    al,0x0
    485b:	00 84 e4 ff ff 15 00 	add    BYTE PTR [rsp+riz*8+0x15ffff],al
    4862:	00 00                	add    BYTE PTR [rax],al
    4864:	00 00                	add    BYTE PTR [rax],al
    4866:	00 00                	add    BYTE PTR [rax],al
    4868:	10 00                	adc    BYTE PTR [rax],al
    486a:	00 00                	add    BYTE PTR [rax],al
    486c:	ec                   	in     al,dx
    486d:	04 00                	add    al,0x0
    486f:	00 90 e4 ff ff 19    	add    BYTE PTR [rax+0x19ffffe4],dl
    4875:	00 00                	add    BYTE PTR [rax],al
    4877:	00 00                	add    BYTE PTR [rax],al
    4879:	00 00                	add    BYTE PTR [rax],al
    487b:	00 10                	add    BYTE PTR [rax],dl
    487d:	00 00                	add    BYTE PTR [rax],al
    487f:	00 00                	add    BYTE PTR [rax],al
    4881:	05 00 00 9c e4       	add    eax,0xe49c0000
    4886:	ff                   	(bad)
    4887:	ff 07                	inc    DWORD PTR [rdi]
    4889:	00 00                	add    BYTE PTR [rax],al
    488b:	00 00                	add    BYTE PTR [rax],al
    488d:	00 00                	add    BYTE PTR [rax],al
    488f:	00 10                	add    BYTE PTR [rax],dl
    4891:	00 00                	add    BYTE PTR [rax],al
    4893:	00 14 05 00 00 98 e4 	add    BYTE PTR [rax*1-0x1b680000],dl
    489a:	ff                   	(bad)
    489b:	ff 07                	inc    DWORD PTR [rdi]
    489d:	00 00                	add    BYTE PTR [rax],al
    489f:	00 00                	add    BYTE PTR [rax],al
    48a1:	00 00                	add    BYTE PTR [rax],al
    48a3:	00 10                	add    BYTE PTR [rax],dl
    48a5:	00 00                	add    BYTE PTR [rax],al
    48a7:	00 28                	add    BYTE PTR [rax],ch
    48a9:	05 00 00 94 e4       	add    eax,0xe4940000
    48ae:	ff                   	(bad)
    48af:	ff 06                	inc    DWORD PTR [rsi]
    48b1:	00 00                	add    BYTE PTR [rax],al
    48b3:	00 00                	add    BYTE PTR [rax],al
    48b5:	00 00                	add    BYTE PTR [rax],al
    48b7:	00 10                	add    BYTE PTR [rax],dl
    48b9:	00 00                	add    BYTE PTR [rax],al
    48bb:	00 3c 05 00 00 90 e4 	add    BYTE PTR [rax*1-0x1b700000],bh
    48c2:	ff                   	(bad)
    48c3:	ff 06                	inc    DWORD PTR [rsi]
    48c5:	00 00                	add    BYTE PTR [rax],al
    48c7:	00 00                	add    BYTE PTR [rax],al
    48c9:	00 00                	add    BYTE PTR [rax],al
    48cb:	00 10                	add    BYTE PTR [rax],dl
    48cd:	00 00                	add    BYTE PTR [rax],al
    48cf:	00 50 05             	add    BYTE PTR [rax+0x5],dl
    48d2:	00 00                	add    BYTE PTR [rax],al
    48d4:	8c e4                	mov    esp,fs
    48d6:	ff                   	(bad)
    48d7:	ff 07                	inc    DWORD PTR [rdi]
    48d9:	00 00                	add    BYTE PTR [rax],al
    48db:	00 00                	add    BYTE PTR [rax],al
    48dd:	00 00                	add    BYTE PTR [rax],al
    48df:	00 10                	add    BYTE PTR [rax],dl
    48e1:	00 00                	add    BYTE PTR [rax],al
    48e3:	00 64 05 00          	add    BYTE PTR [rbp+rax*1+0x0],ah
    48e7:	00 88 e4 ff ff 07    	add    BYTE PTR [rax+0x7ffffe4],cl
    48ed:	00 00                	add    BYTE PTR [rax],al
    48ef:	00 00                	add    BYTE PTR [rax],al
    48f1:	00 00                	add    BYTE PTR [rax],al
    48f3:	00 10                	add    BYTE PTR [rax],dl
    48f5:	00 00                	add    BYTE PTR [rax],al
    48f7:	00 78 05             	add    BYTE PTR [rax+0x5],bh
    48fa:	00 00                	add    BYTE PTR [rax],al
    48fc:	84 e4                	test   ah,ah
    48fe:	ff                   	(bad)
    48ff:	ff 07                	inc    DWORD PTR [rdi]
    4901:	00 00                	add    BYTE PTR [rax],al
    4903:	00 00                	add    BYTE PTR [rax],al
    4905:	00 00                	add    BYTE PTR [rax],al
    4907:	00 10                	add    BYTE PTR [rax],dl
    4909:	00 00                	add    BYTE PTR [rax],al
    490b:	00 8c 05 00 00 80 e4 	add    BYTE PTR [rbp+rax*1-0x1b800000],cl
    4912:	ff                   	(bad)
    4913:	ff 04 00             	inc    DWORD PTR [rax+rax*1]
    4916:	00 00                	add    BYTE PTR [rax],al
    4918:	00 00                	add    BYTE PTR [rax],al
    491a:	00 00                	add    BYTE PTR [rax],al
    491c:	10 00                	adc    BYTE PTR [rax],al
    491e:	00 00                	add    BYTE PTR [rax],al
    4920:	a0 05 00 00 7c e4 ff 	movabs al,ds:0x4ffffe47c000005
    4927:	ff 04 
    4929:	00 00                	add    BYTE PTR [rax],al
    492b:	00 00                	add    BYTE PTR [rax],al
    492d:	00 00                	add    BYTE PTR [rax],al
    492f:	00 10                	add    BYTE PTR [rax],dl
    4931:	00 00                	add    BYTE PTR [rax],al
    4933:	00 b4 05 00 00 78 e4 	add    BYTE PTR [rbp+rax*1-0x1b880000],dh
    493a:	ff                   	(bad)
    493b:	ff 19                	call   FWORD PTR [rcx]
    493d:	00 00                	add    BYTE PTR [rax],al
    493f:	00 00                	add    BYTE PTR [rax],al
    4941:	00 00                	add    BYTE PTR [rax],al
    4943:	00 10                	add    BYTE PTR [rax],dl
    4945:	00 00                	add    BYTE PTR [rax],al
    4947:	00 c8                	add    al,cl
    4949:	05 00 00 84 e4       	add    eax,0xe4840000
    494e:	ff                   	(bad)
    494f:	ff 13                	call   QWORD PTR [rbx]
    4951:	00 00                	add    BYTE PTR [rax],al
    4953:	00 00                	add    BYTE PTR [rax],al
    4955:	00 00                	add    BYTE PTR [rax],al
    4957:	00 10                	add    BYTE PTR [rax],dl
    4959:	00 00                	add    BYTE PTR [rax],al
    495b:	00 dc                	add    ah,bl
    495d:	05 00 00 90 e4       	add    eax,0xe4900000
    4962:	ff                   	(bad)
    4963:	ff 13                	call   QWORD PTR [rbx]
    4965:	00 00                	add    BYTE PTR [rax],al
    4967:	00 00                	add    BYTE PTR [rax],al
    4969:	00 00                	add    BYTE PTR [rax],al
    496b:	00 10                	add    BYTE PTR [rax],dl
    496d:	00 00                	add    BYTE PTR [rax],al
    496f:	00 f0                	add    al,dh
    4971:	05 00 00 9c e4       	add    eax,0xe49c0000
    4976:	ff                   	(bad)
    4977:	ff 0f                	dec    DWORD PTR [rdi]
    4979:	00 00                	add    BYTE PTR [rax],al
    497b:	00 00                	add    BYTE PTR [rax],al
    497d:	00 00                	add    BYTE PTR [rax],al
    497f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    4982:	00 00                	add    BYTE PTR [rax],al
    4984:	04 06                	add    al,0x6
    4986:	00 00                	add    BYTE PTR [rax],al
    4988:	98                   	cwde
    4989:	e4 ff                	in     al,0xff
    498b:	ff 16                	call   QWORD PTR [rsi]
    498d:	00 00                	add    BYTE PTR [rax],al
    498f:	00 00                	add    BYTE PTR [rax],al
    4991:	41 0e                	rex.B (bad)
    4993:	10 54 0e 08          	adc    BYTE PTR [rsi+rcx*1+0x8],dl
    4997:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    499a:	00 00                	add    BYTE PTR [rax],al
    499c:	1c 06                	sbb    al,0x6
    499e:	00 00                	add    BYTE PTR [rax],al
    49a0:	a0 e4 ff ff 33 00 00 	movabs al,ds:0x33ffffe4
    49a7:	00 00 
    49a9:	42 0e                	rex.X (bad)
    49ab:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    49ae:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    49b1:	20 83 03 8e 02 67    	and    BYTE PTR [rbx+0x67028e03],al
    49b7:	0e                   	(bad)
    49b8:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    49bb:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    49be:	08 00                	or     BYTE PTR [rax],al
    49c0:	28 00                	sub    BYTE PTR [rax],al
    49c2:	00 00                	add    BYTE PTR [rax],al
    49c4:	44 06                	rex.R (bad)
    49c6:	00 00                	add    BYTE PTR [rax],al
    49c8:	b8 e4 ff ff 75       	mov    eax,0x75ffffe4
    49cd:	00 00                	add    BYTE PTR [rax],al
    49cf:	00 00                	add    BYTE PTR [rax],al
    49d1:	42 0e                	rex.X (bad)
    49d3:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    49d6:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    49d9:	20 83 04 8e 03 8f    	and    BYTE PTR [rbx-0x70fc71fc],al
    49df:	02 02                	add    al,BYTE PTR [rdx]
    49e1:	6b 0e 18             	imul   ecx,DWORD PTR [rsi],0x18
    49e4:	42 0e                	rex.X (bad)
    49e6:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    49e9:	08 00                	or     BYTE PTR [rax],al
    49eb:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
    49ee:	00 00                	add    BYTE PTR [rax],al
    49f0:	70 06                	jo     49f8 <_IO_stdin_used@@Base+0x9f8>
    49f2:	00 00                	add    BYTE PTR [rax],al
    49f4:	0c e5                	or     al,0xe5
    49f6:	ff                   	(bad)
    49f7:	ff ad 00 00 00 00    	jmp    FWORD PTR [rbp+0x0]
    49fd:	42 0e                	rex.X (bad)
    49ff:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4a02:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4a05:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4a08:	28 41 0e             	sub    BYTE PTR [rcx+0xe],al
    4a0b:	30 83 06 8c 05 8d    	xor    BYTE PTR [rbx-0x72fa73fa],al
    4a11:	04 8e                	add    al,0x8e
    4a13:	03 8f 02 02 96 0e    	add    ecx,DWORD PTR [rdi+0xe960202]
    4a19:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    4a1c:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4a1f:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4a22:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4a25:	08 41 0e             	or     BYTE PTR [rcx+0xe],al
    4a28:	30 00                	xor    BYTE PTR [rax],al
    4a2a:	00 00                	add    BYTE PTR [rax],al
    4a2c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .preinit_array:

0000000000005d60 <.preinit_array>:
    5d60:	20 26                	and    BYTE PTR [rsi],ah
    5d62:	00 00                	add    BYTE PTR [rax],al
    5d64:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000005d68 <.init_array>:
    5d68:	a0                   	.byte 0xa0
    5d69:	22 00                	and    al,BYTE PTR [rax]
    5d6b:	00 00                	add    BYTE PTR [rax],al
    5d6d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000005d70 <.fini_array>:
    5d70:	60                   	(bad)
    5d71:	22 00                	and    al,BYTE PTR [rax]
    5d73:	00 00                	add    BYTE PTR [rax],al
    5d75:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000005d78 <.dynamic>:
    5d78:	01 00                	add    DWORD PTR [rax],eax
    5d7a:	00 00                	add    BYTE PTR [rax],al
    5d7c:	00 00                	add    BYTE PTR [rax],al
    5d7e:	00 00                	add    BYTE PTR [rax],al
    5d80:	81 01 00 00 00 00    	add    DWORD PTR [rcx],0x0
    5d86:	00 00                	add    BYTE PTR [rax],al
    5d88:	01 00                	add    DWORD PTR [rax],eax
    5d8a:	00 00                	add    BYTE PTR [rax],al
    5d8c:	00 00                	add    BYTE PTR [rax],al
    5d8e:	00 00                	add    BYTE PTR [rax],al
    5d90:	8b 01                	mov    eax,DWORD PTR [rcx]
    5d92:	00 00                	add    BYTE PTR [rax],al
    5d94:	00 00                	add    BYTE PTR [rax],al
    5d96:	00 00                	add    BYTE PTR [rax],al
    5d98:	01 00                	add    DWORD PTR [rax],eax
    5d9a:	00 00                	add    BYTE PTR [rax],al
    5d9c:	00 00                	add    BYTE PTR [rax],al
    5d9e:	00 00                	add    BYTE PTR [rax],al
    5da0:	9a                   	(bad)
    5da1:	01 00                	add    DWORD PTR [rax],eax
    5da3:	00 00                	add    BYTE PTR [rax],al
    5da5:	00 00                	add    BYTE PTR [rax],al
    5da7:	00 01                	add    BYTE PTR [rcx],al
    5da9:	00 00                	add    BYTE PTR [rax],al
    5dab:	00 00                	add    BYTE PTR [rax],al
    5dad:	00 00                	add    BYTE PTR [rax],al
    5daf:	00 a4 01 00 00 00 00 	add    BYTE PTR [rcx+rax*1+0x0],ah
    5db6:	00 00                	add    BYTE PTR [rax],al
    5db8:	0c 00                	or     al,0x0
    5dba:	00 00                	add    BYTE PTR [rax],al
    5dbc:	00 00                	add    BYTE PTR [rax],al
    5dbe:	00 00                	add    BYTE PTR [rax],al
    5dc0:	00 20                	add    BYTE PTR [rax],ah
    5dc2:	00 00                	add    BYTE PTR [rax],al
    5dc4:	00 00                	add    BYTE PTR [rax],al
    5dc6:	00 00                	add    BYTE PTR [rax],al
    5dc8:	0d 00 00 00 00       	or     eax,0x0
    5dcd:	00 00                	add    BYTE PTR [rax],al
    5dcf:	00 f8                	add    al,bh
    5dd1:	2f                   	(bad)
    5dd2:	00 00                	add    BYTE PTR [rax],al
    5dd4:	00 00                	add    BYTE PTR [rax],al
    5dd6:	00 00                	add    BYTE PTR [rax],al
    5dd8:	20 00                	and    BYTE PTR [rax],al
    5dda:	00 00                	add    BYTE PTR [rax],al
    5ddc:	00 00                	add    BYTE PTR [rax],al
    5dde:	00 00                	add    BYTE PTR [rax],al
    5de0:	60                   	(bad)
    5de1:	5d                   	pop    rbp
    5de2:	00 00                	add    BYTE PTR [rax],al
    5de4:	00 00                	add    BYTE PTR [rax],al
    5de6:	00 00                	add    BYTE PTR [rax],al
    5de8:	21 00                	and    DWORD PTR [rax],eax
    5dea:	00 00                	add    BYTE PTR [rax],al
    5dec:	00 00                	add    BYTE PTR [rax],al
    5dee:	00 00                	add    BYTE PTR [rax],al
    5df0:	08 00                	or     BYTE PTR [rax],al
    5df2:	00 00                	add    BYTE PTR [rax],al
    5df4:	00 00                	add    BYTE PTR [rax],al
    5df6:	00 00                	add    BYTE PTR [rax],al
    5df8:	19 00                	sbb    DWORD PTR [rax],eax
    5dfa:	00 00                	add    BYTE PTR [rax],al
    5dfc:	00 00                	add    BYTE PTR [rax],al
    5dfe:	00 00                	add    BYTE PTR [rax],al
    5e00:	68 5d 00 00 00       	push   0x5d
    5e05:	00 00                	add    BYTE PTR [rax],al
    5e07:	00 1b                	add    BYTE PTR [rbx],bl
    5e09:	00 00                	add    BYTE PTR [rax],al
    5e0b:	00 00                	add    BYTE PTR [rax],al
    5e0d:	00 00                	add    BYTE PTR [rax],al
    5e0f:	00 08                	add    BYTE PTR [rax],cl
    5e11:	00 00                	add    BYTE PTR [rax],al
    5e13:	00 00                	add    BYTE PTR [rax],al
    5e15:	00 00                	add    BYTE PTR [rax],al
    5e17:	00 1a                	add    BYTE PTR [rdx],bl
    5e19:	00 00                	add    BYTE PTR [rax],al
    5e1b:	00 00                	add    BYTE PTR [rax],al
    5e1d:	00 00                	add    BYTE PTR [rax],al
    5e1f:	00 70 5d             	add    BYTE PTR [rax+0x5d],dh
    5e22:	00 00                	add    BYTE PTR [rax],al
    5e24:	00 00                	add    BYTE PTR [rax],al
    5e26:	00 00                	add    BYTE PTR [rax],al
    5e28:	1c 00                	sbb    al,0x0
    5e2a:	00 00                	add    BYTE PTR [rax],al
    5e2c:	00 00                	add    BYTE PTR [rax],al
    5e2e:	00 00                	add    BYTE PTR [rax],al
    5e30:	08 00                	or     BYTE PTR [rax],al
    5e32:	00 00                	add    BYTE PTR [rax],al
    5e34:	00 00                	add    BYTE PTR [rax],al
    5e36:	00 00                	add    BYTE PTR [rax],al
    5e38:	f5                   	cmc
    5e39:	fe                   	(bad)
    5e3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e3d:	00 00                	add    BYTE PTR [rax],al
    5e3f:	00 d8                	add    al,bl
    5e41:	03 00                	add    eax,DWORD PTR [rax]
    5e43:	00 00                	add    BYTE PTR [rax],al
    5e45:	00 00                	add    BYTE PTR [rax],al
    5e47:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5e4d <_IO_stdin_used@@Base+0x1e4d>
    5e4d:	00 00                	add    BYTE PTR [rax],al
    5e4f:	00 f8                	add    al,bh
    5e51:	0f 00 00             	sldt   WORD PTR [rax]
    5e54:	00 00                	add    BYTE PTR [rax],al
    5e56:	00 00                	add    BYTE PTR [rax],al
    5e58:	06                   	(bad)
    5e59:	00 00                	add    BYTE PTR [rax],al
    5e5b:	00 00                	add    BYTE PTR [rax],al
    5e5d:	00 00                	add    BYTE PTR [rax],al
    5e5f:	00 50 06             	add    BYTE PTR [rax+0x6],dl
    5e62:	00 00                	add    BYTE PTR [rax],al
    5e64:	00 00                	add    BYTE PTR [rax],al
    5e66:	00 00                	add    BYTE PTR [rax],al
    5e68:	0a 00                	or     al,BYTE PTR [rax]
    5e6a:	00 00                	add    BYTE PTR [rax],al
    5e6c:	00 00                	add    BYTE PTR [rax],al
    5e6e:	00 00                	add    BYTE PTR [rax],al
    5e70:	b9 04 00 00 00       	mov    ecx,0x4
    5e75:	00 00                	add    BYTE PTR [rax],al
    5e77:	00 0b                	add    BYTE PTR [rbx],cl
    5e79:	00 00                	add    BYTE PTR [rax],al
    5e7b:	00 00                	add    BYTE PTR [rax],al
    5e7d:	00 00                	add    BYTE PTR [rax],al
    5e7f:	00 18                	add    BYTE PTR [rax],bl
    5e81:	00 00                	add    BYTE PTR [rax],al
    5e83:	00 00                	add    BYTE PTR [rax],al
    5e85:	00 00                	add    BYTE PTR [rax],al
    5e87:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 5e8d <_IO_stdin_used@@Base+0x1e8d>
	...
    5e95:	00 00                	add    BYTE PTR [rax],al
    5e97:	00 03                	add    BYTE PTR [rbx],al
    5e99:	00 00                	add    BYTE PTR [rax],al
    5e9b:	00 00                	add    BYTE PTR [rax],al
    5e9d:	00 00                	add    BYTE PTR [rax],al
    5e9f:	00 e8                	add    al,ch
    5ea1:	5f                   	pop    rdi
    5ea2:	00 00                	add    BYTE PTR [rax],al
    5ea4:	00 00                	add    BYTE PTR [rax],al
    5ea6:	00 00                	add    BYTE PTR [rax],al
    5ea8:	02 00                	add    al,BYTE PTR [rax]
    5eaa:	00 00                	add    BYTE PTR [rax],al
    5eac:	00 00                	add    BYTE PTR [rax],al
    5eae:	00 00                	add    BYTE PTR [rax],al
    5eb0:	40 02 00             	rex add al,BYTE PTR [rax]
    5eb3:	00 00                	add    BYTE PTR [rax],al
    5eb5:	00 00                	add    BYTE PTR [rax],al
    5eb7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    5eba:	00 00                	add    BYTE PTR [rax],al
    5ebc:	00 00                	add    BYTE PTR [rax],al
    5ebe:	00 00                	add    BYTE PTR [rax],al
    5ec0:	07                   	(bad)
    5ec1:	00 00                	add    BYTE PTR [rax],al
    5ec3:	00 00                	add    BYTE PTR [rax],al
    5ec5:	00 00                	add    BYTE PTR [rax],al
    5ec7:	00 17                	add    BYTE PTR [rdi],dl
    5ec9:	00 00                	add    BYTE PTR [rax],al
    5ecb:	00 00                	add    BYTE PTR [rax],al
    5ecd:	00 00                	add    BYTE PTR [rax],al
    5ecf:	00 98 17 00 00 00    	add    BYTE PTR [rax+0x17],bl
    5ed5:	00 00                	add    BYTE PTR [rax],al
    5ed7:	00 07                	add    BYTE PTR [rdi],al
    5ed9:	00 00                	add    BYTE PTR [rax],al
    5edb:	00 00                	add    BYTE PTR [rax],al
    5edd:	00 00                	add    BYTE PTR [rax],al
    5edf:	00 d0                	add    al,dl
    5ee1:	15 00 00 00 00       	adc    eax,0x0
    5ee6:	00 00                	add    BYTE PTR [rax],al
    5ee8:	08 00                	or     BYTE PTR [rax],al
    5eea:	00 00                	add    BYTE PTR [rax],al
    5eec:	00 00                	add    BYTE PTR [rax],al
    5eee:	00 00                	add    BYTE PTR [rax],al
    5ef0:	c8 01 00 00          	enter  0x1,0x0
    5ef4:	00 00                	add    BYTE PTR [rax],al
    5ef6:	00 00                	add    BYTE PTR [rax],al
    5ef8:	09 00                	or     DWORD PTR [rax],eax
    5efa:	00 00                	add    BYTE PTR [rax],al
    5efc:	00 00                	add    BYTE PTR [rax],al
    5efe:	00 00                	add    BYTE PTR [rax],al
    5f00:	18 00                	sbb    BYTE PTR [rax],al
    5f02:	00 00                	add    BYTE PTR [rax],al
    5f04:	00 00                	add    BYTE PTR [rax],al
    5f06:	00 00                	add    BYTE PTR [rax],al
    5f08:	fb                   	sti
    5f09:	ff                   	(bad)
    5f0a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5f0d:	00 00                	add    BYTE PTR [rax],al
    5f0f:	00 00                	add    BYTE PTR [rax],al
    5f11:	00 00                	add    BYTE PTR [rax],al
    5f13:	08 00                	or     BYTE PTR [rax],al
    5f15:	00 00                	add    BYTE PTR [rax],al
    5f17:	00 fe                	add    dh,bh
    5f19:	ff                   	(bad)
    5f1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5f1d:	00 00                	add    BYTE PTR [rax],al
    5f1f:	00 80 15 00 00 00    	add    BYTE PTR [rax+0x15],al
    5f25:	00 00                	add    BYTE PTR [rax],al
    5f27:	00 ff                	add    bh,bh
    5f29:	ff                   	(bad)
    5f2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5f2d:	00 00                	add    BYTE PTR [rax],al
    5f2f:	00 02                	add    BYTE PTR [rdx],al
    5f31:	00 00                	add    BYTE PTR [rax],al
    5f33:	00 00                	add    BYTE PTR [rax],al
    5f35:	00 00                	add    BYTE PTR [rax],al
    5f37:	00 f0                	add    al,dh
    5f39:	ff                   	(bad)
    5f3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5f3d:	00 00                	add    BYTE PTR [rax],al
    5f3f:	00 b2 14 00 00 00    	add    BYTE PTR [rdx+0x14],dh
    5f45:	00 00                	add    BYTE PTR [rax],al
    5f47:	00 f9                	add    cl,bh
    5f49:	ff                   	(bad)
    5f4a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5f4d:	00 00                	add    BYTE PTR [rax],al
    5f4f:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...

Disassembly of section .got:

0000000000005fa8 <.got>:
	...
    5fc8:	e0 2f                	loopne 5ff9 <_IO_stdin_used@@Base+0x1ff9>
	...

Disassembly of section .got.plt:

0000000000005fe8 <.got.plt>:
    5fe8:	78 5d                	js     6047 <_IO_stdin_used@@Base+0x2047>
	...
    5ffe:	00 00                	add    BYTE PTR [rax],al
    6000:	36 20 00             	ss and BYTE PTR [rax],al
    6003:	00 00                	add    BYTE PTR [rax],al
    6005:	00 00                	add    BYTE PTR [rax],al
    6007:	00 46 20             	add    BYTE PTR [rsi+0x20],al
    600a:	00 00                	add    BYTE PTR [rax],al
    600c:	00 00                	add    BYTE PTR [rax],al
    600e:	00 00                	add    BYTE PTR [rax],al
    6010:	56                   	push   rsi
    6011:	20 00                	and    BYTE PTR [rax],al
    6013:	00 00                	add    BYTE PTR [rax],al
    6015:	00 00                	add    BYTE PTR [rax],al
    6017:	00 66 20             	add    BYTE PTR [rsi+0x20],ah
    601a:	00 00                	add    BYTE PTR [rax],al
    601c:	00 00                	add    BYTE PTR [rax],al
    601e:	00 00                	add    BYTE PTR [rax],al
    6020:	76 20                	jbe    6042 <_IO_stdin_used@@Base+0x2042>
    6022:	00 00                	add    BYTE PTR [rax],al
    6024:	00 00                	add    BYTE PTR [rax],al
    6026:	00 00                	add    BYTE PTR [rax],al
    6028:	86 20                	xchg   BYTE PTR [rax],ah
    602a:	00 00                	add    BYTE PTR [rax],al
    602c:	00 00                	add    BYTE PTR [rax],al
    602e:	00 00                	add    BYTE PTR [rax],al
    6030:	96                   	xchg   esi,eax
    6031:	20 00                	and    BYTE PTR [rax],al
    6033:	00 00                	add    BYTE PTR [rax],al
    6035:	00 00                	add    BYTE PTR [rax],al
    6037:	00 a6 20 00 00 00    	add    BYTE PTR [rsi+0x20],ah
    603d:	00 00                	add    BYTE PTR [rax],al
    603f:	00 b6 20 00 00 00    	add    BYTE PTR [rsi+0x20],dh
    6045:	00 00                	add    BYTE PTR [rax],al
    6047:	00 c6                	add    dh,al
    6049:	20 00                	and    BYTE PTR [rax],al
    604b:	00 00                	add    BYTE PTR [rax],al
    604d:	00 00                	add    BYTE PTR [rax],al
    604f:	00 d6                	add    dh,dl
    6051:	20 00                	and    BYTE PTR [rax],al
    6053:	00 00                	add    BYTE PTR [rax],al
    6055:	00 00                	add    BYTE PTR [rax],al
    6057:	00 e6                	add    dh,ah
    6059:	20 00                	and    BYTE PTR [rax],al
    605b:	00 00                	add    BYTE PTR [rax],al
    605d:	00 00                	add    BYTE PTR [rax],al
    605f:	00 f6                	add    dh,dh
    6061:	20 00                	and    BYTE PTR [rax],al
    6063:	00 00                	add    BYTE PTR [rax],al
    6065:	00 00                	add    BYTE PTR [rax],al
    6067:	00 06                	add    BYTE PTR [rsi],al
    6069:	21 00                	and    DWORD PTR [rax],eax
    606b:	00 00                	add    BYTE PTR [rax],al
    606d:	00 00                	add    BYTE PTR [rax],al
    606f:	00 16                	add    BYTE PTR [rsi],dl
    6071:	21 00                	and    DWORD PTR [rax],eax
    6073:	00 00                	add    BYTE PTR [rax],al
    6075:	00 00                	add    BYTE PTR [rax],al
    6077:	00 26                	add    BYTE PTR [rsi],ah
    6079:	21 00                	and    DWORD PTR [rax],eax
    607b:	00 00                	add    BYTE PTR [rax],al
    607d:	00 00                	add    BYTE PTR [rax],al
    607f:	00 36                	add    BYTE PTR [rsi],dh
    6081:	21 00                	and    DWORD PTR [rax],eax
    6083:	00 00                	add    BYTE PTR [rax],al
    6085:	00 00                	add    BYTE PTR [rax],al
    6087:	00 46 21             	add    BYTE PTR [rsi+0x21],al
    608a:	00 00                	add    BYTE PTR [rax],al
    608c:	00 00                	add    BYTE PTR [rax],al
    608e:	00 00                	add    BYTE PTR [rax],al
    6090:	56                   	push   rsi
    6091:	21 00                	and    DWORD PTR [rax],eax
    6093:	00 00                	add    BYTE PTR [rax],al
    6095:	00 00                	add    BYTE PTR [rax],al
    6097:	00 66 21             	add    BYTE PTR [rsi+0x21],ah
    609a:	00 00                	add    BYTE PTR [rax],al
    609c:	00 00                	add    BYTE PTR [rax],al
    609e:	00 00                	add    BYTE PTR [rax],al
    60a0:	76 21                	jbe    60c3 <__data_start@@Base+0x3>
    60a2:	00 00                	add    BYTE PTR [rax],al
    60a4:	00 00                	add    BYTE PTR [rax],al
    60a6:	00 00                	add    BYTE PTR [rax],al
    60a8:	86 21                	xchg   BYTE PTR [rcx],ah
    60aa:	00 00                	add    BYTE PTR [rax],al
    60ac:	00 00                	add    BYTE PTR [rax],al
    60ae:	00 00                	add    BYTE PTR [rax],al
    60b0:	96                   	xchg   esi,eax
    60b1:	21 00                	and    DWORD PTR [rax],eax
    60b3:	00 00                	add    BYTE PTR [rax],al
    60b5:	00 00                	add    BYTE PTR [rax],al
    60b7:	00 a6 21 00 00 00    	add    BYTE PTR [rsi+0x21],ah
    60bd:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

00000000000060c0 <__data_start@@Base>:
	...
    60c8:	c8 60 00 00          	enter  0x60,0x0
    60cc:	00 00                	add    BYTE PTR [rax],al
	...

00000000000060d0 <binsh@@Base>:
    60d0:	1f                   	(bad)
    60d1:	41 00 00             	add    BYTE PTR [r8],al
	...

00000000000060e0 <address_taken@@Base>:
    60e0:	d0 2f                	shr    BYTE PTR [rdi],1
    60e2:	00 00                	add    BYTE PTR [rax],al
    60e4:	00 00                	add    BYTE PTR [rax],al
    60e6:	00 00                	add    BYTE PTR [rax],al
    60e8:	e8 2f 00 00 00       	call   611c <_edata@@Base+0xc>
    60ed:	00 00                	add    BYTE PTR [rax],al
    60ef:	00 f0                	add    al,dh
    60f1:	2f                   	(bad)
    60f2:	00 00                	add    BYTE PTR [rax],al
    60f4:	00 00                	add    BYTE PTR [rax],al
    60f6:	00 00                	add    BYTE PTR [rax],al
    60f8:	d8 2f                	fsubr  DWORD PTR [rdi]
    60fa:	00 00                	add    BYTE PTR [rax],al
    60fc:	00 00                	add    BYTE PTR [rax],al
    60fe:	00 00                	add    BYTE PTR [rax],al
    6100:	b0 2f                	mov    al,0x2f
    6102:	00 00                	add    BYTE PTR [rax],al
    6104:	00 00                	add    BYTE PTR [rax],al
    6106:	00 00                	add    BYTE PTR [rax],al
    6108:	c0 2f 00             	shr    BYTE PTR [rdi],0x0
    610b:	00 00                	add    BYTE PTR [rax],al
    610d:	00 00                	add    BYTE PTR [rax],al
	...
